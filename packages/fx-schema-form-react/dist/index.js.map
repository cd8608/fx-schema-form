{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 59af2ea01b361f4941cf","webpack:///external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}","webpack:///./src/models/index.tsx","webpack:///external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}","webpack:///external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}","webpack:///./src/factory.tsx","webpack:///external {\"root\":\"SFC\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/libs/merge.tsx","webpack:///./src/utils.tsx","webpack:///./src/components/form/index.tsx","webpack:///external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}","webpack:///./src/reducers/reducer.tsx","webpack:///./src/libs/tree.tsx","webpack:///./src/components/formitem/index.tsx","webpack:///./src/components/default.props.tsx","webpack:///./src/index.tsx","webpack:///./src/hocs/index.tsx","webpack:///./src/hocs/merge.tsx","webpack:///./src/hocs/utils.tsx","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}","webpack:///./src/hocs/theme.tsx","webpack:///./src/hocs/field.tsx","webpack:///./src/hocs/array.tsx","webpack:///./src/hocs/validate.tsx","webpack:///./src/hocs/make.tsx","webpack:///./src/hocs/temp.tsx","webpack:///./src/hocs/data.tsx","webpack:///external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}","webpack:///./src/hocs/resetkey.tsx","webpack:///./src/reducer.tsx","webpack:///./src/reducers/schema.form.tsx","webpack:///external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}","webpack:///./src/components/form/component.tsx","webpack:///./src/components/form/container.tsx","webpack:///./src/components/formitem/component.tsx","webpack:///external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}","webpack:///./src/components/formitem/container.tsx","webpack:///external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}","webpack:///./src/fields/index.tsx","webpack:///./src/fields/normal.tsx","webpack:///./src/fields/object.tsx","webpack:///./src/fields/array.tsx","webpack:///./src/libs/dec.tsx","webpack:///external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_22__","__WEBPACK_EXTERNAL_MODULE_30__","__WEBPACK_EXTERNAL_MODULE_34__","__WEBPACK_EXTERNAL_MODULE_39__","__WEBPACK_EXTERNAL_MODULE_41__","__WEBPACK_EXTERNAL_MODULE_47__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","schemaFormTypes","hoc","widget","template","field","reducerFactory","__WEBPACK_IMPORTED_MODULE_0_fx_schema_form_core__","hocFactory","themeFactory","__WEBPACK_IMPORTED_MODULE_1__hocs__","forEach","add","__WEBPACK_IMPORTED_MODULE_2__reducer__","__webpack_exports__","mergeDeep","param1","param2","schema","_typeof","keys","length","__WEBPACK_IMPORTED_MODULE_0_immutable__","isIterable","isStack","schemaType","mergeFnc","Error","concat","isMap","merge","op","type","constructor","toOrderedSet","doSetOp","customMerge","isSet","merged","value","key","has","subSchema","undefined","set","isProd","NODE_ENV","__WEBPACK_IMPORTED_MODULE_0__component__","propTypes","assign","__WEBPACK_IMPORTED_MODULE_1__default_props__","TreeMap","parent","children","addChild","curNode","child","shift","isNumber","Number","contains","toString","push","getKey","getIndexInParent","getCurrentKeys","_child","containPath","node","removeFromParent","index","splice","insertToFromParent","toIndex","curIndex","splitIndex","clearFunc","arguments","DefaultPropsTypeCheck","schemaId","__WEBPACK_IMPORTED_MODULE_0_prop_types___default","a","string","isRequired","uiSchema","parentKeys","array","globalOptions","ajv","arrayIndex","number","arrayLevel","formItemData","any","formItemMeta","ArrayItemComponent","defaultTheme","tempFactory","fieldFactory","widgetFactory","__WEBPACK_IMPORTED_MODULE_4__fields__","__WEBPACK_IMPORTED_MODULE_1__factory__","__WEBPACK_IMPORTED_MODULE_6__libs_dec__","bind","schemaFormDec","__WEBPACK_IMPORTED_MODULE_5__libs_tree__","SchemaForm","__WEBPACK_IMPORTED_MODULE_2__components__","__WEBPACK_IMPORTED_MODULE_3__models__","__WEBPACK_IMPORTED_MODULE_7__libs_merge__","hocs","__WEBPACK_IMPORTED_MODULE_0__merge__","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__theme__","__WEBPACK_IMPORTED_MODULE_3__field__","__WEBPACK_IMPORTED_MODULE_4__array__","__WEBPACK_IMPORTED_MODULE_5__validate__","__WEBPACK_IMPORTED_MODULE_6__make__","__WEBPACK_IMPORTED_MODULE_7__temp__","__WEBPACK_IMPORTED_MODULE_8__data__","__WEBPACK_IMPORTED_MODULE_9__resetkey__","Component","_PureComponent","MergeComponentHoc","props","originKeys","__WEBPACK_IMPORTED_MODULE_1_fx_schema_form_core__","uiSchemas","_this","_mergeUiSchemaList","mergeUiSchemaList","map","v","mergeKeys","mergeSchema","_props$arrayLevel","arrayLevelCopy","reverse","pop","render","_a","extraProps","__rest","__WEBPACK_IMPORTED_MODULE_0_react___default","createElement","mergeSchemaList","__WEBPACK_IMPORTED_MODULE_0_react__","normalizeDataPath","dataPath","dataKeys","replace","split","isInteger","slice","unshift","__WEBPACK_IMPORTED_MODULE_2_fx_schema_form_core__","join","__WEBPACK_IMPORTED_MODULE_1_react___default","getTitle","getPathKeys","getOptions","getRequiredKeys","getDefaultData","getActions","getPathProps","path","propsCur","raw","actions","__WEBPACK_IMPORTED_MODULE_7__factory__","reducerKey","element","includeKeys","excludeKeys","Array","_ref","category","_ref$uiSchema","options","_uiSchema$type","optionsArray","ks","__WEBPACK_IMPORTED_MODULE_3_immutable___default","Map","fromJS","hasIn","getIn","__WEBPACK_IMPORTED_MODULE_5__models__","extraSettings","_key","reduce","prev","next","__WEBPACK_IMPORTED_MODULE_3_immutable__","__WEBPACK_IMPORTED_MODULE_6__libs_merge__","*","toJS","_ref2","title","_key2","sets","keyTitle","keysCopy","keysResolve","__WEBPACK_IMPORTED_MODULE_4_resolve_pathname___default","data","defaultData","needMerge","defaultValue","mergeData","dataOfType","mData","validate","properties","_context","t1","__WEBPACK_IMPORTED_MODULE_1_react__","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","hasOwn","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","then","result","done","Context","reset","skipTempReset","sent","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","theme","nsFactory","currentTheme","_props","FieldComponent","WidgetComponent","calcField","calcWidget","console","error","warn","commHoc","__WEBPACK_IMPORTED_MODULE_2_recompose__","addItem","__awaiter","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default","_callee","_props$uiSchema","items","dData","removeItem","moveItem","moveToItem","initArrayComponent","ArrayComponent","_props$uiSchema2","ArrayComponentHoc","_this2","initArrayComponents","_inherits","hocOptions","__decorate","__metadata","ArrayPureComponentHoc","_React$PureComponent","PureComponent","meta","timeId","validateFunc","schemaInCache","dirty","isValid","isLoading","setTimeout","updateItemMeta","errorText","schemaPath","getSchema","$id","__WEBPACK_IMPORTED_MODULE_3_fx_schema_form_core__","$ref","compile","errors","t0","errorsText","dataVar","message","clearTimeout","updateItemData","noChange","_context2","t2","t4","t5","t6","removeItemData","combineActions","updateItemDataRaw","updateItemMetaRaw","removeItemDataRaw","settings","__WEBPACK_IMPORTED_MODULE_2_immutable___default","ComponentWithHocs","__WEBPACK_IMPORTED_MODULE_1_recompose__","apply","hoc1","tempField","templates","getTemplates","Temp","tempOptions","__WEBPACK_IMPORTED_MODULE_2__models__","TempWithHoc","tempHocs","tempKey","_props2","temps","typeDefaultOptions","TempComponent","getTemplate","tmp","String","tml","idx","fxSelectorCreator","__WEBPACK_IMPORTED_MODULE_2_reselect__","getItemDataHoc","rootReducerKey","dataLength","List","isList","size","metaKeys","childNode","filter","val","treeNode","rootNode","formItemNode","rtn","DataComponentHoc","ComponentWithHoc","_this$props","_ref$keys","__WEBPACK_IMPORTED_MODULE_4__models__","__WEBPACK_IMPORTED_MODULE_1_react_redux__","normalOptions","__WEBPACK_IMPORTED_MODULE_1_immutable__","schemaFormReducer","resolveKeys","mKeys","setIn","SchemaFormReducer","initialState","createForm","__WEBPACK_IMPORTED_MODULE_0_redux_act__","__WEBPACK_IMPORTED_MODULE_5__utils__","removeForm","init","store","action","assigned","assignTo","removeFormHandle","removeIn","combineActionsHandle","stateNew","act2","reducer","removeItemDataMetaHandle","createFormHandle","remove","__WEBPACK_IMPORTED_MODULE_3__libs_tree__","stateData","updateItemDataHandle","_ref3","updateItemMetaHandle","addItemDataHandle","_ref4","collapsing","removeItemHandle","_ref5","moveItemHandle","_ref6","childNodeTo","curItemData","insert","_ref7","__WEBPACK_IMPORTED_MODULE_4__libs_merge__","newRoot","_createReducer","RootComponent","formItemList","uiScehma","__WEBPACK_IMPORTED_MODULE_2__formitem_index__","__WEBPACK_IMPORTED_MODULE_1__container__","__WEBPACK_IMPORTED_MODULE_0_recompose__","SchemaFormItem","FieldComponentWithHoc","fieldHocs","__WEBPACK_IMPORTED_MODULE_1_redux__","__WEBPACK_IMPORTED_MODULE_3__utils__","__WEBPACK_IMPORTED_MODULE_2__container__","__WEBPACK_IMPORTED_MODULE_0__normal__","__WEBPACK_IMPORTED_MODULE_1__object__","__WEBPACK_IMPORTED_MODULE_2__array__","NormalField","fieldOptions","WidgetComponentWithHoc","widgetHocs","_name$default","default","ObjectField","SchemaFormWithHoc","__WEBPACK_IMPORTED_MODULE_1__components_form__","formHocs","__WEBPACK_IMPORTED_MODULE_3_recompose__","Root","_name","arrayFieldStyle","width","height","ArrayFieldComponent","style","ArrayField","initComponent","SchemaFormItemWithHoc","formItemHocs","__WEBPACK_IMPORTED_MODULE_3__components_form__","renderItem","_props2$arrayLevel","_props3","fieldIncludeKeys","fieldExcludeKeys","SchemaFormComponentHoc","_validateAll","validateAll","resetForm","__WEBPACK_IMPORTED_MODULE_6__models__","__WEBPACK_IMPORTED_MODULE_4_immutable__","hocIncludeKeys","hocExcludeKeys","__WEBPACK_IMPORTED_MODULE_3_react_redux__","rootKeys","__WEBPACK_IMPORTED_MODULE_8__reducers_reducer__","isValidating","curAjv","dataRaw","$validateBeforeData","$validateAfterData","__WEBPACK_IMPORTED_MODULE_5_ajv__","errMsg","formKey","shouldResetForm","initData","_props$initData"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"reselect\"), require(\"redux-act\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SFR\", [\"react\", \"recompose\", \"immutable\", \"fx-schema-form-core\", \"react-redux\", \"resolve-pathname\", \"reselect\", \"redux-act\", \"redux\", \"prop-typese\", \"ajv\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SFR\"] = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"reselect\"), require(\"redux-act\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse\n\t\troot[\"SFR\"] = factory(root[\"React\"], root[\"recompose\"], root[\"Immutable\"], root[\"SFC\"], root[\"react-redux\"], root[\"resolve-pathname\"], root[\"reselect\"], root[\"redux-act\"], root[\"Redux\"], root[\"prop-types\"], root[\"Ajv\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_34__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_41__, __WEBPACK_EXTERNAL_MODULE_47__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 59af2ea01b361f4941cf","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}\n// module id = 0\n// module chunks = 0","import React from \"react\";\nimport { Map } from \"immutable\";\nimport { BaseFactory, UiSchema } from \"fx-schema-form-core\";\nimport { DefaultProps } from \"../components\";\n\nexport interface SchemaFormNs<F, T, W> {\n    fieldFactory: BaseFactory<F>;\n    tempFactory: BaseFactory<T>;\n    widgetFactory: BaseFactory<W>;\n}\n\nexport type RC<P, T> = new () => React.PureComponent<P, T>;\nexport interface FxUiSchema extends UiSchema {\n    // 定义参数，与全局的配置参数格式一致；会覆盖全局的配置参数，用于单个FormSchemaItem的配置。\n    options?: Map<string, any>;\n    // \b一般用于object和array的对象；用于渲染下级显示的key。\n    children?: Array<UiSchema | string>;\n    // 主题样式配置（default: default）\n    theme?: string;\n    // 定义字段。默认使用JsonSchema的type来确定field，也可以使用这个来指定字段。\n    field?: string;\n    // 定义显示组件。每种数据类型都可以使用不同的组件来渲染。\n    widget?: string;\n    // 定义包裹的模板数组\n    temps?: string[];\n    // 是否是required，自动添加\n    isRequired?: boolean;\n    // $ref的keys，自动添加\n    refKeys?: string[];\n    // keys的原始形式，不会对-做数字化处理（只有数组类型的originKeys和keys是不同的）\n    originKeys?: string[];\n    // 是否只读\n    readonly?: boolean;\n    // 用于包裹整个ShemaFormItem的hoc数组\n    hocs?: any[];\n    // 数据更改的时候触发的方法\n    onValueChanged?: <T>(props: DefaultProps, data: T) => void;\n    // 数组的默认添加数据\n    defaultData?: any;\n}\nexport type NsFactory = SchemaFormNs<RC<any, any>, RC<any, any>, RC<any, any>>;\n\nexport const schemaFormTypes = {\n    hoc: \"hoc\",\n    widget: \"widget\",\n    template: \"temp\",\n    field: \"field\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}\n// module id = 3\n// module chunks = 0","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { FxReducer } from \"./reducers/reducer\";\nimport { DefaultProps } from \"./components\";\nimport { FxUiSchema, RC, NsFactory, SchemaFormNs } from \"./models\";\nimport { hocs } from \"./hocs\";\nimport { schemaFormReducer } from \"./reducer\";\n\nexport const reducerFactory = new BaseFactory<FxReducer>();\nexport const hocFactory = new BaseFactory<(settings?: any) => new () => React.PureComponent<DefaultProps, any>>();\nexport const themeFactory = new BaseFactory<NsFactory>();\n\nhocs.forEach((hoc: { name: string, hoc: (hocFactory: BaseFactory<any>) => any }) => {\n    hocFactory.add(hoc.name, hoc.hoc(hocFactory));\n});\n\nreducerFactory.add(\"schemaForm\", schemaFormReducer);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"SFC\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}\n// module id = 5\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 6\n// module chunks = 0","import { Iterable, Map, OrderedMap, List, OrderedSet, Set, Stack } from \"immutable\";\n\nfunction doSetOp(param1: any, param2: any, op: string) {\n    const type = param1.constructor.name;\n\n    if (type === \"Set\" || type === \"OrderedSet\") {\n        return param1[op](param2);\n    }\n    return param1.toOrderedSet()[op](param2)[`to${type}`]();\n}\n\nfunction customMerge(param1: any, param2: any, mergeFnc: any) {\n    if (typeof mergeFnc === \"function\") {\n        return mergeFnc(param1, param2);\n    }\n\n    switch (mergeFnc) {\n        case \"replace\":\n            return param2;\n        case \"append\":\n            if (!Iterable.isIterable(param1)) {\n                throw new Error(`Non-iterable passed to \"append\" merge function`);\n            }\n            return param1.concat(param2);\n        case \"prepend\":\n            if (!Iterable.isIterable(param2)) {\n                throw new Error(`Non-iterable passed to \"prepend\" merge function`);\n            }\n            return param2.concat(param1);\n        case \"union\":\n            if (Map.isMap(param1)) {\n                return param1.merge(param2);\n            }\n            if (!Iterable.isIterable(param1)) {\n                throw new Error(`Non-iterable passed to \"union\" merge function`);\n            }\n            return doSetOp(param1, param2, \"union\");\n        default:\n            throw new Error(`Unknown merge function \"${mergeFnc}\"`);\n    }\n}\n\nfunction mergeDeep(param1: any, param2: any, schema?: any) {\n    // there\"s no schema defined => native merge or override\n    if (!schema || (typeof schema === \"object\" && Object.keys(schema).length === 0)) {\n        return Iterable.isIterable(param1) && !Stack.isStack(param1) ? param1.mergeDeep(param2) : param2;\n    }\n\n    const schemaType = typeof schema;\n\n    // no keys in schema, merging is handled by custom merge function\n    if (schemaType === \"string\" || schemaType === \"function\") {\n        return customMerge(param1, param2, schema);\n    }\n\n    // at this point anything other than object as a schema should be handled above\n    if (schemaType !== \"object\") {\n        throw new Error(\"Invalid schema\");\n    }\n\n    if (!Iterable.isIterable(param1) || !Iterable.isIterable(param2)) {\n        throw new Error(\"Only immutable iterables can be merged using merge schema\");\n    }\n\n    if (Set.isSet(param1) || Set.isSet(param2) || Stack.isStack(param1) || Stack.isStack(param2)) {\n        throw new Error(\"Sets and Stacks can't be merged with schema\");\n    }\n\n    const immutableType = param1.constructor.name;\n    let merged: any;\n\n    switch (immutableType) {\n        case \"List\": merged = List([]); break;\n        case \"Map\": merged = Map({}); break;\n        case \"OrderedMap\": merged = OrderedMap({}); break;\n        default:\n            throw new Error(\"Unsupported type\");\n    }\n\n    param1.forEach((value: any, key: string) => {\n        if (param2.has(key)) {\n            const subSchema = schema ? (schema[key] || schema[\"*\"]) : undefined;\n            merged = merged.set(key, mergeDeep(param1.get(key), param2.get(key), subSchema));\n        } else {\n            merged = merged.set(key, param1.get(key));\n        }\n    });\n\n    param2.forEach((value: any, key: string) => {\n        if (!param1.has(key)) {\n            merged = merged.set(key, param2.get(key));\n        }\n    });\n\n    return merged;\n}\n\nexport default mergeDeep;\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/merge.tsx","export const isProd = () => {\n    const { NODE_ENV } = process.env;\n\n    return typeof NODE_ENV !== \"undefined\" &&\n        NODE_ENV === `\"production\"`;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.tsx","import { SchemaForm } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaForm.propTypes = Object.assign({}, DefaultPropsTypeCheck);\n\nexport { SchemaForm };\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/index.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}\n// module id = 10\n// module chunks = 0","import { Reducer } from \"redux-act\";\nimport { Store } from \"react-redux\";\n\nexport interface FxReducer {\n    actions: any;\n    reducer: Reducer<any>;\n    init(store: Store<any>): void;\n}\n\nexport const d = \"data\";\nexport const m = \"meta\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/reducer.tsx","\nexport type Tsn = string | number;\n\n/**\n * tree map struct\n * 这里用来记录数据的元数据信息\n * 元数据信息包括，isValid，isLoading，isShow，...etc\n */\nexport class TreeMap {\n    public children: TreeMap[] = [];\n\n    /**\n     * 构造函数\n     * @param key    当前节点的key，用于计算位置\n     * @param value  当前节点的值\n     * @param parent 当前节点的父亲节点\n     */\n    constructor(private key: string, public value: any, private parent?: TreeMap) { }\n\n    /**\n     * 添加一个孩子元素\n     * 这里需要构建一颗完整的树，所以要遍历keys来动态创建节点\n     * time complexity = O(1) / Constant\n     * @param keys  节点的路径 example [\"root\",\"b\"]  root -> b\n     * @param value 孩子的数据\n     * @returns TreeMap\n     */\n    public addChild(keys: Array<Tsn>, value?: any): TreeMap | null {\n        let curNode: TreeMap = this;\n        let child: TreeMap | null = null;\n\n        if (!keys.length) {\n            return this;\n        }\n\n        keys = [...keys];\n\n        // 创建所有路径的节点\n        while (keys.length) {\n            let key: Tsn = keys.shift() as (Tsn);\n            let isNumber = key.constructor === Number;\n\n            child = curNode.contains(key);\n\n            // 这里需要做一下特殊处理\n            // 如果是数字的话，则说明是数组，key改成`-`\n            // 如果不是数组的话，则无所谓顺序，直接push就行\n            // 如果是数组，则要保证顺序和数据的下标一致\n            if (!child) {\n                if (isNumber) {\n                    child = new TreeMap(\"-\", null, curNode);\n                    curNode.children[key as number] = child;\n                } else {\n                    child = new TreeMap(key.toString(), null, curNode);\n                    curNode.children.push(child);\n                }\n            }\n\n            curNode = child;\n        }\n\n        if (child) {\n            child.value = value;\n        }\n\n        return child;\n    }\n\n    /**\n     * 获取当前的key\n     * 如果key是`-`,代表是数组，则转换成数组下标\n     * time complexity = O(1) / Constant\n     * @returns string\n     */\n    public getKey(): string {\n        if (!this.key || this.key === \"-\") {\n            return this.getIndexInParent().toString();\n        }\n\n        return this.key;\n    }\n\n    /**\n     * 获取当前节点的keys路径\n     * time complexity = O(1) / Constant\n     * @returns string[]\n     */\n    public getCurrentKeys(): Array<Tsn> {\n        let keys: Array<Tsn> = [];\n\n        if (this.parent) {\n            keys = keys.concat(this.parent.getCurrentKeys());\n        }\n\n        return keys.concat([this.key]);\n    }\n\n    /**\n     * 获取当前节点在父亲children中的下标索引\n     * time complexity = O(1) / Constant\n     * @returns number\n     */\n    public getIndexInParent(): number {\n\n        if (this.parent) {\n            let children = this.parent.children;\n\n            for (let i = 0, n = children.length; i < n; i++) {\n                let child = children[i];\n\n                if (child && child === this) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * 从当前节点查找是否存在节点\n     * time complexity = O(n) / Linear\n     * @param key 节点的数据\n     * @returns TreeMap\n     */\n    public contains(key: Tsn): TreeMap | null {\n        let isNumber = key.constructor === Number;\n\n        // 如果是数字的话，直接返回children中对应下标的元素\n        if (isNumber) {\n            if (this.children.length > key) {\n                let child = this.children[key as number];\n\n                if (!child) {\n                    this.children[key as number] = new TreeMap(\"-\", null, this);\n\n                    child = this.children[key as number];\n                }\n\n                return child;\n            }\n\n            return null;\n        }\n\n        // 如果当前节点的key===要搜索的key，则返回本身\n        if (this.getKey() === key) {\n            return this;\n        }\n\n        // 如果没有children，则返回空\n        if (!this.children || this.children.length === 0) {\n            return null;\n        }\n        // 遍历子节点，层层递归，直到找到\n        for (let i = 0; i < this.children.length; i++) {\n            let child = this.children[i];\n\n            if (child && child.contains(key)) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 根据给定的路径数组，返回对应的节点\n     * time complexity = O(n) / Linear\n     * @param keys 路径\n     * @returns TreeMap | null\n     */\n    public containPath(keys: Array<Tsn>): TreeMap | null {\n        let node: TreeMap | null = this;\n\n        keys.forEach((key: Tsn) => {\n            if (!node) {\n                return null;\n            }\n            node = node.contains(key);\n\n            if (!node) {\n                return null;\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * 从父亲节点中删除当前节点\n     * time complexity = O(n) / Linear\n     */\n    public removeFromParent(): void {\n        let index = this.getIndexInParent();\n\n        if (this.parent) {\n            this.parent.children.splice(index, 1);\n        }\n    }\n\n    /**\n     * 移动到某个位置\n     * time complexity = O(1) / Linear\n     * @param toIndex 需要移动到的位置\n     */\n    public insertToFromParent(toIndex: number): void {\n        let curIndex = this.getIndexInParent();\n        let offset = (toIndex > curIndex && false) ? 1 : 0;\n        let splitIndex = toIndex;\n\n        // 如果没有父亲，或者父亲没有子节点，或者当前位置小于0\n        if (!this.parent || !this.parent.children || curIndex < 0) {\n            return;\n        }\n\n        // 如果超出了父亲的子节点数量，添加一个\n        if (this.parent.children.length <= toIndex) {\n            this.parent.addChild([toIndex]);\n        }\n\n        // 父亲节点中删除当前元素\n        this.removeFromParent();\n        // 将当前节点插入到制定的位置\n        this.parent.children = this.parent.children.concat([]).splice(0, splitIndex - offset).concat([this])\n            .concat(this.parent.children.splice(splitIndex - offset));\n    }\n\n    /**\n     * 遍历指定节点下所有子节点的value数据,当前节点不计算在内\n     * @param node 指定的节点\n     */\n    public forEach(clearFunc: (node: TreeMap) => any, currentNode = false) {\n        if (currentNode) {\n            this.value = clearFunc(this);\n        }\n\n        if (!this.children) {\n            return;\n        }\n\n        for (let i = 0, n = this.children.length; i < n; i++) {\n            if (this.children[i]) {\n                this.children[i].value = clearFunc(this.children[i]);\n                this.children[i].forEach(clearFunc);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/tree.tsx","import { SchemaFormItem } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaFormItem.propTypes = Object.assign({}, DefaultPropsTypeCheck);\n\nexport { SchemaFormItem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/index.tsx","import { UiSchema } from \"fx-schema-form-core/dist/typings/models/uischema\";\nimport { Ajv } from \"ajv\";\nimport Immutable from \"immutable\";\nimport propTypes, { ValidationMap } from \"prop-types\";\n\nimport { FxUiSchema } from \"../models\";\n/**\n * 默认的组件参数\n */\nexport interface DefaultProps {\n    /**\n     * schema对应的$id\n     */\n    schemaId: string;\n    /**\n     * uiSchema\n     */\n    uiSchema?: FxUiSchema;\n    /**\n     * 父亲的路径\n     */\n    parentKeys: string[];\n    /**\n     * 全局默认配置\n     */\n    globalOptions: Immutable.Map<string, any>;\n    /**\n     * ajv的实例\n     */\n    ajv: Ajv;\n    /**\n     * 如果是数组，则表示当前数组的下标\n     */\n    arrayIndex?: number;\n    /**\n     * 当前formItem的层级\n     */\n    arrayLevel?: number[];\n    /**\n     * 数据\n     */\n    formItemData?: any;\n    /**\n     * meta数据\n     */\n    formItemMeta?: any;\n    /**\n     * 数组元素子项的操作\n     */\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n    /**\n     * 当前的reducerkey\n     */\n    reducerKey?: string;\n}\n\nexport const DefaultPropsTypeCheck: ValidationMap<DefaultProps & { customProp: Function }> = {\n    schemaId: propTypes.string.isRequired,\n    uiSchema: propTypes.object,\n    parentKeys: propTypes.array.isRequired,\n    globalOptions: propTypes.object.isRequired,\n    ajv: propTypes.object.isRequired,\n    arrayIndex: propTypes.number,\n    arrayLevel: propTypes.array,\n    formItemData: propTypes.any,\n    formItemMeta: propTypes.any,\n    ArrayItemComponent: propTypes.any\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/default.props.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\nimport { reducerFactory, hocFactory, themeFactory } from \"./factory\";\nimport { FxReducer } from \"./reducers/reducer\";\nimport { SchemaFormActions } from \"./reducers/schema.form\";\nimport { SchemaForm, DefaultProps, SchemaFormItem } from \"./components\";\nimport { RC, SchemaFormNs, schemaFormTypes } from \"./models\";\n\nimport fields from \"./fields\";\nimport { TreeMap } from \"./libs/tree\";\nimport { SchemaFormHocSettings, SchemaFormHocOutProps, default as schemaFormDec, name as schemaFormDecName } from \"./libs/dec\";\nimport { SchemaFormProps } from \"./libs/dec\";\nimport merge from \"./libs/merge\";\n\n/**\n * 默认样式配置\n * 每个样式包含temp，field和widget三个factory\n */\nconst defaultTheme = {\n    tempFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    fieldFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    widgetFactory: new BaseFactory<RC<DefaultProps, any>>()\n};\n\n/**\n * 添加默认的fields\n */\nfields.forEach((field: any) => {\n    for (const key in field) {\n        if (field.hasOwnProperty(key)) {\n            defaultTheme.fieldFactory.add(key, field[key]);\n        }\n    }\n});\n\nthemeFactory.add(\"default\", defaultTheme as any);\n\nhocFactory.add(schemaFormDecName, schemaFormDec.bind(schemaFormDec, hocFactory));\n\nexport default {\n    themeFactory,\n    defaultTheme,\n    schemaFormDec,\n    TreeMap,\n    reducerFactory,\n    SchemaForm,\n    hocFactory,\n    schemaFormTypes,\n    merge\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { default as merge } from \"./merge\";\nimport { default as utils } from \"./utils\";\nimport { default as theme } from \"./theme\";\nimport { default as field } from \"./field\";\nimport { default as array } from \"./array\";\nimport { default as validate } from \"./validate\";\nimport { default as make } from \"./make\";\nimport { default as temp } from \"./temp\";\nimport { default as data } from \"./data\";\nimport { default as resetkey } from \"./resetkey\";\n\nexport const hocs: Array<{ name: string, hoc: (hocFactory: BaseFactory<React.PureComponent>) => any }> =\n    [merge, utils, theme, field, array, validate, make, temp, data, resetkey];\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/index.tsx","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, MergeLib,  UiSchema } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models\";\n\n/**\n * MergeHoc 添加的属性\n */\nexport interface MergeHocOutProps {\n    mergeSchemaList?: FxUiSchema[];\n}\n\nexport interface MergeHocProps extends DefaultProps {\n    uiSchemas: Array<string | UiSchema>;\n}\n\nexport const name = \"merge\";\n/**\n * merge参数中的schema和uiSchema，生成新的对象mergeSchemaList，传入组件的props中\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n * mergeSchemaList    合并之后的数据\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: RC<any, any>): RC<MergeHocProps, any> => {\n            class MergeComponentHoc extends PureComponent<MergeHocProps, any> {\n                private _mergeUiSchemaList: FxUiSchema[];\n\n                /**\n                 * 合并schema和uiSchema生成 mergeUiSchemaList\n                 * @param props props\n                 */\n                constructor(props: MergeHocProps) {\n                    super(props);\n\n                    const uiSchema = props.uiSchema ? Object.assign({}, props.uiSchema) : undefined;\n\n                    if (uiSchema) {\n                        uiSchema.keys = uiSchema.originKeys;\n                    }\n\n                    // 这里做数据合并处理\n                    // 将合并之后的数据传递到下一层的Component\n                    const merge = new MergeLib(props.ajv, props.schemaId, uiSchema, props.uiSchemas as any);\n\n                    this._mergeUiSchemaList = merge.mergeUiSchemaList.map((v: any) => {\n                        return this.mergeKeys(v);\n                    });\n                }\n\n                /**\n                 * 解析keys\n                 * 1. 遍历keys中的元素，如果遇到-，则替换成数字\n                 * @param mergeSchema 合并过后的FxUiSchema\n                 */\n                private mergeKeys(mergeSchema: any) {\n                    const { arrayLevel = [] } = this.props;\n                    const arrayLevelCopy = arrayLevel.concat([]);\n\n                    mergeSchema = Object.assign({}, mergeSchema);\n                    mergeSchema.originKeys = [].concat(mergeSchema.keys);\n                    mergeSchema.keys = mergeSchema.keys.reverse().map((key: string) => {\n                        if (key === \"-\") {\n                            return arrayLevelCopy.pop();\n                        }\n\n                        return key;\n                    });\n                    mergeSchema.keys.reverse();\n\n                    return mergeSchema;\n                }\n\n                public render(): JSX.Element {\n                    const { uiSchemas, uiSchema, ...extraProps } = this.props;\n\n                    return (\n                        <Component\n                            mergeSchemaList={this._mergeUiSchemaList}\n                            {...extraProps}\n                        />\n                    );\n                }\n            }\n\n            return MergeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/merge.tsx","\n\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, MergeLib, FxJsonSchema, schemaKeysFactory, schemaFieldFactory, getSchemaId } from \"fx-schema-form-core\";\nimport { compose, shouldUpdate, onlyUpdateForKeys } from \"recompose\";\nimport Immutable, { fromJS } from \"immutable\";\nimport resolvePathname from \"resolve-pathname\";\nimport { JSONSchema6 } from \"json-schema\";\nimport { Ajv } from \"ajv\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\nimport merge from \"../libs/merge\";\nimport { reducerFactory } from \"../factory\";\nimport { SchemaFormActions } from \"../reducers/schema.form\";\n\nexport const name = \"utils\";\n\nexport interface UtilsHocOutProps {\n    getOptions: (props: DefaultProps, category: string, field: string, ...extraSettings: Immutable.Map<string, any>[])\n        => { [key: string]: any };\n    getTitle(props: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): () => string;\n    getPathKeys: (keys: string[], path: string, schemaId?: string) => Array<string | number>;\n    normalizeDataPath: (schemaId: string, dataPath: string) => Array<string | number>;\n    getRequiredKeys: (props: DefaultProps, include: string[], exclude: string[]) => { [key: string]: any };\n    getDefaultData: (ajv: Ajv, schema: JSONSchema6, data: any, defaultData?: any, merge?: boolean) => Promise<any>;\n    getActions: (props: DefaultProps, raw?: boolean) => SchemaFormActions;\n    getPathProps: (props: DefaultProps, path: string) => DefaultProps;\n}\n\n\n/**\n * dataPath中的key格式化；\n * dataPath是一个字符串，需要把里面的数字转化一下\n * dataPath中可能有数组的格式，所以需要把数字转换成数字，而不是字符\n * 遍历所有的key，发现是数字字符，则查找父级的schema，如果父级的type是array，则把当前key转换成数字\n * @param schemaId schemaId\n * @param dataPath 当前的数据路径字符串\n */\nconst normalizeDataPath = (schemaId: string, dataPath: string): Array<string | number> => {\n    let dataKeys: Array<string | number> = dataPath.replace(/^\\//g, \"\").split(\"/\");\n\n    dataKeys = dataKeys.map((key: string | number, index: number) => {\n        if (Number.isInteger(+key)) {\n            let keys: Array<string | number> = dataKeys.slice(0, index);\n\n            keys.unshift(schemaId);\n\n            if (schemaKeysFactory.has(keys.join(\"/\"))) {\n                let schema = schemaFieldFactory.get(schemaKeysFactory.get(keys.join(\"/\")));\n\n                if (schema.type === \"array\") {\n                    return +key;\n                }\n            }\n        }\n\n        return key;\n    });\n\n    return dataKeys;\n};\n\n/**\n * 包装utils的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps, any> => {\n            class ComponentHoc extends PureComponent<UtilsHocOutProps, any> {\n                public render(): JSX.Element {\n                    return <Component\n                        getTitle={this.getTitle}\n                        getPathKeys={this.getPathKeys}\n                        getOptions={this.getOptions}\n                        normalizeDataPath={normalizeDataPath}\n                        getRequiredKeys={this.getRequiredKeys}\n                        getDefaultData={this.getDefaultData}\n                        getActions={this.getActions}\n                        getPathProps={this.getPathProps}\n                        {...this.props} />;\n                }\n\n                /**\n                 * 将当前的props更改成任意路径的props\n                 * @param props 当前组件的props\n                 * @param path  需要转换的路径\n                 */\n                private getPathProps(props: DefaultProps & UtilsHocOutProps, path: string): DefaultProps {\n                    let newProps = Object.assign({}, props, {\n                        uiSchema: Object.assign({}, props.uiSchema, {\n                            keys: props.getPathKeys(props.uiSchema.keys as any, path)\n                        })\n                    });\n\n                    return newProps;\n                }\n\n                /**\n                 * 获取当前的reducer中的actions\n                 * @param propsCur 当前的属性\n                 * @param raw      是否为raw\n                 */\n                private getActions(propsCur: DefaultProps, raw = false) {\n                    let actions = reducerFactory.get(propsCur.reducerKey || \"schemaForm\").actions;\n\n                    if (raw) {\n                        for (const key in actions) {\n                            if (actions.hasOwnProperty(key)) {\n                                const element = actions[key];\n\n                                actions[key] = element.raw;\n                            }\n                        }\n                    }\n\n                    return actions;\n                }\n\n                /**\n                 * 过滤props中的属性，只传递所需的属性\n                 * 从设置中，获取一部分的设置\n                 * @param props        当前component的props\n                 * @param includeKeys  需要保留的keys\n                 * @param excludeKeys  需要去掉的keys\n                 */\n                private getRequiredKeys(props: { [key: string]: any }, includeKeys: string[] = [], excludeKeys: string[] = [])\n                    : { [key: string]: any } {\n                    let extraProps: { [key: string]: any } = {};\n\n                    if (includeKeys && includeKeys.constructor === Array && includeKeys.length) {\n                        includeKeys.forEach((key: string) => {\n                            if (props.hasOwnProperty(key)) {\n                                extraProps[key] = props[key];\n                            }\n                        });\n                    } else {\n                        extraProps = Object.assign({}, props);\n                    }\n\n                    if (excludeKeys && excludeKeys.constructor === Array && excludeKeys.length) {\n                        excludeKeys.forEach((key: string) => {\n                            if (extraProps.hasOwnProperty(key)) {\n                                delete extraProps[key];\n                            }\n                        });\n                    }\n\n                    return extraProps;\n                }\n\n                /**\n                 * dataPath中的key格式化；\n                 * dataPath是一个字符串，需要把里面的数字转化一下\n                 * dataPath中可能有数组的格式，所以需要把数字转换成数字，而不是字符\n                 * 遍历所有的key，发现是数字字符，则查找父级的schema，如果父级的type是array，则把当前key转换成数字\n                 * @param schemaId schemaId\n                 * @param dataPath 当前的数据路径字符串\n                 */\n                // private normalizeDataPath(schemaId: string, dataPath: string): Array<string | number> {\n                //     let dataKeys: Array<string | number> = dataPath.replace(/^\\//g, \"\").split(\"/\");\n\n                //     dataKeys = dataKeys.map((key: string | number, index: number) => {\n                //         if (Number.isInteger(+key)) {\n                //             let keys: Array<string | number> = dataKeys.slice(0, index);\n\n                //             keys.unshift(schemaId);\n\n                //             if (schemaKeysFactory.has(keys.join(\"/\"))) {\n                //                 let schema = schemaFieldFactory.get(schemaKeysFactory.get(keys.join(\"/\")));\n\n                //                 if (schema.type === \"array\") {\n                //                     return +key;\n                //                 }\n                //             }\n                //         }\n\n                //         return key;\n                //     });\n\n                //     return dataKeys;\n                // }\n\n                /**\n                 * 获取参数\n                 * @param props         当前component的props\n                 * @param category      需要获取的种类，有template，field，hoc等\n                 * @param field         field的名称\n                 * @param extraSettings 其余的设置项\n                 */\n                private getOptions({ uiSchema = {}, globalOptions }: DefaultProps,\n                    category: string,\n                    field: string,\n                    ...extraSettings: Immutable.Map<string, any>[]): { [key: string]: any } {\n\n                    let { options, type = \"\" } = uiSchema as FxUiSchema,\n                        optionsArray: Immutable.Map<string, any>[] = [],\n                        getOptions = (o: any, ks: string[]) => {\n                            if (o) {\n                                if (!Immutable.Map.isMap(o)) {\n                                    o = Immutable.fromJS(o);\n                                }\n                                if (o.hasIn(ks)) {\n                                    optionsArray.push(o.getIn(ks));\n                                }\n                            }\n                        };\n\n                    // 从globalOptions中抽取default的配置\n                    // 从globalOptions中抽取field的配置\n                    // 从options中抽取field的配置\n                    getOptions(globalOptions, [category, \"default\"]);\n                    getOptions(globalOptions, [category, field]);\n                    getOptions(globalOptions, [schemaFormTypes.field, type.toString(), \"options\", category, field]);\n                    getOptions(options, [category, field]);\n\n                    optionsArray = optionsArray.concat(extraSettings);\n\n                    let opts = optionsArray.reverse().reduce((prev: any, next: Immutable.Map<string, any>) => {\n                        if (next) {\n                            if (!Immutable.Map.isMap(next)) {\n                                next = fromJS(next);\n                            }\n\n                            return merge(next, prev, { \"*\": \"replace\" });\n                        }\n\n                        return prev;\n                    }, fromJS({}));\n\n                    return opts.toJS();\n                }\n                /**\n                 * 获取标题数据\n                 * title || key || index\n                 * @param props         当前的props\n                 * @param extraSettings 额外的配置参数\n                 */\n                private getTitle({ uiSchema, arrayIndex }: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): string {\n                    let { title, keys } = uiSchema as FxUiSchema;\n\n                    if (!title && extraSettings && extraSettings.length) {\n                        extraSettings.forEach((sets: Immutable.Map<string, any>) => {\n                            if (sets && !title && sets.get(\"title\")) {\n                                title = sets.get(\"title\");\n                            }\n                        });\n                    }\n\n                    if (title !== undefined) {\n                        return title;\n                    }\n\n                    if (keys && keys.length) {\n                        let keysCopy = [...keys], keyTitle = keysCopy.pop();\n\n                        return keyTitle !== undefined ? keyTitle.toString() : \"\";\n                    }\n\n                    if (arrayIndex) {\n                        return arrayIndex.toString();\n                    }\n\n                    return \"\";\n                }\n\n                /**\n                 * 根据相对路径，得到keys\n                 * @param keys 当前的keys\n                 * @param path 路径\n                 */\n                private getPathKeys(keys: Array<string>, path: string, schemaId?: string): Array<string> {\n                    let keysCopy = [\"\"].concat(keys.concat([\"\"]));\n                    let keysResolve: any[] = resolvePathname(path, keysCopy.join(\"/\")).split(\"/\");\n\n                    keysResolve.shift();\n\n                    if (keysResolve.length && !keysResolve[keysResolve.length - 1]) {\n                        keysResolve.pop();\n                    }\n\n                    // 这里处理一下这个字符串数字的问题把数组中的 \"1\" 转换成 1\n                    if (schemaId) {\n                        keysResolve = normalizeDataPath(getSchemaId(schemaId), keysResolve.join(\"/\"));\n                    }\n\n                    return keysResolve;\n                }\n\n                /**\n                 * 获取当前schema的默认的数据\n                 *  通过ajv的validate方法获取默认的数据\n                 *  与data和defaultData做合并处理\n                 * @param ajv          ajv实例\n                 * @param schema       json-schema\n                 * @param data         额外的数据\n                 * @param defaultData  额外的数据\n                 * @param needMerge    是否需要合并数据\n                 */\n                private async getDefaultData(ajv: Ajv, schema: JSONSchema6, data: any, defaultData?: any, needMerge = false): Promise<any> {\n                    let itemSchema: any = {},\n                        defaultValue: any = {},\n                        type = schema.type,\n                        mergeData = (dataOfType: any) => {\n                            if (!needMerge) {\n                                return defaultValue.defaultData;\n                            }\n\n                            let mData: any = merge(fromJS(defaultValue.defaultData), fromJS(dataOfType));\n\n                            if (defaultData) {\n                                return merge(mData, fromJS(defaultData));\n                            }\n\n                            return mData.toJS();\n                        };\n\n                    try {\n                        // 调用ajv的validate方法，这里会处理defaultValue的值\n                        await ajv.validate({\n                            type: \"object\",\n                            properties: {\n                                defaultData: schema\n                            }\n                        }, defaultValue);\n                    } catch (e) {\n                        return data;\n                    } finally {\n                        switch (type) {\n                            case \"object\":\n                                if (!defaultValue.defaultData) {\n                                    defaultValue.defaultData = data || {};\n                                }\n                                defaultValue.defaultData = mergeData(data || {});\n                                break;\n                            case \"array\":\n                                if (!defaultValue.defaultData) {\n                                    defaultValue.defaultData = data || [];\n                                }\n                                defaultValue.defaultData = mergeData(data || []);\n                                break;\n                            default:\n                                defaultValue.defaultData = data || defaultValue.defaultData;\n                        }\n                    }\n\n                    return defaultValue.defaultData;\n                }\n            }\n\n            return ComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/utils.tsx","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 21\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_22__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}\n// module id = 22\n// module chunks = 0","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, NsFactory } from \"../models\";\nimport { themeFactory } from \"../factory\";\n\nexport interface ThemeHocOutProps {\n    currentTheme: NsFactory;\n}\n\nexport const name = \"theme\";\n\n/**\n * 包装theme的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性\n * currentTheme 当前的命名空间\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps, any> => {\n            const defualtKey = \"default\";\n            class ThemeComponentHoc extends PureComponent<DefaultProps, any> {\n                public render(): JSX.Element {\n                    const { theme } = this.props.uiSchema as FxUiSchema;\n                    let nsFactory;\n\n                    if (themeFactory.has(theme || defualtKey)) {\n                        nsFactory = themeFactory.get(theme || defualtKey);\n                    } else {\n                        throw new Error(`没有找到${theme || defualtKey}的样式！`);\n                    }\n\n                    return <Component currentTheme={nsFactory} {...this.props} />;\n                }\n            }\n\n            return ThemeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/theme.tsx","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { ThemeHocOutProps } from \"./theme\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { RC } from \"../models\";\nimport { isProd } from \"../utils\";\n\nexport interface FieldHocOutProps {\n    FieldComponent: RC<any, any>;\n    WidgetComponent: RC<any, any>;\n}\n\nexport const name = \"field\";\n/**\n * 包装Field的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性FieldComponent   schema对应的fieldcomponent\n * 加入属性WidgetComponent  schema对应的widgetcomponent\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> => {\n            const defaultKey = \"default\";\n            class FieldComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> {\n                public render(): JSX.Element | null {\n                    const { currentTheme, getOptions, uiSchema } = this.props,\n                        { field, widget, type } = uiSchema as any;\n                    let FieldComponent, WidgetComponent,\n                        calcField = field || type as string,\n                        calcWidget = widget || type as string;\n\n                    // 查找field\n                    if (currentTheme.fieldFactory.has(calcField)) {\n                        FieldComponent = currentTheme.fieldFactory.get(calcField);\n                    } else {\n                        if (currentTheme.fieldFactory.has(defaultKey)) {\n                            FieldComponent = currentTheme.fieldFactory.get(defaultKey);\n                        } else {\n                            if (!isProd()) { console.error(`找不到field：${calcField}`); }\n                            return null;\n                        }\n                    }\n\n                    // 查找widget\n                    if (currentTheme.widgetFactory.has(calcWidget)) {\n                        WidgetComponent = currentTheme.widgetFactory.get(calcWidget);\n                    } else {\n                        if (currentTheme.widgetFactory.has(defaultKey)) {\n                            WidgetComponent = currentTheme.widgetFactory.get(defaultKey);\n                        } else {\n                            if (!isProd()) { console.warn(`找不到widget：${calcWidget}`, uiSchema); }\n                        }\n                    }\n\n                    return <Component {...this.props}\n                        FieldComponent={(FieldComponent)}\n                        WidgetComponent={WidgetComponent} />;\n                }\n            }\n\n            return FieldComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/field.tsx","\nimport React, { PureComponent } from \"react\";\nimport { branch, compose, withHandlers, ComponentEnhancer } from \"recompose\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models\";\nimport { reducerFactory } from \"../factory\";\n\nexport interface ArrayHocOutProps {\n    addItem: (props: DefaultProps, data?: any) => Promise<void>;\n    removeItem: (parentKeys: any[], keys: any[], index: number) => void;\n    moveItem: (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => void;\n    initArrayComponent: (props: DefaultProps, index?: number) => JSX.Element;\n    ArrayComponent?: new () => React.PureComponent<DefaultProps>;\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n}\n\nexport interface ArrayProps extends DefaultProps, UtilsHocOutProps { }\n\nexport const name = \"array\";\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        const commHoc = compose(\n            withHandlers({\n                /**\n                 * 更新一个数据\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                addItem: (propsCur: ArrayProps) => {\n                    return async (props: ArrayProps, data?: any) => {\n                        if (!props.uiSchema || !props.uiSchema.items) {\n                            return;\n                        }\n                        const { items, keys, defaultData } = props.uiSchema;\n\n                        let dData = await props.getDefaultData(props.ajv, items as any, data, defaultData, true);\n\n                        propsCur.getActions(propsCur).addItem({\n                            parentKeys: props.parentKeys,\n                            keys: keys,\n                            data: dData\n                        });\n                    };\n                },\n                /**\n                 * 删除一个数组元素\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                removeItem: (propsCur: ArrayProps) => {\n                    return (parentKeys: any[], keys: any[], index: number) => {\n                        propsCur.getActions(propsCur).removeItem({\n                            parentKeys: parentKeys,\n                            keys: keys,\n                            index: index\n                        });\n                    };\n                },\n                /**\n                 * 移动到某个元素后面\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                moveItem: (propsCur: ArrayProps) => {\n                    return (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => {\n                        propsCur.getActions(propsCur).moveToItem({\n                            parentKeys: parentKeys,\n                            keys: keys,\n                            curIndex: curIndex,\n                            toIndex: toIndex\n                        });\n                    };\n                },\n                /**\n                 * 初始化array的操作组件\n                 * @param {ArrayProps} propsCur 当前的props\n                 */\n                initArrayComponent: (propsCur: DefaultProps) => {\n                    return (props: DefaultProps & ArrayHocOutProps, index?: number) => {\n                        const { ArrayComponent, ArrayItemComponent, ...extraProps } = props, uiSchema = props.uiSchema as FxUiSchema;\n\n                        if (uiSchema.type === \"array\") {\n                            return ArrayComponent ? <ArrayComponent {...extraProps} /> : null;\n                        }\n\n                        return ArrayItemComponent ? <ArrayItemComponent {...extraProps} /> : null;\n                    };\n                }\n            })) as any;\n\n        /**\n         * 包装array的组件HOC\n         * @param hocFactory  hoc的工厂方法\n         * @param Component   需要包装的组件\n         * 加入属性\n         * arrayItems\n         */\n        const arrayHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n            @commHoc\n            class ArrayComponentHoc extends PureComponent<ArrayProps, any> {\n                private ArrayComponent: new () => React.PureComponent;\n                private ArrayItemComponent: new () => React.PureComponent;\n\n                constructor(props: ArrayProps, context: any) {\n                    super(props, context);\n                    this.initArrayComponents();\n                }\n\n                private initArrayComponents() {\n                    const { getOptions } = this.props;\n                    const hocOptions: any = getOptions(this.props, \"hoc\", name);\n\n                    // 设置当前的arrayComponent和ArrayItemComponent\n                    if (hocOptions.ArrayComponent) {\n                        this.ArrayComponent = hocOptions.ArrayComponent;\n                    }\n\n                    if (hocOptions.ArrayItemComponent) {\n                        this.ArrayItemComponent = hocOptions.ArrayItemComponent;\n                    }\n\n                }\n\n                public render(): JSX.Element {\n                    let props: any = {};\n\n                    if (this.ArrayComponent) {\n                        props.ArrayComponent = this.ArrayComponent;\n                    }\n\n                    if (this.ArrayItemComponent) {\n                        props.ArrayItemComponent = this.ArrayItemComponent;\n                    }\n\n                    return <Component {...this.props} {...props} />;\n                }\n            }\n\n            return ArrayComponentHoc as any;\n        };\n\n        /**\n         * 如果不是数组则返回pureComponent\n         * @param Component  需要包装的组件\n         */\n        const pureHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n            @commHoc\n            class ArrayPureComponentHoc extends React.PureComponent<ArrayProps, any> {\n                public render() {\n                    return <Component {...this.props} />;\n                }\n            }\n\n            return ArrayPureComponentHoc as any;\n        };\n\n        /**\n         * A/B test\n         * 如果是数组则使用A，如果不是则使用B\n         */\n        return branch(\n            (props: ArrayProps) => {\n                const { uiSchema = { type: \"\" } } = props;\n\n                return uiSchema.type === \"array\";\n            },\n            arrayHoc,\n            pureHoc\n        );\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/array.tsx","\nimport React, { PureComponent } from \"react\";\nimport { withHandlers, compose } from \"recompose\";\nimport { BaseFactory, schemaKeysFactory, schemaFieldFactory } from \"fx-schema-form-core\";\nimport { Action } from \"redux-act\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { RC } from \"../models\";\nimport { reducerFactory } from \"../factory\";\nimport { SchemaFormActions } from \"../reducers/schema.form\";\n\nexport interface ValidateHocOutProps {\n    updateItemData: (props: DefaultProps, data: any, meta?: any) => void;\n    updateItemMeta: (props: DefaultProps, data: any, meta?: any, noChange?: boolean) => Promise<void>;\n    removeItemData: (props: DefaultProps, meta?: any) => void;\n    updateItemDataRaw: (props: DefaultProps, data: any, meta?: any) => void;\n    updateItemMetaRaw: (props: DefaultProps, data: any, meta?: any, noChange?: boolean) => Promise<void>;\n    removeItemDataRaw: (props: DefaultProps, meta?: any) => void;\n    combineActions: (...actions: Action<any>[]) => void;\n    validate: (props: DefaultProps, data: any, meta?: any) => Promise<any>;\n}\nexport const name = \"validate\";\n\n/**\n * 包装validate的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: any): RC<DefaultProps, any> => {\n            @(compose(\n                hocFactory.get(\"data\")({\n                    root: true\n                }),\n                withHandlers({\n                    /**\n                     * 验证单个数据\n                     * 使用当前组件中的uiSchema，以及传递过来的数据做验证\n                     * 这里可能有远程验证\n                     */\n                    validate: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return async (props: DefaultProps & UtilsHocOutProps, data: any, meta: any = {}) => {\n                            const result: any = { dirty: true, isValid: false, isLoading: false };\n                            const { uiSchema, reducerKey, parentKeys, ajv, getTitle } = props;\n                            const schema = Object.assign({}, uiSchema);\n                            const timeId = setTimeout(() => {\n                                propsCur.getActions(propsCur).updateItemMeta({\n                                    parentKeys: parentKeys,\n                                    keys: (schema as any).keys,\n                                    meta: { isLoading: true, isValid: false, errorText: false }\n                                });\n                            }, 200);\n\n                            // 这里做一层try catch处理\n                            try {\n                                let validateFunc;\n\n                                // 使用schema.schemaPath来确定schema\n                                if (schema.schemaPath && ajv.getSchema(schema.schemaPath)) {\n                                    validateFunc = ajv.getSchema(schema.schemaPath);\n                                } else if (schema.$id) {\n                                    validateFunc = ajv.getSchema(schema.$id);\n                                } else {\n                                    let schemaInCache = Object.assign({}, schemaFieldFactory.get(schema.schemaPath));\n\n                                    delete schemaInCache.$id;\n                                    delete schemaInCache.$ref;\n\n                                    validateFunc = ajv.compile(schemaInCache);\n                                }\n\n                                if (propsCur.formItemData) {\n                                    result.isValid = await validateFunc(data, undefined, undefined,\n                                        undefined, propsCur.formItemData.toJS());\n                                } else {\n                                    result.isValid = await validateFunc(data);\n                                }\n\n                                // 如果验证出错，则抛出错误\n                                if (!result.isValid) {\n                                    let error: any = new Error();\n\n                                    error.errors = validateFunc.errors;\n\n                                    throw error;\n                                }\n                            } catch (err) {\n                                // 处理错误消息\n                                result.errorText = err.errors ?\n                                    ajv.errorsText(err.errors, {\n                                        dataVar: getTitle(props).toString()\n                                    }) : err.message;\n                            }\n                            finally {\n                                clearTimeout(timeId);\n                            }\n\n                            return Object.assign({}, meta, result);\n                        };\n                    }\n\n                }),\n                hocFactory.get(\"resetKey\")({\n                    excludeKeys: [\"formItemData\"]\n                }),\n                withHandlers({\n                    /**\n                     * 更新一个数据\n                     */\n                    updateItemData: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (raw: boolean, { parentKeys, uiSchema }: DefaultProps, data: any, meta?: any) => {\n                            return propsCur.getActions(propsCur, raw).updateItemData({\n                                parentKeys: parentKeys,\n                                keys: uiSchema.keys,\n                                data: data,\n                                meta\n                            });\n                        };\n                    },\n                    /**\n                     * 更新一个元数据\n                     */\n                    updateItemMeta: (propsCur: DefaultProps & UtilsHocOutProps & ValidateHocOutProps) => {\n                        return async (raw: boolean, props: DefaultProps, data: any, meta: any = null, noChange = false) => {\n                            const { parentKeys, uiSchema } = props;\n\n                            return propsCur.getActions(propsCur, raw).updateItemMeta({\n                                parentKeys: parentKeys,\n                                keys: uiSchema.keys,\n                                meta: meta || await propsCur.validate(props, data),\n                                noChange: noChange\n                            });\n                        };\n                    },\n                    /**\n                     * 删除一个元素的meta和data\n                     */\n                    removeItemData: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (raw: boolean, { parentKeys, uiSchema }: DefaultProps, meta = true) => {\n                            return propsCur.getActions(propsCur, raw).removeItemData({\n                                parentKeys: parentKeys,\n                                keys: uiSchema.keys,\n                                meta: meta\n                            });\n                        };\n                    },\n                    /**\n                     * 合并多个action\n                     */\n                    combineActions: (propsCur: DefaultProps & UtilsHocOutProps) => {\n                        return (...actions: Action<any>[]) => {\n                            return propsCur.getActions(propsCur).combineActions(actions);\n                        };\n                    },\n                }),\n                withHandlers({\n                    updateItemData: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemData.bind(null, false);\n                    },\n                    updateItemMeta: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemMeta.bind(null, false);\n                    },\n                    removeItemData: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.removeItemData.bind(null, false);\n                    },\n                    updateItemDataRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemData.bind(null, true);\n                    },\n                    updateItemMetaRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.updateItemMeta.bind(null, true);\n                    },\n                    removeItemDataRaw: (propsCur: DefaultProps & ValidateHocOutProps) => {\n                        return propsCur.removeItemData.bind(null, true);\n                    }\n                })) as any)\n            class ArrayComponentHoc extends PureComponent<DefaultProps, any> {\n                public render(): JSX.Element {\n                    return <Component {...this.props} />;\n                }\n            }\n\n            return ArrayComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/validate.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, shouldUpdate, ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport Immutable from \"immutable\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\n\nexport interface MakeHocOutProps extends UtilsHocOutProps {\n\n}\n\nexport const name = \"make\";\n\n/**\n * make的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n *  1. HOC默认顺序：ThemeHoc -> FieldHoc -> ValidateHoc -> ArrayHoc -> TempHoc\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: any): RC<DefaultProps & MakeHocOutProps, any> => {\n            // @(shouldUpdate(() => false) as any)\n            class MakeComponentHoc extends PureComponent<DefaultProps & MakeHocOutProps, any> {\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions } = this.props;\n                    const { type, field } = uiSchema as FxUiSchema;\n                    const fieldOptions = getOptions(this.props, schemaFormTypes.field, field || type as string,\n                        Immutable.fromJS(uiSchema.hocs ? { hocs: uiSchema.hocs } : {}),\n                        Immutable.fromJS(settings || {}));\n                    const hocs: Array<string | ComponentEnhancer<any, any>> = fieldOptions.hocs\n                        || [\"utils\", \"theme\", \"field\", \"validate\", \"array\", \"temp\"];\n\n                    let ComponentWithHocs: any = compose<DefaultProps & MakeHocOutProps, any>\n                        (...([...hocs].map(hoc1 => {\n                            if (typeof hoc1 !== \"string\") {\n                                return hoc1;\n                            }\n                            return hocFactory.get(hoc1)();\n                        })))(Component);\n\n                    return <ComponentWithHocs {...this.props} />;\n                }\n            }\n\n            return MakeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/make.tsx","import React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { shallowEqual, compose, shouldUpdate, onlyUpdateForKeys, lifecycle, pure } from \"recompose\";\nimport { connect } from \"react-redux\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\nimport { ThemeHocOutProps } from \"./theme\";\nimport { MakeHocOutProps } from \"./make\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { ArrayHocOutProps } from \"./array\";\n\nexport const name = \"temp\";\n\n/**\n * 包装Template的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {\n        tempField: \"temps\",\n        templates: []\n    }) => {\n        return (Component: any): RC<DefaultProps & ThemeHocOutProps, any> => {\n            /**\n            * 获取模板的components\n            * @param uiSchema 合并后的数据\n            */\n            class TempComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps & ArrayHocOutProps, any> {\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions, reducerKey } = this.props;\n                    const { options: uiSchemaOptions, keys } = uiSchema as FxUiSchema;\n                    const TempComponents = this.getTemplates();\n\n                    return TempComponents.reduce((prev: JSX.Element, { key, Temp }) => {\n                        const tempOptions = getOptions(this.props, schemaFormTypes.template, key),\n                            TempWithHoc: any = compose(hocFactory.get(\"utils\")(), ...(tempOptions.tempHocs || []))(Temp);\n\n                        return <TempWithHoc\n                            tempKey={key}\n                            ajv={this.props.ajv}\n                            uiSchema={this.props.uiSchema}\n                            schemaId={this.props.schemaId}\n                            arrayLevel={this.props.arrayLevel}\n                            reducerKey={reducerKey}\n                            arrayIndex={this.props.arrayIndex}\n                            globalOptions={this.props.globalOptions}\n                            ArrayComponent={this.props.ArrayComponent}\n                            ArrayItemComponent={this.props.ArrayItemComponent}\n                            initArrayComponent={this.props.initArrayComponent}\n                            parentKeys={this.props.parentKeys}\n                            children={prev} />;\n                    }, <Component {...this.props} />);\n                }\n\n                /**\n                * 获取模板的components\n                */\n                private getTemplates(): Array<{ key: string, Temp: RC<any, any> }> {\n                    const { uiSchema, currentTheme, getOptions } = this.props,\n                        { keys, type, temps } = uiSchema as FxUiSchema,\n                        typeDefaultOptions = getOptions(this.props, schemaFormTypes.field, type as string),\n                        TempComponent: Array<{ key: string, Temp: RC<any, any> }> = [];\n                    let template: Array<any>;\n\n                    if (temps) {\n                        template = temps;\n                    } else if (settings.templates && settings.templates.length > 0) {\n                        template = settings.templates;\n                    } else {\n                        template = typeDefaultOptions[settings.tempField] || \"default\";\n                    }\n\n                    const getTemplate = (tmp: any): void => {\n                        switch (tmp.constructor) {\n                            case String:\n                                if (!currentTheme.tempFactory.has(tmp)) {\n                                    console.error(`不存在${tmp}的temp！`);\n                                } else {\n                                    TempComponent.push({\n                                        key: tmp,\n                                        Temp: currentTheme.tempFactory.get(tmp)\n                                    });\n                                }\n                                break;\n                            case Object:\n                                TempComponent.push({\n                                    key: tmp.name,\n                                    Temp: tmp\n                                });\n                                break;\n                            case Array:\n                                [...template].reverse().forEach((tml, idx) => {\n                                    getTemplate(tml);\n                                });\n                                break;\n                        }\n                    };\n\n                    getTemplate(template);\n\n                    return TempComponent;\n                }\n            }\n\n            return TempComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/temp.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, shouldUpdate } from \"recompose\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { createSelector, createSelectorCreator, defaultMemoize } from \"reselect\";\nimport Immutable, { is } from \"immutable\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { TreeMap } from \"../libs/tree\";\n\nexport interface DataHocOutProps extends DefaultProps { }\n\n/**\n * HOC的设定参数\n */\nexport interface DataHocSettings {\n    /**\n     * 是否需要root的数据\n     */\n    root?: boolean;\n    /**\n     * 是否需要当前的key的数据\n     */\n    data?: boolean;\n    /**\n     * 是否需要当前key的长度，只能是array格式\n     */\n    dataLength?: boolean;\n    /**\n     * 是否需要当前key对应的meta数据\n     */\n    meta?: boolean;\n    /**\n     * 设置当前key下所需要的meta的key值\n     */\n    metaKeys?: string[];\n    /**\n     * 是否获取meta的根节点\n     */\n    treeNode?: boolean;\n}\n\n// 自定义选择器创建函数\nconst fxSelectorCreator = createSelectorCreator(defaultMemoize, is);\n\nexport const name = \"data\";\nexport const hoc = (hocFactory: BaseFactory<RC<DefaultProps, {}>>) => {\n    return (settings: DataHocSettings = {\n        data: true\n    }) => {\n        /**\n         * 与reduce相关的数据操作\n         * 获取formItemData数据\n         * 获取formItemMeta数据\n         */\n        const getItemDataHoc = (parentKeys: string[], rootReducerKey: string[], keys: Array<string | number>) => {\n            /**\n             * 获取FormItemData的数据\n             * @param state 当前的state树\n             */\n            let getFormItemData = (state: Immutable.Map<string, any>) => {\n                let dataKeys: Array<string | number> = [...rootReducerKey, ...parentKeys, \"data\"];\n\n                // 如果配置中root为ture，则取得所有的数据\n                if (settings.root) {\n                    return state.getIn(dataKeys);\n                }\n\n                // 否则根据单个的keys获取\n                dataKeys = [...dataKeys, ...keys];\n                if (settings.data && state.hasIn(dataKeys)) {\n                    let formItemData = state.getIn(dataKeys);\n\n                    if (formItemData !== undefined) {\n                        if (!settings.dataLength) {\n                            return formItemData;\n                        } else {\n                            // 如果是列表，则返回size\n                            if (Immutable.List.isList(formItemData)) {\n                                return formItemData.size;\n                            }\n\n                            return 0;\n                        }\n                    }\n                }\n            };\n\n            /**\n            * 获取FormItemMeta的数据\n            * @param state 当前的state树\n            */\n            let getFormItemMeta = (state: Immutable.Map<string, any>) => {\n                let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n\n                if (settings.meta && state.hasIn(metaKeys)) {\n                    let rootNode = state.getIn(metaKeys),\n                        childNode = rootNode.containPath([...keys]);\n\n                    if (childNode && childNode.value) {\n                        if (settings.metaKeys) {\n                            return childNode.value.filter((val: any, key: string) => {\n                                return settings.metaKeys.indexOf(key) >= 0;\n                            });\n                        }\n                        return childNode.value;\n                    }\n                }\n            };\n\n            /**\n            * 获取FormItemMeta的根数据\n            * @param state 当前的state树\n            */\n            let getRoot = (state: Immutable.Map<string, any>) => {\n                if (!settings.treeNode) {\n                    return null;\n                }\n\n                let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n                let rootNode: TreeMap = state.getIn(metaKeys);\n                let childNode = rootNode.containPath([...keys]);\n\n                if (childNode) {\n                    return childNode;\n                }\n\n                return rootNode.addChild([...keys]);\n            };\n\n            /**\n             * re-select来缓存数据\n             */\n            return fxSelectorCreator(\n                [getFormItemData, getFormItemMeta, getRoot],\n                (formItemData: any, formItemMeta: any, formItemNode: TreeMap) => {\n                    const rtn: { formItemData?: any, formItemMeta?: any, formItemNode?: TreeMap } = {};\n\n                    if (formItemData !== undefined && formItemData !== null) {\n                        rtn.formItemData = formItemData;\n                    }\n                    if (formItemMeta !== undefined && formItemMeta !== null) {\n                        rtn.formItemMeta = formItemMeta;\n                    }\n                    if (formItemNode !== undefined && formItemNode !== null) {\n                        rtn.formItemNode = formItemNode;\n                    }\n\n                    return rtn;\n                }\n            );\n        };\n\n        /**\n         * 用于获取数据的hoc\n         * @param hocFactory  hoc的工厂方法\n         * @param Component   需要包装的组件\n         * 加入属性\n         * arrayItems\n         */\n        return (Component: any): RC<DefaultProps, any> => {\n            // @(shouldUpdate(() => false) as any)\n            class DataComponentHoc extends PureComponent<DefaultProps & UtilsHocOutProps, any> {\n                private ComponentWithHoc: any = Component;\n\n                constructor(props: DefaultProps & UtilsHocOutProps) {\n                    super(props);\n\n                    const { uiSchema, getOptions } = this.props,\n                        { keys = [] } = this.props.uiSchema || {},\n                        options = getOptions(this.props, schemaFormTypes.hoc, name);\n\n\n                    if (!options.rootReducerKey || options.rootReducerKey.constructor !== Array) {\n                        console.error(\"dataHoc missing property rootReducerKey.should be a Array.\");\n                    } else {\n                        // 获取当前的数据hoc\n                        this.ComponentWithHoc = connect(getItemDataHoc(this.props.parentKeys, options.rootReducerKey, keys))(Component);\n                    }\n                }\n\n                public render(): JSX.Element {\n                    const ComponentWithHoc = this.ComponentWithHoc;\n\n                    return <ComponentWithHoc {...this.props} />;\n                }\n            }\n\n            return DataComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/data.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}\n// module id = 30\n// module chunks = 0","\nimport React from \"react\";\nimport { compose, shouldUpdate, ComponentEnhancer } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { fromJS } from \"immutable\";\n\nimport { DefaultProps } from \"../components\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { schemaFormTypes, RC } from \"../models\";\n\nexport interface Props extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport interface ResetKeysHocOutSettings {\n    excludeKeys: string[];\n    includeKeys: string[];\n}\n\nexport const name = \"resetKey\";\n\n/**\n * resetKey\n * 用来筛选组件中的props\n * 配置：\n *  excludeKeys：需要去掉的属性数组\n *  includeKeys：需要的属性数组\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: ResetKeysHocOutSettings = { excludeKeys: [], includeKeys: [] }) => {\n        return (Component: any): RC<Props, any> => {\n            class ComponentHoc extends React.PureComponent<Props, any> {\n                public render(): JSX.Element {\n                    const { getOptions, getRequiredKeys } = this.props,\n                        normalOptions = getOptions(this.props, schemaFormTypes.hoc, name, fromJS(settings || {})),\n                        extraProps = getRequiredKeys(this.props, normalOptions.includeKeys, normalOptions.excludeKeys);\n\n                    return <Component {...extraProps} />;\n                }\n            }\n\n            return ComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/resetkey.tsx","import { fromJS } from \"immutable\";\n\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\n\nexport const schemaFormReducer = new SchemaFormReducer(fromJS({}));\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducer.tsx","import { createAction, createReducer, SimpleActionCreator, BaseActionCreator, EmptyActionCreator, Action } from \"redux-act\";\nimport { Reducer } from \"redux-act\";\nimport { List, Map, fromJS } from \"immutable\";\nimport { Store } from \"react-redux\";\n\nimport { FxReducer, d, m } from \"./reducer\";\nimport { TreeMap } from \"../libs/tree\";\nimport merge from \"../libs/merge\";\nimport { isProd } from \"../utils\";\n\nexport type ASN = Array<string | number> | string[];\n\nexport interface SchemaFormActions {\n    [index: string]: SimpleActionCreator<any, any>;\n    removeForm: SimpleActionCreator<ASN>;\n    createForm: SimpleActionCreator<{ key: string, data: any }>;\n    updateItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>;\n    updateItemMeta: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta: any, noChange?: boolean; }>;\n    addItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any }>;\n    removeItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, index: number }>;\n    moveToItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>;\n    removeItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta?: boolean }>;\n    combineActions: SimpleActionCreator<Action<any, any>[]>;\n}\n\n/**\n * 解析一个路径上的数据，判断数据格式，做处理\n * @param state 当前的state\n * @param keys  数据路径\n * @returns newState\n */\nconst resolveKeys = (state: Map<string, any>, keys: Array<string>): Map<string, any> => {\n    if (state.hasIn(keys)) {\n        return state;\n    }\n\n    for (let i = 0, n = keys.length; i < n; i++) {\n        let mKeys = [...keys].splice(0, i + 1);\n\n        // 如果key不存在，遍历生成数据结构\n        if (!state.hasIn(mKeys)) {\n            mKeys.pop();\n            if (!state.hasIn(mKeys)) {\n                if (keys[i].constructor === Number) {\n                    state = state.setIn(mKeys, List());\n                } else {\n                    state = state.setIn(mKeys, Map());\n                }\n            }\n        } else if (i < n) {\n            // 如果key存在，则判断数据结构是否与结构一致\n            let data = state.getIn(mKeys);\n\n            if (!Map.isMap(data) && !List.isList(data)) {\n                if (keys[i + 1].constructor === Number) {\n                    state = state.setIn(mKeys, List());\n                } else {\n                    state = state.setIn(mKeys, Map());\n                }\n            }\n        }\n    }\n\n    return state;\n};\n\nexport class SchemaFormReducer<T> implements FxReducer {\n\n    /**\n     * 创建一个表单\n     */\n    private createForm: SimpleActionCreator<{ key: string, data: any }>\n        = createAction<{ key: string, data: any }>(isProd() ? \"\" : \"创建一个表单数据\");\n    /**\n     * 更新一个表单数据\n     */\n    private updateItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>\n        = createAction<{ parentKeys: ASN, keys: ASN, data: any, meta?: any }>(isProd() ? \"\" : \"更新一个表单数据\");\n    /**\n     * 更新一个表单元数据\n     */\n    private updateItemMeta: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta: any, noChange?: boolean; }>\n        = createAction<{ parentKeys: ASN, keys: ASN, meta: any }>(isProd() ? \"\" : \"更新一个表单元数据\");\n    /**\n     * 添加一个元素到数组\n     */\n    private addItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, data: any }>\n        = createAction<{ parentKeys: ASN, keys: ASN, data: any }>(isProd() ? \"\" : \"添加一个数据\");\n    /**\n     * 从数组中删除一个元素\n     */\n    private removeItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, index: number }>\n        = createAction<{ parentKeys: ASN, keys: ASN, index: number }>(isProd() ? \"\" : \"删除一个数据\");\n    /**\n     * 移动一个数组元素\n     */\n    private moveToItem: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>\n        = createAction<{ parentKeys: ASN, keys: ASN, curIndex: number, toIndex: number }>(isProd() ? \"\" : \"元素移位\");\n    /**\n     * 删除一个字段的数据以及元数据\n     */\n    private removeItemData: SimpleActionCreator<{ parentKeys: ASN, keys: ASN, meta?: boolean }>\n        = createAction<{ parentKeys: ASN, keys: ASN, meta?: boolean }>(isProd() ? \"\" : \"删除一个字段的数据以及meta数据\");\n    /**\n     * 合并多个action，触发一次dispatch\n     */\n    private combineActions: SimpleActionCreator<Action<any, any>[]>\n        = createAction<Action<any, any>[]>(isProd() ? \"\" : \"合并多个action\");\n\n    private removeForm: SimpleActionCreator<ASN>\n        = createAction<ASN>(isProd() ? \"\" : \"清除一个form的数据\");\n\n    /**\n     * 构造\n     * @param initialState 初始化状态\n     */\n    constructor(private initialState: any) { }\n    /**\n     * 获取当前的actions\n     */\n    public get actions(): SchemaFormActions {\n        return {\n            createForm: this.createForm,\n            updateItemData: this.updateItemData,\n            updateItemMeta: this.updateItemMeta,\n            addItem: this.addItem,\n            removeItem: this.removeItem,\n            moveToItem: this.moveToItem,\n            removeItemData: this.removeItemData,\n            combineActions: this.combineActions,\n            removeForm: this.removeForm\n        };\n    }\n\n    /**\n     * 初始化actions\n     * @param store Redux中的store实例\n     */\n    public init(store: Store<Map<string, any>>): void {\n        for (const key in this.actions) {\n            if (this.actions.hasOwnProperty(key)) {\n                const action = this.actions[key];\n\n                if (!action.assigned()) {\n                    action.assignTo(store);\n                }\n            }\n        }\n    }\n\n    /**\n     * 返回当前的reducer\n     */\n    public get reducer(): Reducer<any> {\n        return createReducer<any>({\n            [this.createForm as any]: this.createFormHandle.bind(this),\n            [this.updateItemData as any]: this.updateItemDataHandle.bind(this),\n            [this.updateItemMeta as any]: this.updateItemMetaHandle.bind(this),\n            [this.addItem as any]: this.addItemDataHandle.bind(this),\n            [this.removeItem as any]: this.removeItemHandle.bind(this),\n            [this.moveToItem as any]: this.moveItemHandle.bind(this),\n            [this.removeItemData as any]: this.removeItemDataMetaHandle.bind(this),\n            [this.combineActions as any]: this.combineActionsHandle.bind(this),\n            [this.removeForm as any]: this.removeFormHandle.bind(this)\n        }, this.initialState);\n    }\n\n    /**\n     * 清除一个表单数据\n     * @param state   state\n     * @param param1  参数\n     */\n    private removeFormHandle(state: Map<string, any>, parentKeys: ASN) {\n        let dataKeys = parentKeys;\n\n        if (state.hasIn(dataKeys)) {\n            return state.removeIn(dataKeys);\n        }\n\n        return state;\n    }\n\n    /**\n     * 合并多个action\n     * @param state    state\n     * @param actions  需要调用的action\n     */\n    private combineActionsHandle(state: Map<string, any>, actions: Action<any, any>[]) {\n        state = actions.reduce((stateNew: Map<string, any>, act2: Action<any>) => {\n            return this.reducer(stateNew, act2);\n        }, state);\n\n        return state;\n    }\n\n    /**\n     * 删除一个字段的数据以及meta数据\n     * @param state   当前的state\n     * @param param1  参数\n     *  parentKeys  父亲的keys\n     *  keys        当前元素的keys\n     *  meta        是否要删除meta数据\n     */\n    private removeItemDataMetaHandle(state: Map<string, any>, { parentKeys, keys, meta }: any) {\n        let dataKeys = parentKeys.concat([d, ...keys]);\n        let metaKeys: ASN = parentKeys.concat([m]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n\n        state = resolveKeys(state, dataKeys);\n\n        if (state.hasIn(dataKeys)) {\n            state = state.removeIn(dataKeys);\n        }\n\n        if (childNode && meta) {\n            childNode.removeFromParent();\n        }\n\n        return state;\n    }\n\n    /**\n     * 创建一份表单数据\n     * @param state   当前的state\n     * @param param1  参数值，key 和 data\n     */\n    private createFormHandle(state: Map<string, any>, { key, data }: any): Map<string, any> {\n        if (state.has(key)) {\n            state = state.remove(key);\n        }\n\n        const meta = new TreeMap(key, fromJS({}));\n        const stateData = Map<string, any>({\n            meta: meta,\n            data: fromJS(data)\n        });\n\n        return state.set(key, stateData);\n    }\n    /**\n     * 修改一个数据\n     * 合并parrentKeys和keys，中间加入一个“data”\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemDataHandle(state: Map<string, any>, { parentKeys, keys, data, meta }: any): Map<string, any> {\n        let dataKeys = parentKeys.concat([d, ...keys]);\n\n        state = resolveKeys(state, dataKeys);\n        state = state.setIn(dataKeys, fromJS(data));\n\n        if (meta) {\n            state = this.updateItemMetaHandle(state, { parentKeys, keys, meta });\n        }\n\n        return state;\n    }\n\n    /**\n     * 添加一个数组到List\n     * 1. 添加数组\n     * 2. 修改meta中的collapsing字段为false，使得折叠的状态改变成不折叠的状态\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private addItemDataHandle(state: Map<string, any>, { parentKeys, keys, data }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys);\n        let formItemData: List<any>;\n\n        state = resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys) || List();\n        formItemData = formItemData.push(fromJS(data));\n\n        if (childNode && childNode.value) {\n            childNode.value = childNode.value.merge({\n                collapsing: false\n            });\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 删除数组中的一个元素\n     * 1. 删除元素数组中的数据\n     * 2. 删除meta信息中的数据\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private removeItemHandle(state: Map<string, any>, { parentKeys, keys, index }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.addChild(keys.concat([index]));\n        let formItemData: List<any>;\n\n        state = resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys);\n\n        if (!formItemData || !List.isList(formItemData)) {\n            return state;\n        }\n\n        if (childNode) {\n            childNode.removeFromParent();\n        }\n\n        return state.setIn(dataKeys, formItemData.remove(index));\n    }\n\n    /**\n     * 交换2个数组的位置\n     * 1. 交换数组数据\n     * 2. 交换meta中的位置信息\n     * @param state   当前的state\n     * @param param1  参数\n     *   parentKeys    父亲的keys\n     *   keys          当前item的keys\n     *   curIndex      当前item的索引\n     *   toIndex       需要交换的item索引\n     */\n    private moveItemHandle(state: Map<string, any>, { parentKeys, keys, curIndex, toIndex }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([d, ...keys]),\n            metaKeys: ASN = parentKeys.concat([m]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            offset = (toIndex > curIndex && false ? 1 : 0);\n        let oldFormItemData: List<any> = state.getIn(dataKeys),\n            formItemData: List<any> = state.getIn(dataKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys.concat([curIndex])),\n            childNodeTo: TreeMap | null = rootNode.containPath(keys.concat([toIndex]));\n\n        state = resolveKeys(state, dataKeys);\n\n        if (!formItemData || toIndex < 0) {\n            return state;\n        }\n\n        let curItemData = formItemData.get(curIndex);\n\n        formItemData = formItemData.remove(curIndex);\n        formItemData = formItemData.insert(toIndex - offset, curItemData);\n\n        // if (formItemData.equals(oldFormItemData)) {\n        //     return state;\n        // }\n\n        if (childNode) {\n            childNode.insertToFromParent(toIndex);\n        } else {\n            if (childNodeTo) {\n                childNodeTo.insertToFromParent(curIndex);\n            }\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 修改一个数据的元数据\n     * 通过parentKeys取得根节点\n     * 通过keys合成元素的节点路径，从根节点获取数据\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemMetaHandle(state: Map<string, any>, { parentKeys, keys, meta, noChange }: any): Map<string, any> {\n        let metaKeys: ASN = parentKeys.concat([m]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n        let value = childNode ? childNode.value : null;\n\n        // 如果childNode不存在，则新建一个\n        if (!childNode) {\n            childNode = rootNode.addChild(keys);\n        }\n\n        // 判断childNode，如果存在value，则合并value，否则创建value\n        if (childNode) {\n            if (value) {\n                childNode.value = merge(childNode.value, fromJS(meta), { \"*\": \"replace\" });\n            } else {\n                childNode.value = fromJS(meta);\n            }\n        }\n\n        if (noChange) {\n            return state;\n        }\n\n        // 生成新的TreeMap\n        let newRoot = new TreeMap(rootNode.getKey(), rootNode.value);\n\n        newRoot.children = rootNode.children;\n\n        return state.setIn(metaKeys, newRoot);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/schema.form.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_34__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}\n// module id = 34\n// module chunks = 0","import React, { PureComponent } from \"react\";\nimport PropTypes, { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../index\";\nimport { hoc } from \"./container\";\nimport { MergeHocOutProps } from \"../../hocs/merge\";\nimport { SchemaFormItem } from \"../formitem/index\";\nimport { FxUiSchema } from \"../../models/index\";\n\nexport interface Props extends DefaultProps, MergeHocOutProps {\n    RootComponent?: any;\n    uiSchemas?: Array<string | FxUiSchema>;\n}\n\n@(hoc as any)\nexport class SchemaForm extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { schemaId, mergeSchemaList, arrayLevel, RootComponent, children, ...extraProps } = this.props;\n        const formItemList = mergeSchemaList ? mergeSchemaList.map((uiScehma: FxUiSchema, idx: number) => {\n            let arrayLevelCopy = arrayLevel ? arrayLevel.concat([]) : [];\n\n            return <SchemaFormItem\n                key={idx}\n                {...extraProps}\n                schemaId={schemaId}\n                uiSchema={uiScehma}\n                arrayLevel={arrayLevelCopy}\n            />;\n        }) : [];\n\n        if (RootComponent) {\n            return <RootComponent >\n                {formItemList}\n                {children}\n            </RootComponent>;\n        }\n\n        return (\n            <div>\n                {formItemList}\n                {children}\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/component.tsx","import { compose, ComponentEnhancer, shouldUpdate } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    shouldUpdate(() => false),\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"merge\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/container.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"redux\";\nimport { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../default.props\";\nimport { hoc } from \"./container\";\nimport { FieldHocOutProps } from \"../../hocs/field\";\nimport { UtilsHocOutProps } from \"../../hocs/utils\";\nimport { isProd } from \"../../utils\";\n\nexport interface Props extends DefaultProps {\n\n}\n\n@(hoc as any)\nexport class SchemaFormItem extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { FieldComponent, uiSchema, ...extraProps } = this.props as Props & FieldHocOutProps & UtilsHocOutProps;\n        const options = extraProps.getOptions(this.props, \"field\", (uiSchema as any).field || (uiSchema as any).type);\n        let FieldComponentWithHoc: any = FieldComponent;\n\n        if (!FieldComponent) {\n            if (!isProd()) { console.warn(uiSchema, \"没有找到匹配的field\"); }\n            return null;\n        }\n\n        if (options.fieldHocs && options.fieldHocs.length) {\n            FieldComponentWithHoc = compose(\n                ...(options.fieldHocs || [])\n            )(FieldComponent);\n        }\n\n        return <FieldComponentWithHoc key={(uiSchema as any).keys.join(\"formItem\")} uiSchema={uiSchema} {...extraProps} />;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/component.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}\n// module id = 39\n// module chunks = 0","import { compose, ComponentEnhancer } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"make\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/container.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}\n// module id = 41\n// module chunks = 0","import { default as normalField, NormalField, name as n1 } from \"./normal\";\nimport { default as objectField, ObjectField, name as n2 } from \"./object\";\nimport { default as arrayField, ArrayField, name as n3 } from \"./array\";\n\nexport default [normalField, objectField, arrayField];\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/index.tsx","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose, shouldUpdate } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { FieldHocOutProps } from \"../hocs/field\";\n\nexport interface NormalFieldProps extends DefaultProps, UtilsHocOutProps, FieldHocOutProps {\n\n}\n\nexport const name = \"normal\";\n\n/**\n * 普通数据字段类型\n * 这里直接渲染[fieldHoc]中结算得出的WidgetComponent\n */\nexport class NormalField extends PureComponent<NormalFieldProps> {\n\n    constructor(props: NormalFieldProps, context: any) {\n        super(props, context);\n    }\n\n    public render(): JSX.Element | null {\n        const { WidgetComponent, FieldComponent, formItemMeta, formItemData, ...extraProps } = this.props,\n            fieldOptions = extraProps.getOptions(this.props, schemaFormTypes.field, name),\n            { keys } = extraProps.uiSchema as FxUiSchema;\n        let WidgetComponentWithHoc = WidgetComponent;\n\n        if (!WidgetComponent || !keys) {\n            return null;\n        }\n\n        if (fieldOptions.widgetHocs && fieldOptions.widgetHocs.length) {\n            WidgetComponentWithHoc = (compose(\n                ...fieldOptions.widgetHocs\n            ) as any)(WidgetComponent);\n        }\n\n        return (\n            <WidgetComponentWithHoc key={keys.join(\".\")} {...extraProps} />\n        );\n    }\n}\n\nexport default {\n    [name]: NormalField,\n    default: NormalField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/normal.tsx","import React, { PureComponent } from \"react\";\n\nimport { SchemaForm } from \"../components/form\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { compose } from \"recompose\";\n\nexport interface ObjectFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport const name = \"object\";\n\n/**\n * Object类型的字段解析\n * 嵌套一层SchemaForm\n */\nexport class ObjectField extends PureComponent<ObjectFieldProps, any> {\n    public render(): JSX.Element | null {\n        const { arrayIndex, arrayLevel, parentKeys, globalOptions, ajv, schemaId, getOptions, reducerKey, uiSchema } = this.props,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc: any = SchemaForm;\n\n        // 如果children设置成null，则返回空\n        if (uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // 如果需要对schemaform对hoc包装\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(SchemaForm);\n        }\n\n        return (\n            <SchemaFormWithHoc\n                arrayIndex={arrayIndex}\n                arrayLevel={arrayLevel}\n                RootComponent={options.Root}\n                reducerKey={reducerKey}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"*\"]}\n                uiSchema={uiSchema}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n}\n\nexport default {\n    [name]: ObjectField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/object.tsx","import React, { PureComponent } from \"react\";\nimport { shouldUpdate, compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models\";\n\nimport { SchemaForm } from \"../components/form\";\nimport { hocFactory } from \"../factory\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\n\nexport interface ArrayFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nlet arrayFieldStyle = {\n    width: \"100%\",\n    height: \"100%\"\n};\n\nclass ArrayFieldComponent extends React.PureComponent {\n    public render() {\n        return <div style={arrayFieldStyle}>{this.props.children}</div>;\n    }\n}\n\nexport const name = \"array\";\n\n/**\n * 数组结构的字段解析\n * 这里需要数组元素的个数来做循环\n * 循环生成元素个数的SchemaForm\n */\nexport class ArrayField extends PureComponent<ArrayFieldProps, any> {\n    private SchemaFormWithHoc: new () => React.PureComponent = ArrayFieldComponent;\n    private SchemaFormItemWithHoc: new () => React.PureComponent;\n\n    constructor(props: ArrayFieldProps) {\n        super(props);\n\n        this.initComponent();\n    }\n\n    /**\n     * 初始化Component\n     */\n    private initComponent() {\n        const { uiSchema, formItemData, getOptions } = this.props,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc = null, SchemaFormItemWithHoc = null;\n\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(options.ArrayFieldComponent || ArrayFieldComponent);\n        }\n\n        if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n            SchemaFormItemWithHoc = compose(...options.formItemHocs)(SchemaForm);\n        }\n\n        this.SchemaFormWithHoc = SchemaFormWithHoc;\n        this.SchemaFormItemWithHoc = SchemaFormItemWithHoc;\n    }\n\n    /**\n     * 遍历数据，生成子表单\n     * @param idx 数组的索引\n     */\n    private renderItem(idx: number): JSX.Element | null {\n        const { parentKeys, globalOptions, getOptions, arrayLevel = [], getRequiredKeys, ajv, reducerKey, ArrayItemComponent } = this.props,\n            uiSchema = this.props.uiSchema as FxUiSchema,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc: any = this.SchemaFormItemWithHoc || SchemaForm;\n        // const extraProps = getRequiredKeys(this.props, options);\n\n        // 如果不需要children，则跳出\n        if (uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // // 如果需要对schemaform对hoc包装\n        // if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formItemHocs)(SchemaForm);\n        // }\n\n        return (\n            <SchemaFormWithHoc\n                key={idx}\n                arrayIndex={idx}\n                uiSchema={uiSchema}\n                RootComponent={options.Root}\n                ArrayItemComponent={ArrayItemComponent}\n                arrayLevel={arrayLevel.concat([idx])}\n                reducerKey={reducerKey}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"-\"]}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n    /**\n     * 渲染页面\n     */\n    public render(): JSX.Element | null {\n        const { uiSchema, formItemData, getOptions, getRequiredKeys } = this.props, child = [],\n            options = getOptions(this.props, schemaFormTypes.field, name),\n            SchemaFormWithHoc = this.SchemaFormWithHoc,\n            { fieldIncludeKeys, fieldExcludeKeys } = options,\n            extraProps = getRequiredKeys(this.props, fieldIncludeKeys, fieldExcludeKeys);\n\n        for (let i = 0; i < +formItemData; i++) {\n            child.push(this.renderItem(i));\n        }\n\n        // 如果需要对schemaform对hoc包装\n        // if (options.formHocs && options.formHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formHocs)(({ children }) => {\n        //         return <div style={arrayFieldStyle}>{children}</div>;\n        //     });\n\n        //     return <SchemaFormWithHoc {...this.props} children={child} />;\n        // }\n\n        return <SchemaFormWithHoc children={child} {...extraProps} />;\n    }\n}\n\nexport default {\n    [name]: ArrayField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/array.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, withHandlers } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { fromJS, Map, List } from \"immutable\";\nimport ajv, { Ajv, ErrorObject, ValidationError } from \"ajv\";\nimport { schemaFieldFactory, schemaKeysFactory } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models\";\nimport { hocFactory, reducerFactory } from \"../factory\";\nimport { TreeMap } from \"./tree\";\nimport { SchemaFormActions } from \"../reducers/schema.form\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { d, m } from \"../reducers/reducer\";\nimport { ValidateHocOutProps } from \"../hocs/validate\";\n\nexport interface SchemaFormHocSettings {\n    rootReducerKey: string[];\n    parentKeys: string[];\n}\n\nexport interface SchemaFormProps extends DefaultProps, UtilsHocOutProps, SchemaFormHocOutProps {\n    root?: TreeMap;\n    data?: any;\n    errors?: any;\n    isValid?: boolean;\n    isValidating?: boolean;\n\n    formKey: string;\n    initData?: any;\n    shouldResetForm?: boolean;\n}\n\nexport interface SchemaFormHocOutProps {\n    validateAll?: ($async?: boolean) => Promise<any>;\n    resetForm?: () => void;\n}\n\nexport const name = \"schemaFormDec\";\n\n/**\n * 提供全部验证等功能\n * @param Component 需要包装的组件\n */\nexport default (settings: SchemaFormHocSettings = { rootReducerKey: [], parentKeys: [] }) => {\n    return (Component: any): RC<SchemaFormProps, any> => {\n        @(compose(\n            hocFactory.get(\"utils\")(),\n            // 绑定数据\n            connect((state: Map<string, any>) => {\n                let rootKeys = settings.rootReducerKey.concat(settings.parentKeys),\n                    dataKeys = rootKeys.concat([d]),\n                    metaKeys = rootKeys.concat([m]),\n                    root = state.getIn(metaKeys);\n\n                return {\n                    data: state.getIn(dataKeys),\n                    root: root,\n                    isValid: root ? root.value.get(\"isValid\") : true,\n                    errors: root ? root.value.get(\"errors\") : null,\n                    isValidating: root ? root.value.get(\"isLoading\") : false\n                };\n            }),\n            withHandlers({\n                /**\n                 * 验证所有的字段\n                 */\n                validateAll: (props: SchemaFormProps) => {\n                    let { updateItemMeta } = props.getActions(props), timeId: any;\n\n                    /**\n                     * 验证所有字段\n                     * async : boolean 是否是异步的\n                     */\n                    return async (async?: boolean) => {\n                        let root = props.root as TreeMap,\n                            curAjv = props.ajv,\n                            dataRaw = props.data,\n                            validate = props.ajv.getSchema(props.schemaId),\n                            $validateBeforeData = fromJS({\n                                dirty: true,\n                                isValid: true,\n                                isLoading: true\n                            }),\n                            $validateAfterData = fromJS({ isLoading: false, dirty: true }),\n                            normalizeDataPath = props.normalizeDataPath;\n\n                        // 如果没有root，则跳出\n                        if (!root) {\n                            return;\n                        }\n\n                        // 如果没有validate，则报错\n                        if (!validate) {\n                            throw new Error(`没有找到对应的${props.schemaId};`);\n                        }\n\n                        try {\n                            // 将所有的字段的meta数据标准化\n                            root.forEach((node: TreeMap) => {\n                                if (node.value) {\n                                    return node.value.merge($validateBeforeData);\n                                }\n\n                                return $validateBeforeData;\n                            }, true);\n                            // 验收更新meta数据\n                            timeId = setTimeout(() => {\n                                updateItemMeta({\n                                    parentKeys: settings.parentKeys,\n                                    keys: [],\n                                    meta: root.value\n                                });\n                            }, 200);\n\n                            if (Map.isMap(dataRaw) || List.isList(dataRaw)) {\n                                dataRaw = dataRaw.toJS();\n                            }\n\n                            // 验证数据\n                            curAjv.errors = null;\n                            if (!await validate(dataRaw)) {\n                                throw new (ValidationError as any)(validate.errors.concat(curAjv.errors || []));\n                            }\n\n                            // 设置成功的标志位\n                            root.value = root.value.merge({\n                                isValid: true\n                            });\n\n                            // 提交meta数据\n                            updateItemMeta({\n                                parentKeys: settings.parentKeys,\n                                keys: [],\n                                meta: root.value\n                            });\n                        } catch (e) {\n                            // 错误的逻辑\n                            if (!(e instanceof (ValidationError as any))) {\n                                return {\n                                    isValid: false,\n                                    errMsg: e.message\n                                };\n                            }\n\n                            // 处理错误\n                            e.errors.forEach((element: ErrorObject) => {\n                                let dataKeys = root.getCurrentKeys().concat(normalizeDataPath(props.schemaId, element.dataPath));\n                                let childNode = root.containPath(dataKeys);\n\n                                if (!childNode) {\n                                    childNode = root.addChild(dataKeys, fromJS({}));\n                                }\n\n                                if (childNode) {\n                                    childNode.value = childNode.value.merge($validateAfterData).merge({\n                                        isValid: false,\n                                        errorText: dataKeys.pop() + \" \" + element.message\n                                    });\n                                }\n                            });\n\n                            root.value = root.value.merge({\n                                isValid: false,\n                                errors: e.errors\n                            });\n                        } finally {\n                            clearTimeout(timeId);\n                            root.forEach((node: TreeMap) => {\n                                if (node.value) {\n                                    return node.value.merge($validateAfterData);\n                                }\n\n                                return node.value;\n                            }, true);\n\n                            updateItemMeta({\n                                parentKeys: settings.parentKeys,\n                                keys: [],\n                                meta: root.value\n                            });\n                        }\n\n                        return {\n                            isValid: root.value.get(\"isValid\"),\n                            data: dataRaw\n                        };\n                    };\n                },\n                resetForm: (props: SchemaFormProps) => {\n                    return () => {\n                        const { formKey, shouldResetForm, reducerKey, initData = {} } = props;\n\n                        if (formKey && shouldResetForm !== false) {\n                            let { createForm } = props.getActions(props);\n\n                            if (createForm) {\n                                createForm({\n                                    key: formKey,\n                                    data: initData\n                                });\n                            }\n                        }\n                    };\n                }\n            })) as any)\n        class SchemaFormComponentHoc extends PureComponent<SchemaFormProps, any> {\n            private _validateAll: (async?: boolean) => Promise<void>;\n\n            constructor(props: SchemaFormProps) {\n                super(props);\n\n                // 绑定当前的方法，可以使用autobind\n                this._validateAll = props.validateAll.bind(this);\n                // 这里创建一个form，如果当前存在formKey，则覆盖掉当前的数据\n                props.resetForm();\n            }\n\n            public render(): JSX.Element | null {\n                const { errors, isValid = false, isValidating = false, getRequiredKeys, getOptions, schemaId } = this.props,\n                    options = getOptions(this.props, schemaFormTypes.hoc, name, fromJS(settings || {})),\n                    extraProps = getRequiredKeys(this.props, options.hocIncludeKeys, options.hocExcludeKeys);\n\n                return (\n                    <Component\n                        validateAll={this._validateAll}\n                        parentKeys={settings.parentKeys}\n                        schemaId={schemaId}\n                        {...extraProps} />\n                );\n            }\n        }\n\n        return SchemaFormComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/dec.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_47__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}\n// module id = 47\n// module chunks = 0"],"sourceRoot":""}