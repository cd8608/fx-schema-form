{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 360c773bcefb5d589846","webpack:///external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}","webpack:///external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}","webpack:///./src/factory.tsx","webpack:///external {\"root\":\"SchemaFormCore\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}","webpack:///./src/reducer.tsx","webpack:///./src/components/form/index.tsx","webpack:///./src/libs/tree.tsx","webpack:///external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}","webpack:///./src/components/default.props.tsx","webpack:///./src/index.tsx","webpack:///./src/hocs/index.tsx","webpack:///./src/hocs/merge.tsx","webpack:///./src/hocs/utils.tsx","webpack:///external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}","webpack:///./src/hocs/theme.tsx","webpack:///./src/hocs/field.tsx","webpack:///./src/hocs/array.tsx","webpack:///./src/reducers/schema.form.tsx","webpack:///external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}","webpack:///./src/reducers/reducer.tsx","webpack:///./src/hocs/validate.tsx","webpack:///./src/hocs/make.tsx","webpack:///./src/hocs/temp.tsx","webpack:///./src/hocs/data.tsx","webpack:///external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}","webpack:///./src/components/index.tsx","webpack:///./src/components/form/component.tsx","webpack:///./src/components/form/container.tsx","webpack:///./src/components/formitem/index.tsx","webpack:///./src/components/formitem/component.tsx","webpack:///external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}","webpack:///./src/components/formitem/container.tsx","webpack:///external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}","webpack:///./src/models/index.tsx","webpack:///./src/fields/index.tsx","webpack:///./src/fields/normal.tsx","webpack:///./src/fields/object.tsx","webpack:///./src/fields/array.tsx","webpack:///./src/libs/dec.tsx","webpack:///external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"redux-act\"), require(\"reselect\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SchemaFormReact\", [\"react\", \"recompose\", \"immutable\", \"fx-schema-form-core\", \"react-redux\", \"resolve-pathname\", \"redux-act\", \"reselect\", \"redux\", \"prop-typese\", \"ajv\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SchemaFormReact\"] = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"redux-act\"), require(\"reselect\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse\n\t\troot[\"SchemaFormReact\"] = factory(root[\"React\"], root[\"recompose\"], root[\"Immutable\"], root[\"SchemaFormCore\"], root[\"react-redux\"], root[\"resolve-pathname\"], root[\"redux-act\"], root[\"reselect\"], root[\"Redux\"], root[\"prop-types\"], root[\"Ajv\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_15__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_32__, __WEBPACK_EXTERNAL_MODULE_34__, __WEBPACK_EXTERNAL_MODULE_41__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 360c773bcefb5d589846","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}\n// module id = 1\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}\n// module id = 3\n// module chunks = 0","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { FxReducer } from \"./reducers/reducer\";\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\nimport { DefaultProps } from \"./components\";\nimport { FxUiSchema, RC, NsFactory, SchemaFormNs } from \"./models\";\nimport { utils, merge, field, theme, array, validate, make, temp, data } from \"./hocs\";\nimport { schemaFormReducer } from \"./reducer\";\n\nexport const reducerFactory = new BaseFactory<FxReducer>();\nexport const hocFactory = new BaseFactory<(settings?: any) => new () => React.PureComponent<DefaultProps, any>>();\nexport const themeFactory = new BaseFactory<NsFactory>();\n\nhocFactory.add(\"utils\", utils.bind(utils, hocFactory));\nhocFactory.add(\"merge\", merge.bind(merge, hocFactory));\nhocFactory.add(\"field\", field.bind(field, hocFactory));\nhocFactory.add(\"theme\", theme.bind(theme, hocFactory));\nhocFactory.add(\"array\", array.bind(array, hocFactory));\nhocFactory.add(\"validate\", validate.bind(validate, hocFactory));\nhocFactory.add(\"make\", make.bind(make, hocFactory));\nhocFactory.add(\"temp\", temp.bind(temp, hocFactory));\nhocFactory.add(\"data\", data.bind(data, hocFactory));\n\nreducerFactory.add(\"schemaForm\", schemaFormReducer);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"SchemaFormCore\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}\n// module id = 5\n// module chunks = 0","import { fromJS } from \"immutable\";\n\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\n\nexport const schemaFormReducer = new SchemaFormReducer(fromJS({}));\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducer.tsx","import { SchemaForm } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaForm.propTypes = Object.assign({}, DefaultPropsTypeCheck);\n\nexport { SchemaForm };\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/index.tsx","\nexport type Tsn = string | number;\n\n/**\n * tree map struct\n * 这里用来记录数据的元数据信息\n * 元数据信息包括，isValid，isLoading，isShow，...etc\n */\nexport class TreeMap {\n    public children: TreeMap[] = [];\n\n    /**\n     * 构造函数\n     * @param key    当前节点的key，用于计算位置\n     * @param value  当前节点的值\n     * @param parent 当前节点的父亲节点\n     */\n    constructor(private key: string, public value: any, private parent?: TreeMap) { }\n\n    /**\n     * 添加一个孩子元素\n     * 这里需要构建一颗完整的树，所以要遍历keys来动态创建节点\n     * time complexity = O(1) / Constant\n     * @param keys  节点的路径 example [\"root\",\"b\"]  root -> b\n     * @param value 孩子的数据\n     * @returns TreeMap\n     */\n    public addChild(keys: Array<Tsn>, value?: any): TreeMap | null {\n        let curNode: TreeMap = this;\n        let child: TreeMap | null = null;\n\n        if (!keys.length) {\n            return this;\n        }\n\n        keys = [...keys];\n\n        // 创建所有路径的节点\n        while (keys.length) {\n            let key: Tsn = keys.shift() as (Tsn);\n            let isNumber = key.constructor === Number;\n\n            child = curNode.contains(key);\n\n            // 这里需要做一下特殊处理\n            // 如果是数字的话，则说明是数组，key改成`-`\n            // 如果不是数组的话，则无所谓顺序，直接push就行\n            // 如果是数组，则要保证顺序和数据的下标一致\n            if (!child) {\n                if (isNumber) {\n                    child = new TreeMap(\"-\", null, curNode);\n                    curNode.children[key as number] = child;\n                } else {\n                    child = new TreeMap(key.toString(), null, curNode);\n                    curNode.children.push(child);\n                }\n            }\n\n            curNode = child;\n        }\n\n        if (child) {\n            child.value = value;\n        }\n\n        return child;\n    }\n\n    /**\n     * 获取当前的key\n     * 如果key是`-`,代表是数组，则转换成数组下标\n     * time complexity = O(1) / Constant\n     * @returns string\n     */\n    public getKey(): string {\n        if (!this.key || this.key === \"-\") {\n            return this.getIndexInParent().toString();\n        }\n\n        return this.key;\n    }\n\n    /**\n     * 获取当前节点的keys路径\n     * time complexity = O(1) / Constant\n     * @returns string[]\n     */\n    public getCurrentKeys(): Array<Tsn> {\n        let keys: Array<Tsn> = [];\n\n        if (this.parent) {\n            keys = keys.concat(this.parent.getCurrentKeys());\n        }\n\n        return keys.concat([this.key]);\n    }\n\n    /**\n     * 获取当前节点在父亲children中的下标索引\n     * time complexity = O(1) / Constant\n     * @returns number\n     */\n    public getIndexInParent(): number {\n\n        if (this.parent) {\n            let children = this.parent.children;\n\n            for (let i = 0, n = children.length; i < n; i++) {\n                let child = children[i];\n\n                if (child && child === this) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * 从当前节点查找是否存在节点\n     * time complexity = O(n) / Linear\n     * @param key 节点的数据\n     * @returns TreeMap\n     */\n    public contains(key: Tsn): TreeMap | null {\n        let isNumber = key.constructor === Number;\n\n        // 如果是数字的话，直接返回children中对应下标的元素\n        if (isNumber) {\n            if (this.children.length > key) {\n                let child = this.children[key as number];\n\n                if (!child) {\n                    this.children[key as number] = new TreeMap(\"-\", null, this);\n\n                    child = this.children[key as number];\n                }\n\n                return child;\n            }\n\n            return null;\n        }\n\n        // 如果当前节点的key===要搜索的key，则返回本身\n        if (this.getKey() === key) {\n            return this;\n        }\n\n        // 如果没有children，则返回空\n        if (!this.children || this.children.length === 0) {\n            return null;\n        }\n        // 遍历子节点，层层递归，直到找到\n        for (let i = 0; i < this.children.length; i++) {\n            let child = this.children[i];\n\n            if (child && child.contains(key)) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 根据给定的路径数组，返回对应的节点\n     * time complexity = O(n) / Linear\n     * @param keys 路径\n     * @returns TreeMap | null\n     */\n    public containPath(keys: Array<Tsn>): TreeMap | null {\n        let node: TreeMap | null = this;\n\n        keys.forEach((key: Tsn) => {\n            if (!node) {\n                return null;\n            }\n            node = node.contains(key);\n\n            if (!node) {\n                return null;\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * 从父亲节点中删除当前节点\n     * time complexity = O(n) / Linear\n     */\n    public removeFromParent(): void {\n        let index = this.getIndexInParent();\n\n        if (this.parent) {\n            this.parent.children.splice(index, 1);\n        }\n    }\n\n    /**\n     * 移动到某个位置\n     * time complexity = O(1) / Linear\n     * @param toIndex 需要移动到的位置\n     */\n    public insertToFromParent(toIndex: number): void {\n        let curIndex = this.getIndexInParent();\n        let offset = (toIndex > curIndex && false) ? 1 : 0;\n        let splitIndex = toIndex;\n\n        // 如果没有父亲，或者父亲没有子节点，或者当前位置小于0\n        if (!this.parent || !this.parent.children || curIndex < 0) {\n            return;\n        }\n\n        // 如果超出了父亲的子节点数量，添加一个\n        if (this.parent.children.length <= toIndex) {\n            this.parent.addChild([toIndex]);\n        }\n\n        // 父亲节点中删除当前元素\n        this.removeFromParent();\n        // 将当前节点插入到制定的位置\n        this.parent.children = this.parent.children.concat([]).splice(0, splitIndex - offset).concat([this])\n            .concat(this.parent.children.splice(splitIndex - offset));\n    }\n\n    /**\n     * 遍历指定节点下所有子节点的value数据,当前节点不计算在内\n     * @param node 指定的节点\n     */\n    public forEach(clearFunc: (node: TreeMap) => any, currentNode = false) {\n        if (currentNode) {\n            this.value = clearFunc(this);\n        }\n\n        if (!this.children) {\n            return;\n        }\n\n        for (let i = 0, n = this.children.length; i < n; i++) {\n            if (this.children[i]) {\n                this.children[i].value = clearFunc(this.children[i]);\n                this.children[i].forEach(clearFunc);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/tree.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}\n// module id = 9\n// module chunks = 0","import { UiSchema } from \"fx-schema-form-core/dist/typings/models/uischema\";\nimport { Ajv } from \"ajv\";\nimport Immutable from \"immutable\";\nimport propTypes, { ValidationMap } from \"prop-types\";\n\nimport { FxUiSchema } from \"../models/index\";\n/**\n * 默认的组件参数\n */\nexport interface DefaultProps {\n    /**\n     * schema对应的$id\n     */\n    schemaId: string;\n    /**\n     * uiSchema\n     */\n    uiSchema?: FxUiSchema;\n    /**\n     * 父亲的路径\n     */\n    parentKeys: string[];\n    /**\n     * 全局默认配置\n     */\n    globalOptions: Immutable.Map<string, any>;\n    /**\n     * ajv的实例\n     */\n    ajv: Ajv;\n    /**\n     * 如果是数组，则表示当前数组的下标\n     */\n    arrayIndex?: number;\n    /**\n     * 当前formItem的层级\n     */\n    arrayLevel?: number[];\n    /**\n     * 数据\n     */\n    formItemData?: any;\n    /**\n     * meta数据\n     */\n    formItemMeta?: any;\n    /**\n     * 数组元素子项的操作\n     */\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n}\n\nexport const DefaultPropsTypeCheck: ValidationMap<DefaultProps & { customProp: Function }> = {\n    schemaId: propTypes.string.isRequired,\n    uiSchema: propTypes.object,\n    parentKeys: propTypes.array.isRequired,\n    globalOptions: propTypes.object.isRequired,\n    ajv: propTypes.object.isRequired,\n    arrayIndex: propTypes.number,\n    arrayLevel: propTypes.array,\n    formItemData: propTypes.any,\n    formItemMeta: propTypes.any,\n    ArrayItemComponent: propTypes.any\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/default.props.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\nimport { reducerFactory, hocFactory, themeFactory } from \"./factory\";\nimport { FxReducer } from \"./reducers/reducer\";\nimport { SchemaFormActions } from \"./reducers/schema.form\";\nimport { SchemaForm, DefaultProps } from \"./components\";\nimport { RC, models, SchemaFormNs } from \"./models\";\n\nimport { NormalField, ObjectField, ArrayField } from \"./fields\";\nimport { TreeMap } from \"./libs/tree\";\nimport { SchemaFormHocSettings, SchemaFormHocOutProps, default as schemaFormDec } from \"./libs/dec\";\nimport { SchemaFormProps } from \"./libs/dec\";\n\nlet total = models;\n\n/**\n * 默认样式配置\n * 每个样式包含temp，field和widget三个factory\n */\nconst defaultTheme = {\n    tempFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    fieldFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    widgetFactory: new BaseFactory<RC<DefaultProps, any>>()\n};\n\ndefaultTheme.fieldFactory.add(\"default\", NormalField as any);\ndefaultTheme.fieldFactory.add(\"object\", ObjectField as any);\ndefaultTheme.fieldFactory.add(\"array\", ArrayField as any);\n\nthemeFactory.add(\"default\", defaultTheme as any);\n\nhocFactory.add(\"schemaFormDec\", schemaFormDec.bind(schemaFormDec, hocFactory));\n\nexport default {\n    themeFactory,\n    defaultTheme,\n    schemaFormDec,\n    TreeMap,\n    reducerFactory,\n    SchemaForm,\n    hocFactory\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","export { default as merge, MergeHocOutProps } from \"./merge\";\nexport { default as utils, UtilsHocOutProps } from \"./utils\";\nexport { default as theme } from \"./theme\";\nexport { default as field } from \"./field\";\nexport { default as array } from \"./array\";\nexport { default as validate } from \"./validate\";\nexport { default as make } from \"./make\";\nexport { default as temp } from \"./temp\";\nexport { default as data } from \"./data\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/index.tsx","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, MergeLib, FxJsonSchema, UiSchema } from \"fx-schema-form-core\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { compose, shouldUpdate, onlyUpdateForKeys } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\n\n/**\n * MergeHoc 添加的属性\n */\nexport interface MergeHocOutProps {\n    mergeSchemaList?: FxUiSchema[];\n}\n\nexport interface MergeHocProps extends DefaultProps {\n    uiSchemas: Array<string | UiSchema>;\n}\n\nlet totalTime = 0, timeid;\n\n/**\n * merge参数中的schema和uiSchema，生成新的对象mergeSchemaList，传入组件的props中\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n * mergeSchemaList    合并之后的数据\n */\nexport default (hocFactory: BaseFactory<any>, settings: any = {}) => {\n    return (Component: RC<any, any>): RC<MergeHocProps, any> => {\n        class MergeComponentHoc extends PureComponent<MergeHocProps, any> {\n            private _mergeUiSchemaList: FxUiSchema[];\n\n            /**\n             * 合并schema和uiSchema生成 mergeUiSchemaList\n             * @param props props\n             */\n            constructor(props: MergeHocProps) {\n                super(props);\n\n                const uiSchema = props.uiSchema ? Object.assign({}, props.uiSchema) : undefined;\n\n                if (uiSchema) {\n                    uiSchema.keys = uiSchema.originKeys;\n                }\n\n                const merge = new MergeLib(props.ajv, props.schemaId, uiSchema, props.uiSchemas as any);\n\n                this._mergeUiSchemaList = merge.mergeUiSchemaList.map((v: any) => {\n                    return this.mergeKeys(v);\n                });\n            }\n\n            /**\n             * 解析keys\n             * 1. 遍历keys中的元素，如果遇到-，则替换成数字\n             * @param mergeSchema 合并过后的FxUiSchema\n             */\n            private mergeKeys(mergeSchema: any) {\n                const { arrayLevel = [] } = this.props;\n                const arrayLevelCopy = arrayLevel.concat([]);\n\n                mergeSchema = Object.assign({}, mergeSchema);\n                mergeSchema.originKeys = [].concat(mergeSchema.keys);\n                mergeSchema.keys = mergeSchema.keys.reverse().map((key: string) => {\n                    if (key === \"-\") {\n                        return arrayLevelCopy.pop();\n                    }\n\n                    return key;\n                });\n                mergeSchema.keys.reverse();\n\n                return mergeSchema;\n            }\n\n            public render(): JSX.Element {\n                const { uiSchemas, uiSchema, ...extraProps } = this.props;\n\n                return (\n                    <Component\n                        mergeSchemaList={this._mergeUiSchemaList}\n                        {...extraProps}\n                    />\n                );\n            }\n        }\n\n        return MergeComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/merge.tsx","\n\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, MergeLib, FxJsonSchema, schemaKeysFactory, schemaFieldFactory } from \"fx-schema-form-core\";\nimport { compose, shouldUpdate, onlyUpdateForKeys } from \"recompose\";\nimport Immutable from \"immutable\";\nimport resolvePathname from \"resolve-pathname\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\n\n// const resolvePathname = require(\"resolve-pathname\");\n\nexport interface UtilsHocOutProps {\n    getOptions: (props: DefaultProps, category: string, field: string, ...extraSettings: Immutable.Map<string, any>[])\n        => { [key: string]: any };\n    getTitle(props: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): () => string;\n    getPathKeys: (keys: string[], path: string) => Array<string | number>;\n    normalizeDataPath: (schemaId: string, dataPath: string) => Array<string | number>;\n    getRequiredKeys: (props: DefaultProps, include: string[], exclude: string[]) => { [key: string]: any };\n}\n\n/**\n * 包装utils的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性\n * getOptions    获取参数\n * getTitle      获取当前uiSchema的title\n * getPathKeys   获取相对于当前keys的路径\n */\nexport default (hocFactory: BaseFactory<any>, settings: any = {}) => {\n    return (Component: any): RC<DefaultProps, any> => {\n        class ComponentHoc extends PureComponent<UtilsHocOutProps, any> {\n            public render(): JSX.Element {\n                return <Component\n                    getTitle={this.getTitle}\n                    getPathKeys={this.getPathKeys}\n                    getOptions={this.getOptions}\n                    normalizeDataPath={this.normalizeDataPath}\n                    getRequiredKeys={this.getRequiredKeys}\n                    {...this.props} />;\n            }\n\n            /**\n             * 过滤props中的属性，只传递所需的属性\n             * 从设置中，获取一部分的设置\n             * @param props        当前component的props\n             * @param includeKeys  需要保留的keys\n             * @param excludeKeys  需要去掉的keys\n             */\n            private getRequiredKeys(props: { [key: string]: any }, includeKeys: string[] = [], excludeKeys: string[] = [])\n                : { [key: string]: any } {\n                let extraProps: { [key: string]: any } = {};\n\n\n                if (includeKeys && includeKeys.constructor === Array && includeKeys.length) {\n                    includeKeys.forEach((key: string) => {\n                        if (props.hasOwnProperty(key)) {\n                            extraProps[key] = props[key];\n                        }\n                    });\n                } else {\n                    extraProps = Object.assign({}, props);\n                }\n\n                if (excludeKeys && excludeKeys.constructor === Array && excludeKeys.length) {\n                    excludeKeys.forEach((key: string) => {\n                        if (extraProps.hasOwnProperty(key)) {\n                            delete extraProps[key];\n                        }\n                    });\n                }\n\n                return extraProps;\n            }\n\n            /**\n             * dataPath中的key格式化；\n             * dataPath是一个字符串，需要把里面的数字转化一下\n             * dataPath中可能有数组的格式，所以需要把数字转换成数字，而不是字符换\n             * 遍历所有的key，发现是数字字符，则查找父级的schema，如果父级的type是array，则把当前key转换成数字\n             * @param schemaId schemaId\n             * @param dataPath 当前的数据路径字符串\n             */\n            private normalizeDataPath(schemaId: string, dataPath: string): Array<string | number> {\n                let dataKeys: Array<string | number> = dataPath.replace(/^\\//g, \"\").split(\"/\");\n\n                dataKeys = dataKeys.map((key: string | number, index: number) => {\n                    if (Number.isInteger(+key)) {\n                        let keys: Array<string | number> = dataKeys.slice(0, index);\n\n                        keys.unshift(schemaId);\n\n                        if (schemaKeysFactory.has(keys.join(\"/\"))) {\n                            let schema = schemaFieldFactory.get(schemaKeysFactory.get(keys.join(\"/\")));\n\n                            if (schema.type === \"array\") {\n                                return +key;\n                            }\n                        }\n                    }\n\n                    return key;\n                });\n\n                return dataKeys;\n            }\n\n            /**\n             * 获取参数\n             * @param props         当前component的props\n             * @param category      需要获取的种类，有template，field，hoc等\n             * @param field         field的名称\n             * @param extraSettings 其余的设置项\n             */\n            private getOptions(props: DefaultProps, category: string, field: string, ...extraSettings: Immutable.Map<string, any>[])\n                : { [key: string]: any } {\n                const { uiSchema = {}, globalOptions } = props;\n                const { options } = uiSchema as FxUiSchema;\n                let optionsArray: Immutable.Map<string, any>[] = [];\n\n                if (globalOptions && globalOptions.hasIn([category, \"default\"])) {\n                    optionsArray.push(globalOptions.getIn([category, \"default\"]));\n                }\n\n                if (globalOptions && globalOptions.hasIn([category, field])) {\n                    optionsArray.push(globalOptions.getIn([category, field]));\n                }\n\n                if (options && options.hasIn([category, field])) {\n                    optionsArray.push(options.getIn([category, field]));\n                }\n\n                optionsArray = optionsArray.concat(extraSettings);\n\n                let opts = optionsArray.reverse().reduce((prev: Immutable.Map<string, any>, next: Immutable.Map<string, any>) => {\n                    if (next) {\n                        if (!Immutable.Map.isMap(next)) {\n                            next = Immutable.fromJS(next);\n                        }\n                        return next.merge(prev);\n                    }\n\n                    return prev;\n                }, Immutable.fromJS({})).toJS();\n\n                return opts;\n            }\n\n            /**\n             * 获取标题数据\n             * title || key || index\n             */\n            private getTitle(props: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): string {\n                const { uiSchema } = props;\n                let { title, keys } = uiSchema as FxUiSchema;\n\n                if (!title && extraSettings && extraSettings.length) {\n                    extraSettings.forEach((sets: Immutable.Map<string, any>) => {\n                        if (sets && !title && sets.get(\"title\")) {\n                            title = sets.get(\"title\");\n                        }\n                    });\n                }\n\n                if (title !== undefined) {\n                    return title;\n                }\n\n                if (keys && keys.length) {\n                    let keysCopy = [...keys], keyTitle = keysCopy.pop();\n\n                    return keyTitle !== undefined ? keyTitle.toString() : \"\";\n                }\n\n                if (props.arrayIndex) {\n                    return props.arrayIndex.toString();\n                }\n\n                return \"\";\n            }\n\n            /**\n             * 根据相对路径，得到keys\n             * @param keys 当前的keys\n             * @param path 路径\n             */\n            private getPathKeys(keys: Array<string>, path: string): Array<string> {\n                let keysCopy = [\"\"].concat(keys.concat([\"\"]));\n                let keysResolve: string[] = resolvePathname(path, keysCopy.join(\"/\")).split(\"/\");\n\n                keysResolve.shift();\n\n                if (keysResolve.length && !keysResolve[keysResolve.length - 1]) {\n                    keysResolve.pop();\n                }\n\n                return keysResolve;\n            }\n        }\n\n        return ComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/utils.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}\n// module id = 15\n// module chunks = 0","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, NsFactory } from \"../models/index\";\nimport { themeFactory } from \"../factory\";\n\nexport interface ThemeHocOutProps {\n    currentTheme: NsFactory;\n}\n\n/**\n * 包装theme的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性\n * currentTheme 当前的命名空间\n */\nexport default (hocFactory: BaseFactory<any>, settings: any = {}) => {\n    return (Component: any): RC<DefaultProps, any> => {\n        class ThemeComponentHoc extends PureComponent<DefaultProps, any> {\n            public render(): JSX.Element {\n                const { theme, field } = this.props.uiSchema as FxUiSchema;\n                let nsFactory;\n\n                if (themeFactory.has(theme || \"default\")) {\n                    nsFactory = themeFactory.get(theme || \"default\");\n                } else {\n                    throw new Error(`没有找到${theme || \"default\"}的样式！`);\n                }\n\n                return <Component currentTheme={nsFactory} {...this.props} />;\n            }\n        }\n\n        return ThemeComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/theme.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { ThemeHocOutProps } from \"./theme\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\n\nexport interface FieldHocOutProps {\n    FieldComponent: RC<any, any>;\n    WidgetComponent: RC<any, any>;\n}\n\n/**\n * 包装Field的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性FieldComponent   schema对应的fieldcomponent\n * 加入属性WidgetComponent  schema对应的widgetcomponent\n */\nexport default (hocFactory: BaseFactory<any>, settings: any = {}) => {\n    return (Component: any): RC<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> => {\n        class FieldComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> {\n            public render(): JSX.Element | null {\n                const { currentTheme, getOptions, uiSchema } = this.props,\n                    { field, widget, type } = uiSchema as any;\n                let FieldComponent, WidgetComponent;\n                let calcField = field || type as string;\n\n                if (currentTheme.fieldFactory.has(calcField)) {\n                    FieldComponent = currentTheme.fieldFactory.get(calcField);\n                } else {\n                    if (currentTheme.fieldFactory.has(\"default\")) {\n                        FieldComponent = currentTheme.fieldFactory.get(\"default\");\n                    } else {\n                        console.error(`找不到field：${field || type}`);\n                        return null;\n                    }\n                }\n\n                if (currentTheme.widgetFactory.has(widget || type as string)) {\n                    WidgetComponent = currentTheme.widgetFactory.get(widget || type as string);\n                } else {\n                    if (currentTheme.widgetFactory.has(\"default\")) {\n                        WidgetComponent = currentTheme.widgetFactory.get(\"default\");\n                    } else {\n                        console.warn(`找不到widget：${widget || type}`, uiSchema);\n                    }\n                }\n\n                return <Component {...this.props}\n                    FieldComponent={(FieldComponent)}\n                    WidgetComponent={WidgetComponent} />;\n            }\n        }\n\n        return FieldComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/field.tsx","\nimport React, { PureComponent } from \"react\";\nimport {\n    branch, shouldUpdate, compose,\n    withHandlers, renderNothing, onlyUpdateForKeys, ComponentEnhancer\n} from \"recompose\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\nimport { schemaFormReducer } from \"../reducer\";\nimport { JSONSchema6 } from \"json-schema\";\n\nexport interface ArrayHocOutProps {\n    addItem: (props: DefaultProps, data?: any) => Promise<void>;\n    removeItem: (parentKeys: any[], keys: any[], index: number) => void;\n    switchItem: (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => void;\n    moveItem: (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => void;\n    initArrayComponent: (props: DefaultProps, index?: number) => JSX.Element;\n    ArrayComponent?: new () => React.PureComponent<DefaultProps>;\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n}\n\nexport interface ArrayProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport default (hocFactory: BaseFactory<any>, settings: any = {}) => {\n\n    const hoc = compose(\n        withHandlers({\n            /**\n             * 更新一个数据\n             */\n            addItem: (propsCur: DefaultProps) => {\n                return async (props: DefaultProps, data?: any) => {\n                    let itemSchema: any = {},\n                        defaultValue: any = {},\n                        itemUiSchema: any = props.uiSchema ? props.uiSchema.items : {};\n\n                    try {\n                        // 先获取默认的数据\n                        await props.ajv.validate({\n                            type: \"object\",\n                            properties: {\n                                defaultData: itemUiSchema\n                            }\n                        }, defaultValue);\n                    } catch (e) {\n                        console.log(e);\n                    } finally {\n                        if (propsCur.uiSchema && propsCur.uiSchema.items) {\n                            switch ((propsCur.uiSchema.items as JSONSchema6).type) {\n                                case \"object\":\n                                    if (!defaultValue.defaultData) {\n                                        defaultValue.defaultData = data || {};\n                                    }\n                                    Object.assign(defaultValue.defaultData, data);\n                                    break;\n                                case \"array\":\n                                    if (!defaultValue.defaultData) {\n                                        defaultValue.defaultData = data || [];\n                                    }\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n\n                        schemaFormReducer.actions.addItem({\n                            parentKeys: props.parentKeys,\n                            keys: (props.uiSchema as any).keys,\n                            data: defaultValue.defaultData\n                        });\n                    }\n                };\n            },\n            /**\n             * 删除一个数组元素\n             */\n            removeItem: (propsCur: DefaultProps) => {\n                return (parentKeys: any[], keys: any[], index: number) => {\n                    schemaFormReducer.actions.removeItem({\n                        parentKeys: parentKeys,\n                        keys: keys,\n                        index: index\n                    });\n                };\n            },\n            /**\n             * 移动到某个元素后面\n             */\n            moveItem: (propsCur: DefaultProps) => {\n                return (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => {\n                    schemaFormReducer.actions.moveToItem({\n                        parentKeys: parentKeys,\n                        keys: keys,\n                        curIndex: curIndex,\n                        toIndex: toIndex\n                    });\n                };\n            },\n            /**\n             * 初始化array的操作组件\n             */\n            initArrayComponent: (propsCur: DefaultProps) => {\n                return (props: DefaultProps & ArrayHocOutProps, index?: number) => {\n                    const { ArrayComponent, ArrayItemComponent, ...extraProps } = props, uiSchema = props.uiSchema as FxUiSchema;\n\n                    if (uiSchema.type === \"array\") {\n                        return ArrayComponent ? <ArrayComponent {...extraProps} /> : null;\n                    }\n\n                    return ArrayItemComponent ? <ArrayItemComponent {...extraProps} /> : null;\n                };\n            }\n        })) as any;\n\n    /**\n     * 包装array的组件HOC\n     * @param hocFactory  hoc的工厂方法\n     * @param Component   需要包装的组件\n     * 加入属性\n     * arrayItems\n     */\n    let arrayHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n        @hoc\n        class ArrayComponentHoc extends PureComponent<ArrayProps, any> {\n            private ArrayComponent: new () => React.PureComponent;\n            private ArrayItemComponent: new () => React.PureComponent;\n\n            constructor(props: ArrayProps, context: any) {\n                super(props, context);\n                this.initArrayComponents();\n            }\n\n            private initArrayComponents() {\n                const { getOptions } = this.props;\n                const hocOptions: any = getOptions(this.props, \"hoc\", \"array\");\n\n                if (hocOptions.ArrayComponent) {\n                    this.ArrayComponent = hocOptions.ArrayComponent;\n                }\n\n                if (hocOptions.ArrayItemComponent) {\n                    this.ArrayItemComponent = hocOptions.ArrayItemComponent;\n                }\n\n            }\n\n            public render(): JSX.Element {\n                let props: any = {};\n\n                if (this.ArrayComponent) {\n                    props.ArrayComponent = this.ArrayComponent;\n                }\n\n                if (this.ArrayItemComponent) {\n                    props.ArrayItemComponent = this.ArrayItemComponent;\n                }\n\n                return <Component {...this.props} {...props} />;\n            }\n        }\n\n        return ArrayComponentHoc as any;\n    };\n\n    let pureHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n        @hoc\n        class ArrayPureComponentHoc extends React.PureComponent<ArrayProps, any> {\n            public render() {\n                return <Component {...this.props} />;\n            }\n        }\n\n        return ArrayPureComponentHoc as any;\n    };\n\n    return branch(\n        (props: ArrayProps) => {\n            const { uiSchema = { type: \"\" } } = props;\n\n            return uiSchema.type === \"array\";\n        },\n        arrayHoc,\n        pureHoc\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/array.tsx","import { createAction, createReducer, SimpleActionCreator } from \"redux-act\";\nimport { Reducer } from \"redux-act\";\nimport { List, Map, fromJS } from \"immutable\";\n\nimport { FxReducer, a } from \"./reducer\";\nimport { TreeMap } from \"../libs/tree\";\nimport { Store } from \"react-redux\";\n\nconst b = a;\n\nexport interface SchemaFormActions {\n    [index: string]: SimpleActionCreator<any, any>;\n    createForm: SimpleActionCreator<{ key: string, data: any }>;\n    updateItemData: SimpleActionCreator<{ parentKeys: string[], keys: string[], data: any, meta?: any }>;\n    updateItemMeta: SimpleActionCreator<{ parentKeys: string[], keys: string[], meta: any, noChange?: boolean; }>;\n    addItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], data: any }>;\n    removeItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], index: number }>;\n    moveToItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], curIndex: number, toIndex: number }>;\n    removeItemData: SimpleActionCreator<{ parentKeys: string[], keys: string[], meta?: boolean }>;\n}\n\nexport class SchemaFormReducer<T> implements FxReducer {\n\n    private createForm: SimpleActionCreator<{ key: string, data: any }>\n        = createAction<{ key: string, data: any }>(\"创建一个表单数据\");\n    private updateItemData: SimpleActionCreator<{ parentKeys: string[], keys: string[], data: any, meta?: any }>\n        = createAction<{ parentKeys: string[], keys: string[], data: any, meta?: any }>(\"更新一个表单数据\");\n    private updateItemMeta: SimpleActionCreator<{ parentKeys: string[], keys: string[], meta: any, noChange?: boolean; }>\n        = createAction<{ parentKeys: string[], keys: string[], meta: any }>(\"更新一个表单元数据\");\n    private addItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], data: any }>\n        = createAction<{ parentKeys: string[], keys: string[], data: any }>(\"添加一个数据\");\n    private removeItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], index: number }>\n        = createAction<{ parentKeys: string[], keys: string[], index: number }>(\"删除一个数据\");\n    private moveToItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], curIndex: number, toIndex: number }>\n        = createAction<{ parentKeys: string[], keys: string[], curIndex: number, toIndex: number }>(\"元素移位\");\n    private removeItemData: SimpleActionCreator<{ parentKeys: string[], keys: string[], meta?: boolean }>\n        = createAction<{ parentKeys: string[], keys: string[], meta?: boolean }>(\"删除一个字段的数据以及meta数据\");\n\n    /**\n     * 构造\n     * @param initialState 初始化状态\n     */\n    constructor(private initialState: any) { }\n    /**\n     * 获取当前的actions\n     */\n    public get actions(): SchemaFormActions {\n        return {\n            createForm: this.createForm,\n            updateItemData: this.updateItemData,\n            updateItemMeta: this.updateItemMeta,\n            addItem: this.addItem,\n            removeItem: this.removeItem,\n            moveToItem: this.moveToItem,\n            removeItemData: this.removeItemData\n        };\n    }\n\n    /**\n     * 初始化actions\n     * @param store Redux中的store实例\n     */\n    public init(store: Store<Map<string, any>>): void {\n        for (const key in this.actions) {\n            if (this.actions.hasOwnProperty(key)) {\n                const action = this.actions[key];\n\n                if (!action.assigned()) {\n                    action.assignTo(store);\n                }\n            }\n        }\n    }\n\n    /**\n     * 返回当前的reducer\n     */\n    public get reducer(): Reducer<any> {\n        return createReducer<any>({\n            [this.createForm as any]: this.createFormHandle.bind(this),\n            [this.updateItemData as any]: this.updateItemDataHandle.bind(this),\n            [this.updateItemMeta as any]: this.updateItemMetaHandle.bind(this),\n            [this.addItem as any]: this.addItemDataHandle.bind(this),\n            [this.removeItem as any]: this.removeItemHandle.bind(this),\n            [this.moveToItem as any]: this.moveItemHandle.bind(this),\n            [this.removeItemData as any]: this.removeItemDataMetaHandle.bind(this)\n        }, this.initialState);\n    }\n\n    /**\n     * 删除一个字段的数据以及meta数据\n     * @param state   当前的state\n     * @param param1  参数\n     *  parentKeys  父亲的keys\n     *  keys        当前元素的keys\n     *  meta        是否要删除meta数据\n     */\n    private removeItemDataMetaHandle(state: Map<string, any>, { parentKeys, keys, meta }: any) {\n        let dataKeys = parentKeys.concat([\"data\", ...keys]);\n        let metaKeys: string[] = parentKeys.concat([\"meta\"]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n\n        state = this.resolveKeys(state, dataKeys);\n\n        if (state.hasIn(dataKeys)) {\n            state = state.removeIn(dataKeys);\n        }\n\n        if (childNode && meta) {\n            childNode.removeFromParent();\n        }\n\n        return state;\n    }\n\n    /**\n     * 解析一个路径上的数据，判断数据格式，做处理\n     * @param state 当前的state\n     * @param keys  数据路径\n     */\n    private resolveKeys(state: Map<string, any>, keys: Array<string>) {\n        if (state.hasIn(keys)) {\n            return state;\n        }\n\n        for (let i = 0, n = keys.length; i < n; i++) {\n            let mKeys = [...keys].splice(0, i + 1);\n\n            // 如果key不存在，遍历生成数据结构\n            if (!state.hasIn(mKeys)) {\n                mKeys.pop();\n                if (!state.hasIn(mKeys)) {\n                    if (keys[i].constructor === Number) {\n                        state = state.setIn(mKeys, List());\n                    } else {\n                        state = state.setIn(mKeys, Map());\n                    }\n                }\n            } else if (i < n) {\n                // 如果key存在，则判断数据结构是否与结构一致\n                let data = state.getIn(mKeys);\n\n                if (!Map.isMap(data) && !List.isList(data)) {\n                    if (keys[i + 1].constructor === Number) {\n                        state = state.setIn(mKeys, List());\n                    } else {\n                        state = state.setIn(mKeys, Map());\n                    }\n                }\n            }\n        }\n\n        return state;\n    }\n\n    /**\n     * 创建一份表单数据\n     * @param state   当前的state\n     * @param param1  参数值，key 和 data\n     */\n    private createFormHandle(state: Map<string, any>, { key, data }: any): Map<string, any> {\n        if (state.has(key)) {\n            state = state.remove(key);\n        }\n\n        const meta = new TreeMap(key, fromJS({}));\n        const stateData = Map<string, any>({\n            meta: meta,\n            data: fromJS(data)\n        });\n\n        return state.set(key, stateData);\n    }\n    /**\n     * 修改一个数据\n     * 合并parrentKeys和keys，中间加入一个“data”\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemDataHandle(state: Map<string, any>, { parentKeys, keys, data, meta }: any): Map<string, any> {\n        let dataKeys = parentKeys.concat([\"data\", ...keys]);\n\n        state = this.resolveKeys(state, dataKeys);\n        state = state.setIn(dataKeys, fromJS(data));\n\n        if (meta) {\n            state = this.updateItemMetaHandle(state, { parentKeys, keys, meta });\n        }\n\n        return state;\n    }\n\n    /**\n     * 添加一个数组到List\n     * 1. 添加数组\n     * 2. 修改meta中的collapsing字段为false，使得折叠的状态改变成不折叠的状态\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private addItemDataHandle(state: Map<string, any>, { parentKeys, keys, data }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([\"data\", ...keys]),\n            metaKeys: string[] = parentKeys.concat([\"meta\"]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys);\n        let formItemData: List<any>;\n\n        state = this.resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys) || List();\n        formItemData = formItemData.push(fromJS(data));\n\n        if (childNode && childNode.value) {\n            childNode.value = childNode.value.merge({\n                collapsing: false\n            });\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 删除数组中的一个元素\n     * 1. 删除元素数组中的数据\n     * 2. 删除meta信息中的数据\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private removeItemHandle(state: Map<string, any>, { parentKeys, keys, index }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([\"data\", ...keys]),\n            metaKeys: string[] = parentKeys.concat([\"meta\"]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.addChild(keys.concat([index]));\n        let formItemData: List<any>;\n\n        state = this.resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys);\n\n        if (!formItemData || !List.isList(formItemData)) {\n            return state;\n        }\n\n        if (childNode) {\n            childNode.removeFromParent();\n        }\n\n        return state.setIn(dataKeys, formItemData.remove(index));\n    }\n\n    /**\n     * 交换2个数组的位置\n     * 1. 交换数组数据\n     * 2. 交换meta中的位置信息\n     * @param state   当前的state\n     * @param param1  参数\n     *   parentKeys    父亲的keys\n     *   keys          当前item的keys\n     *   curIndex      当前item的索引\n     *   toIndex       需要交换的item索引\n     */\n    private moveItemHandle(state: Map<string, any>, { parentKeys, keys, curIndex, toIndex }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([\"data\", ...keys]),\n            metaKeys: string[] = parentKeys.concat([\"meta\"]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            offset = (toIndex > curIndex && false ? 1 : 0);\n        let oldFormItemData: List<any> = state.getIn(dataKeys),\n            formItemData: List<any> = state.getIn(dataKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys.concat([curIndex])),\n            childNodeTo: TreeMap | null = rootNode.containPath(keys.concat([toIndex]));\n\n        state = this.resolveKeys(state, dataKeys);\n\n        if (!formItemData || toIndex < 0) {\n            return state;\n        }\n\n        let curItemData = formItemData.get(curIndex);\n\n        formItemData = formItemData.remove(curIndex);\n        formItemData = formItemData.insert(toIndex - offset, curItemData);\n\n        // if (formItemData.equals(oldFormItemData)) {\n        //     return state;\n        // }\n\n        if (childNode) {\n            childNode.insertToFromParent(toIndex);\n        } else {\n            if (childNodeTo) {\n                childNodeTo.insertToFromParent(curIndex);\n            }\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 修改一个数据的元数据\n     * 通过parentKeys取得根节点\n     * 通过keys合成元素的节点路径，从根节点获取数据\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemMetaHandle(state: Map<string, any>, { parentKeys, keys, meta, noChange }: any): Map<string, any> {\n        let metaKeys: string[] = parentKeys.concat([\"meta\"]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.addChild(keys);\n        let value = childNode ? childNode.value : null;\n\n        if (childNode) {\n            if (value) {\n                childNode.value = childNode.value.merge(meta);\n            } else {\n                childNode.value = fromJS(meta);\n            }\n        }\n\n        if (noChange) {\n            return state;\n        }\n\n        // if (is(childNode.value, value)) {\n        //     return state;\n        // }\n        let newRoot = new TreeMap(rootNode.getKey(), rootNode.value);\n\n        newRoot.children = rootNode.children;\n\n        return state.setIn(metaKeys, newRoot);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/schema.form.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_20__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}\n// module id = 20\n// module chunks = 0","import { Reducer } from \"redux-act\";\nimport { Store } from \"react-redux\";\n\nexport interface FxReducer {\n    actions: any;\n    reducer: Reducer<any>;\n    init(store: Store<any>): void;\n}\n\nexport const a = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/reducer.tsx","\nimport React, { PureComponent } from \"react\";\nimport { withHandlers, compose } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { MakeHocOutProps } from \"./make\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\nimport { schemaFormReducer } from \"../reducer\";\n\nexport interface ValidateHocOutProps {\n    updateItemData: (props: DefaultProps, data: any, meta?: any) => void;\n    updateItemMeta: (props: DefaultProps, data: any, meta?: any, noChange?: boolean) => void;\n    validate: (props: DefaultProps, data: any, meta?: any) => Promise<any>;\n}\n\nexport default (hocFactory: BaseFactory<any>, settings: any = {}) => {\n    /**\n     * 包装validate的组件HOC\n     * @param hocFactory  hoc的工厂方法\n     * @param Component   需要包装的组件\n     * 加入属性\n     */\n    return (Component: any): RC<DefaultProps, any> => {\n        @(compose(\n            withHandlers({\n                /**\n                 * 验证单个数据\n                 * 使用当前组件中的uiSchema，以及传递过来的数据做验证\n                 * 这里可能有远程验证\n                 */\n                validate: (propsCur: DefaultProps) => {\n                    return async (props: DefaultProps & UtilsHocOutProps, data: any) => {\n                        const result: any = { dirty: true, isValid: false, isLoading: false };\n                        const timeId = setTimeout(() => {\n                            schemaFormReducer.actions.updateItemMeta({\n                                parentKeys: props.parentKeys,\n                                keys: (props.uiSchema as any).keys,\n                                meta: { isLoading: true, isValid: false, errorText: false }\n                            });\n                        }, 200);\n\n                        // 这里做一层try catch处理\n                        try {\n                            let validateResult;\n\n                            if (props.uiSchema.$id) {\n                                validateResult = await props.ajv.getSchema(props.uiSchema.$id)(data);\n                            } else {\n                                validateResult = await props.ajv.validate(props.uiSchema, data);\n                            }\n\n                            result.isValid = validateResult;\n\n                            // 如果验证出错，则抛出错误\n                            if (!validateResult) {\n                                let error: any = new Error();\n\n                                error.errors = props.ajv.errors;\n\n                                throw error;\n                            }\n                        } catch (err) {\n                            // 处理错误消息\n                            result.errorText = err.errors ?\n                                props.ajv.errorsText(err.errors, {\n                                    dataVar: props.getTitle(props).toString()\n                                }) : err.message;\n                        }\n                        finally {\n                            clearTimeout(timeId);\n                        }\n\n                        return result;\n                    };\n                }\n            }),\n            withHandlers({\n                /**\n                 * 更新一个数据\n                 */\n                updateItemData: (propsCur: DefaultProps) => {\n                    return (props: DefaultProps, data: any, meta?: any) => {\n                        schemaFormReducer.actions.updateItemData({\n                            parentKeys: props.parentKeys,\n                            keys: (props.uiSchema as any).keys,\n                            data: data,\n                            meta\n                        });\n                    };\n                },\n                /**\n                 * 更新一个元数据\n                 */\n                updateItemMeta: (propsCur: ValidateHocOutProps) => {\n                    return async (props: DefaultProps, data: any, meta: any = null, noChange = false) => {\n                        schemaFormReducer.actions.updateItemMeta({\n                            parentKeys: props.parentKeys,\n                            keys: (props.uiSchema as any).keys,\n                            meta: meta || await propsCur.validate(props, data),\n                            noChange: noChange\n                        });\n                    };\n                }\n            })) as any)\n        class ArrayComponentHoc extends PureComponent<DefaultProps, any> {\n            public render(): JSX.Element {\n                return <Component {...this.props} />;\n            }\n        }\n\n        return ArrayComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/validate.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, shouldUpdate, ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport Immutable from \"immutable\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\n\nexport interface MakeHocOutProps extends UtilsHocOutProps {\n\n}\n\n/**\n * make的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n *  1. HOC默认顺序：ThemeHoc -> FieldHoc -> ValidateHoc -> ArrayHoc -> TempHoc\n */\nexport default (hocFactory: BaseFactory<any>, settings: any = {}) => {\n    return (Component: any): RC<DefaultProps & MakeHocOutProps, any> => {\n        // @(shouldUpdate(() => false) as any)\n        class MakeComponentHoc extends PureComponent<DefaultProps & MakeHocOutProps, any> {\n            public render(): JSX.Element {\n                const { uiSchema, getOptions } = this.props;\n                const { type, field } = uiSchema as FxUiSchema;\n                const fieldOptions = getOptions(this.props, \"field\", field || type as string,\n                    Immutable.fromJS(uiSchema.hocs ? { hocs: uiSchema.hocs } : {}),\n                    Immutable.fromJS(settings || {}));\n                const hocs: Array<string | ComponentEnhancer<any, any>> = fieldOptions.hocs\n                    || [\"theme\", \"field\", \"validate\", \"array\", \"temp\"];\n\n                hocs.unshift(\"utils\");\n\n                let ComponentWithHocs: any = compose<DefaultProps & MakeHocOutProps, any>\n                    (...([...hocs].map(hoc => {\n                        if (typeof hoc !== \"string\") {\n                            return hoc;\n                        }\n                        return hocFactory.get(hoc)();\n                    })))(Component);\n\n                return <ComponentWithHocs {...this.props} />;\n            }\n        }\n\n        return MakeComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/make.tsx","import React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { shallowEqual, compose, shouldUpdate, onlyUpdateForKeys, lifecycle, pure } from \"recompose\";\nimport { connect } from \"react-redux\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\nimport { ThemeHocOutProps } from \"./theme\";\nimport { MakeHocOutProps } from \"./make\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { ArrayHocOutProps } from \"./array\";\n\n/**\n * 包装Template的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\n\nexport default (hocFactory: BaseFactory<any>, settings: any = {\n    tempField: \"temps\",\n    templates: []\n}) => {\n    return (Component: any): RC<DefaultProps & ThemeHocOutProps, any> => {\n        /**\n        * 获取模板的components\n        * @param uiSchema 合并后的数据\n        */\n        class TempComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps & ArrayHocOutProps, any> {\n            public render(): JSX.Element {\n                const { uiSchema, getOptions } = this.props;\n                const { options: uiSchemaOptions, keys } = uiSchema as FxUiSchema;\n                const TempComponents = this.getTemplates();\n\n                return TempComponents.reduce((prev: JSX.Element, { key, Temp }) => {\n                    const tempOptions = getOptions(this.props, \"temp\", key),\n                        TempWithHoc: any = compose(...(tempOptions.tempHocs || []))(Temp);\n\n                    return <TempWithHoc\n                        tempKey={key}\n                        ajv={this.props.ajv}\n                        uiSchema={this.props.uiSchema}\n                        schemaId={this.props.schemaId}\n                        arrayLevel={this.props.arrayLevel}\n                        arrayIndex={this.props.arrayIndex}\n                        globalOptions={this.props.globalOptions}\n                        ArrayComponent={this.props.ArrayComponent}\n                        ArrayItemComponent={this.props.ArrayItemComponent}\n                        initArrayComponent={this.props.initArrayComponent}\n                        parentKeys={this.props.parentKeys}\n                        getTitle={this.props.getTitle}\n                        getOptions={this.props.getOptions}\n                        getPathKeys={this.props.getPathKeys}\n                        children={prev} />;\n                }, <Component {...this.props} />);\n            }\n\n            /**\n            * 获取模板的components\n            */\n            private getTemplates(): Array<{ key: string, Temp: RC<any, any> }> {\n                const { uiSchema, currentTheme, getOptions } = this.props,\n                    { keys, type } = uiSchema as FxUiSchema,\n                    typeDefaultOptions = getOptions(this.props, \"field\", type as string),\n                    TempComponent: Array<{ key: string, Temp: RC<any, any> }> = [];\n                let template: Array<any>;\n\n                if (settings.templates && settings.templates.length > 0) {\n                    template = settings.templates;\n                } else {\n                    template = typeDefaultOptions[settings.tempField] || \"default\";\n                }\n\n                const getTemplate = (tmp: any): void => {\n                    switch (tmp.constructor) {\n                        case String:\n                            if (!currentTheme.tempFactory.has(tmp)) {\n                                console.error(`不存在${tmp}的temp！`);\n                            } else {\n                                TempComponent.push({\n                                    key: tmp,\n                                    Temp: currentTheme.tempFactory.get(tmp)\n                                });\n                            }\n                            break;\n                        case Object:\n                            TempComponent.push({\n                                key: tmp.name,\n                                Temp: tmp\n                            });\n                            break;\n                        case Array:\n                            [...template].reverse().forEach((tml, idx) => {\n                                getTemplate(tml);\n                            });\n                            break;\n                    }\n                };\n\n                getTemplate(template);\n\n                return TempComponent;\n            }\n        }\n\n        return TempComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/temp.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, shouldUpdate } from \"recompose\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { createSelector, createSelectorCreator, defaultMemoize } from \"reselect\";\nimport Immutable, { is } from \"immutable\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { TreeMap } from \"../libs/tree\";\n\nexport interface DataHocOutProps extends DefaultProps {\n\n}\n\nexport interface DataHocSettings {\n    data?: boolean;\n    dataLength?: boolean;\n    meta?: boolean;\n    metaKeys?: string[];\n    treeNode?: boolean;\n}\n\n// 自定义选择器创建函数\nconst fxSelectorCreator = createSelectorCreator(defaultMemoize, is);\n\n/**\n * 与reduce相关的数据操作\n * 获取formItemData数据\n * 获取formItemMeta数据\n */\nexport default (hocFactory: BaseFactory<RC<DefaultProps, {}>>, settings: DataHocSettings = {\n    data: true\n}) => {\n\n    const getItemDataHoc = (parentKeys: string[], rootReducerKey: string[], keys: Array<string | number>) => {\n        /**\n         * 获取FormItemData的数据\n         * @param state 当前的state树\n         */\n        let getFormItemData = (state: Immutable.Map<string, any>) => {\n            let dataKeys = [...rootReducerKey, ...parentKeys, \"data\", ...keys];\n\n            if (settings.data && state.hasIn(dataKeys)) {\n                let formItemData = state.getIn(dataKeys);\n\n                if (formItemData !== undefined) {\n                    if (!settings.dataLength) {\n                        return formItemData;\n                    } else {\n                        return formItemData.size;\n                    }\n                }\n            }\n        };\n\n        /**\n        * 获取FormItemMeta的数据\n        * @param state 当前的state树\n        */\n        let getFormItemMeta = (state: Immutable.Map<string, any>) => {\n            let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n\n            if (settings.meta && state.hasIn(metaKeys)) {\n                let rootNode = state.getIn(metaKeys),\n                    childNode = rootNode.containPath([...keys]);\n\n                if (childNode && childNode.value) {\n                    if (settings.metaKeys) {\n                        return childNode.value.filter((val: any, key: string) => {\n                            return settings.metaKeys.indexOf(key) >= 0;\n                        });\n                    }\n                    return childNode.value;\n                }\n            }\n        };\n\n        /**\n        * 获取FormItemMeta的根数据\n        * @param state 当前的state树\n        */\n        let getRoot = (state: Immutable.Map<string, any>) => {\n            if (!settings.treeNode) {\n                return null;\n            }\n\n            let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n            let rootNode: TreeMap = state.getIn(metaKeys);\n            let childNode = rootNode.containPath([...keys]);\n\n            if (childNode) {\n                return childNode;\n            }\n\n            return rootNode.addChild([...keys]);\n        };\n\n        return fxSelectorCreator(\n            [getFormItemData, getFormItemMeta, getRoot],\n            (formItemData: any, formItemMeta: any, formItemNode: TreeMap) => {\n                const rtn: { formItemData?: any, formItemMeta?: any, formItemNode?: TreeMap } = {};\n\n                if (formItemData !== undefined && formItemData !== null) {\n                    rtn.formItemData = formItemData;\n                }\n                if (formItemMeta !== undefined && formItemData !== null) {\n                    rtn.formItemMeta = formItemMeta;\n                }\n                if (formItemNode !== undefined && formItemData !== null) {\n                    rtn.formItemNode = formItemNode;\n                }\n\n                return rtn;\n            }\n        );\n    };\n\n    /**\n     * 用于获取数据的hoc\n     * @param hocFactory  hoc的工厂方法\n     * @param Component   需要包装的组件\n     * 加入属性\n     * arrayItems\n     */\n    return (Component: any): RC<DefaultProps, any> => {\n        @(shouldUpdate(() => false) as any)\n        class DataComponentHoc extends PureComponent<DefaultProps & UtilsHocOutProps, any> {\n            // private ComponentWithHoc;\n\n            public render(): JSX.Element {\n                const { uiSchema, getOptions } = this.props,\n                    { keys = [] } = this.props.uiSchema || {},\n                    options = getOptions(this.props, \"hoc\", \"data\");\n\n\n                if (!options.rootReducerKey || options.rootReducerKey.constructor !== Array) {\n                    console.error(\"dataHoc missing property rootReducerKey.should be a Array.\");\n                }\n\n                const hoc = connect(getItemDataHoc(this.props.parentKeys, options.rootReducerKey, keys)),\n                    ComponentWithHoc: any = hoc(Component);\n\n                return <ComponentWithHoc {...this.props} />;\n            }\n        }\n\n        return DataComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/data.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_26__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}\n// module id = 26\n// module chunks = 0","export { SchemaForm } from \"./form\";\nexport { DefaultProps } from \"./default.props\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/index.tsx","import React, { PureComponent } from \"react\";\nimport PropTypes, { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../index\";\nimport { hoc } from \"./container\";\nimport { MergeHocOutProps } from \"../../hocs/merge\";\nimport { SchemaFormItem } from \"../formitem/index\";\nimport { FxUiSchema } from \"../../models/index\";\n\nexport interface Props extends DefaultProps, MergeHocOutProps {\n    RootComponent?: any;\n    uiSchemas?: Array<string | FxUiSchema>;\n}\n\n@(hoc as any)\nexport class SchemaForm extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { schemaId, mergeSchemaList, arrayLevel, RootComponent, children, ...extraProps } = this.props;\n        const formItemList = mergeSchemaList ? mergeSchemaList.map((uiScehma: FxUiSchema, idx: number) => {\n            let arrayLevelCopy = arrayLevel ? arrayLevel.concat([]) : [];\n\n            return <SchemaFormItem\n                key={idx}\n                {...extraProps}\n                schemaId={schemaId}\n                uiSchema={uiScehma}\n                arrayLevel={arrayLevelCopy}\n            />;\n        }) : [];\n\n        if (RootComponent) {\n            return <RootComponent >\n                {formItemList}\n                {children}\n            </RootComponent>;\n        }\n\n        return (\n            <div>\n                {formItemList}\n                {children}\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/component.tsx","import { compose, ComponentEnhancer, shouldUpdate } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    shouldUpdate(() => false),\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"merge\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/container.tsx","import { SchemaFormItem } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaFormItem.propTypes = Object.assign({}, DefaultPropsTypeCheck);\n\nexport { SchemaFormItem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/index.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"redux\";\nimport { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../default.props\";\nimport { hoc } from \"./container\";\nimport { FieldHocOutProps } from \"../../hocs/field\";\nimport { UtilsHocOutProps } from \"../../hocs/utils\";\n\nexport interface Props extends DefaultProps {\n\n}\n\n@(hoc as any)\nexport class SchemaFormItem extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { FieldComponent, uiSchema, ...extraProps } = this.props as Props & FieldHocOutProps & UtilsHocOutProps;\n        const options = extraProps.getOptions(this.props, \"field\", (uiSchema as any).field || (uiSchema as any).type);\n        let FieldComponentWithHoc: any = FieldComponent;\n\n        if (!FieldComponent) {\n            console.log(uiSchema, \"没有找到匹配的field\");\n            return null;\n        }\n\n        if (options.fieldHocs && options.fieldHocs.length) {\n            FieldComponentWithHoc = compose(\n                ...(options.fieldHocs || [])\n            )(FieldComponent);\n        }\n\n        return <FieldComponentWithHoc key={(uiSchema as any).keys.join(\"formItem\")} uiSchema={uiSchema} {...extraProps} />;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/component.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_32__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}\n// module id = 32\n// module chunks = 0","import { compose, ComponentEnhancer } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"make\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/container.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_34__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}\n// module id = 34\n// module chunks = 0","import React from \"react\";\nimport { Map } from \"immutable\";\nimport { BaseFactory, UiSchema } from \"fx-schema-form-core\";\n\nexport interface SchemaFormNs<F, T, W> {\n    fieldFactory: BaseFactory<F>;\n    tempFactory: BaseFactory<T>;\n    widgetFactory: BaseFactory<W>;\n}\n\nexport type RC<P, T> = new () => React.PureComponent<P, T>;\nexport interface FxUiSchema extends UiSchema {\n    // 定义参数，与全局的配置参数格式一致；会覆盖全局的配置参数，用于单个FormSchemaItem的配置。\n    options?: Map<string, any>;\n    // \b一般用于object和array的对象；用于渲染下级显示的key。\n    children?: Array<UiSchema | string>;\n    // 主题样式配置（default: default）\n    theme?: string;\n    // 定义字段。默认使用JsonSchema的type来确定field，也可以使用这个来指定字段。\n    field?: string;\n    // 定义显示组件。每种数据类型都可以使用不同的组件来渲染。\n    widget?: string;\n    // 定义包裹的模板数组\n    temps?: string[];\n    // 是否是required，自动添加\n    isRequired?: boolean;\n    // $ref的keys，自动添加\n    refKeys?: string[];\n    // keys的原始形式，不会对-做数字化处理（只有数组类型的originKeys和keys是不同的）\n    originKeys?: string[];\n    // 是否只读\n    readonly?: boolean;\n    // 用于包裹整个ShemaFormItem的hoc数组\n    hocs?: any[];\n}\nexport type NsFactory = SchemaFormNs<RC<any, any>, RC<any, any>, RC<any, any>>;\n\nexport const models = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.tsx","export { NormalField } from \"./normal\";\nexport { ObjectField } from \"./object\";\nexport { ArrayField } from \"./array\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/index.tsx","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose, shouldUpdate } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema } from \"../models/index\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { FieldHocOutProps } from \"../hocs/field\";\n\nexport interface NormalFieldProps extends DefaultProps, UtilsHocOutProps, FieldHocOutProps {\n\n}\n\n/**\n * 普通数据字段类型\n * 这里直接渲染[fieldHoc]中结算得出的WidgetComponent\n */\nexport class NormalField extends PureComponent<NormalFieldProps> {\n\n    constructor(props: NormalFieldProps, context: any) {\n        super(props, context);\n    }\n\n    public render(): JSX.Element | null {\n        const { WidgetComponent, FieldComponent, formItemMeta, formItemData, ...extraProps } = this.props;\n        const fieldOptions = extraProps.getOptions(this.props, \"field\", \"normal\");\n        const { keys } = extraProps.uiSchema as FxUiSchema;\n        let WidgetComponentWithHoc = WidgetComponent;\n\n        if (!WidgetComponent || !keys) {\n            return null;\n        }\n\n        if (fieldOptions.widgetHocs && fieldOptions.widgetHocs.length) {\n            WidgetComponentWithHoc = (compose(\n                ...fieldOptions.widgetHocs\n            ) as any)(WidgetComponent);\n        }\n\n        return (\n            <WidgetComponentWithHoc key={keys.join(\".\")} {...extraProps} />\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/normal.tsx","import React, { PureComponent } from \"react\";\n\nimport { SchemaForm } from \"../components/form\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema } from \"../models/index\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { compose } from \"recompose\";\n\nexport interface ObjectFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\n/**\n * Object类型的字段解析\n * 嵌套一层SchemaForm\n */\nexport class ObjectField extends PureComponent<ObjectFieldProps, any> {\n    public render(): JSX.Element | null {\n        const uiSchema = this.props.uiSchema as FxUiSchema,\n            { arrayIndex, arrayLevel, parentKeys, globalOptions, ajv, schemaId, getOptions } = this.props,\n            options = getOptions(this.props, \"field\", \"object\");\n        let SchemaFormWithHoc: any = SchemaForm;\n\n        // 如果children设置成null，则返回空\n        if (uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // 如果需要对schemaform对hoc包装\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(SchemaForm);\n        }\n\n        return (\n            <SchemaFormWithHoc\n                arrayIndex={arrayIndex}\n                arrayLevel={arrayLevel}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"*\"]}\n                uiSchema={uiSchema}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/object.tsx","import React, { PureComponent } from \"react\";\nimport { shouldUpdate, compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema } from \"../models/index\";\n\nimport { SchemaForm } from \"../components/form\";\nimport { hocFactory } from \"../factory\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\n\nexport interface ArrayFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nlet arrayFieldStyle = {\n    width: \"100%\",\n    height: \"100%\"\n};\n\nclass ArrayFieldComponent extends React.PureComponent {\n    public render() {\n        return <div style={arrayFieldStyle}>{this.props.children}</div>;\n    }\n}\n\n\n/**\n * 数组结构的字段解析\n * 这里需要数组元素的个数来做循环\n * 循环生成元素个数的SchemaForm\n */\nexport class ArrayField extends PureComponent<ArrayFieldProps, any> {\n    private SchemaFormWithHoc: new () => React.PureComponent = ArrayFieldComponent;\n    private SchemaFormItemWithHoc: new () => React.PureComponent;\n\n    constructor(props: ArrayFieldProps) {\n        super(props);\n\n        this.initComponent();\n    }\n\n    /**\n     * 初始化Component\n     */\n    private initComponent() {\n        const { uiSchema, formItemData, getOptions } = this.props,\n            options = getOptions(this.props, \"field\", \"array\");\n        let SchemaFormWithHoc = null, SchemaFormItemWithHoc = null;\n\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(ArrayFieldComponent);\n        }\n\n        if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n            SchemaFormItemWithHoc = compose(...options.formItemHocs)(SchemaForm);\n        }\n\n        this.SchemaFormWithHoc = SchemaFormWithHoc;\n        this.SchemaFormItemWithHoc = SchemaFormItemWithHoc;\n    }\n\n    /**\n     * 遍历数据，生成子表单\n     * @param idx 数组的索引\n     */\n    private renderItem(idx: number): JSX.Element | null {\n        const { parentKeys, globalOptions, getOptions, arrayLevel = [], getRequiredKeys, ajv, ArrayItemComponent } = this.props,\n            uiSchema = this.props.uiSchema as FxUiSchema;\n        // options = getOptions(this.props, \"field\", \"array\");\n        let SchemaFormWithHoc: any = this.SchemaFormItemWithHoc || SchemaForm;\n        // const extraProps = getRequiredKeys(this.props, options);\n\n        // 如果不需要children，则跳出\n        if (uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // // 如果需要对schemaform对hoc包装\n        // if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formItemHocs)(SchemaForm);\n        // }\n\n        return (\n            <SchemaFormWithHoc\n                key={idx}\n                index={idx}\n                arrayIndex={idx}\n                uiSchema={uiSchema}\n                ArrayItemComponent={ArrayItemComponent}\n                arrayLevel={arrayLevel.concat([idx])}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"-\"]}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n    /**\n     * 渲染页面\n     */\n    public render(): JSX.Element | null {\n        const { uiSchema, formItemData, getOptions, getRequiredKeys } = this.props, child = [],\n            options = getOptions(this.props, \"field\", \"array\");\n        let SchemaFormWithHoc = this.SchemaFormWithHoc;\n        const extraProps = getRequiredKeys(this.props, options.fieldIncludeKeys, options.fieldExcludeKeys);\n\n        for (let i = 0; i < +formItemData; i++) {\n            child.push(this.renderItem(i));\n        }\n\n        // 如果需要对schemaform对hoc包装\n        // if (options.formHocs && options.formHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formHocs)(({ children }) => {\n        //         return <div style={arrayFieldStyle}>{children}</div>;\n        //     });\n\n        //     return <SchemaFormWithHoc {...this.props} children={child} />;\n        // }\n\n        return <SchemaFormWithHoc children={child} {...extraProps} />;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/array.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport Immutable from \"immutable\";\nimport ajv, { Ajv, ErrorObject, ValidationError } from \"ajv\";\nimport { schemaFieldFactory, schemaKeysFactory } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\nimport { hocFactory, reducerFactory } from \"../factory\";\nimport { TreeMap } from \"./tree\";\nimport { SchemaFormActions } from \"../reducers/schema.form\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\n\nexport interface SchemaFormHocSettings {\n    rootReducerKey: string[];\n    parentKeys: string[];\n}\n\nexport interface SchemaFormProps extends DefaultProps, UtilsHocOutProps {\n    root?: TreeMap;\n    data?: any;\n    errors?: any;\n    isValid?: boolean;\n    isValidating?: boolean;\n\n    formKey: string;\n    initData?: any;\n}\n\nexport interface SchemaFormHocOutProps extends SchemaFormProps {\n    validateAll?: () => Promise<any>;\n}\n\nconst actions: SchemaFormActions = reducerFactory.get(\"schemaForm\").actions;\n\n/**\n * 提供验证等功能\n * @param Component 需要包装的组件\n * 加入属性FieldComponent   schema对应的fieldcomponent\n * 加入属性WidgetComponent  schema对应的widgetcomponent\n */\nexport default (settings: SchemaFormHocSettings = { rootReducerKey: [], parentKeys: [] }) => {\n    return (Component: any): RC<SchemaFormProps, any> => {\n        @(compose(\n            hocFactory.get(\"utils\")(),\n            connect((state: Immutable.Map<string, any>) => {\n                let rootKeys = settings.rootReducerKey.concat(settings.parentKeys),\n                    dataKeys = rootKeys.concat([\"data\"]),\n                    metaKeys = rootKeys.concat([\"meta\"]),\n                    root = state.getIn(metaKeys);\n\n                return {\n                    data: state.getIn(dataKeys),\n                    root: root,\n                    isValid: root ? root.value.get(\"isValid\") : true,\n                    errors: root ? root.value.get(\"errors\") : null,\n                    isValidating: root ? root.value.get(\"isLoading\") : false\n                };\n            })) as any)\n        class SchemaFormComponentHoc extends PureComponent<SchemaFormProps, any> {\n            private _validateAll: (async?: boolean) => Promise<void>;\n\n            constructor(props: SchemaFormProps) {\n                super(props);\n\n                if (props.formKey) {\n                    actions.createForm({\n                        key: props.formKey,\n                        data: props.initData || {}\n                    });\n                }\n\n                this._validateAll = this.validateAll.bind(this);\n            }\n\n            private async validateAll(async?: boolean) {\n                let root = this.props.root as TreeMap,\n                    validate = this.props.ajv.getSchema(this.props.schemaId),\n                    $validateBeforeData = Immutable.fromJS({\n                        dirty: true,\n                        isValid: true,\n                        isLoading: true\n                    }),\n                    $validateAfterData = Immutable.fromJS({ isLoading: false, dirty: true }),\n                    normalizeDataPath = this.props.normalizeDataPath;\n\n                if (!root) {\n                    return;\n                }\n\n                if (!validate) {\n                    throw new Error(`没有找到对应的${this.props.schemaId};`);\n                }\n\n                try {\n                    root.forEach((node: TreeMap) => {\n                        if (node.value) {\n                            return node.value.merge($validateBeforeData);\n                        }\n\n                        return $validateBeforeData;\n                    }, true);\n                    actions.updateItemMeta({\n                        parentKeys: settings.parentKeys,\n                        keys: [],\n                        meta: root.value\n                    });\n\n                    // (validate as any).$async = !!async;\n\n                    let valRes = await validate(this.props.data.toJS());\n\n                    if (!valRes) {\n                        throw new (ValidationError as any)(validate.errors);\n                    }\n\n                    root.value = root.value.merge({\n                        isValid: true\n                    });\n\n                    actions.updateItemMeta({\n                        parentKeys: settings.parentKeys,\n                        keys: [],\n                        meta: root.value\n                    });\n\n                } catch (e) {\n                    if (!(e instanceof (ValidationError as any))) {\n                        return console.error(e);\n                    }\n                    if (!root) {\n                        return;\n                    }\n                    e.errors.forEach((element: ErrorObject) => {\n                        let dataKeys = root.getCurrentKeys().concat(normalizeDataPath(this.props.schemaId, element.dataPath));\n                        let childNode = root.addChild(dataKeys, Immutable.fromJS({}));\n\n                        if (childNode) {\n                            childNode.value = childNode.value.merge($validateAfterData).merge({\n                                isValid: false,\n                                errorText: dataKeys.pop() + \" \" + element.message\n                            });\n                        }\n                    });\n\n                    root.value = root.value.merge({\n                        isValid: false,\n                        errors: e.errors\n                    });\n                } finally {\n                    root.forEach((node: TreeMap) => {\n                        if (node.value) {\n                            return node.value.merge($validateAfterData);\n                        }\n\n                        return node.value;\n                    }, true);\n\n                    actions.updateItemMeta({\n                        parentKeys: settings.parentKeys,\n                        keys: [],\n                        meta: root.value\n                    });\n                }\n            }\n\n            public render(): JSX.Element | null {\n                const { errors, isValid = false, isValidating = false, getRequiredKeys, getOptions } = this.props;\n                const options = getOptions(this.props, \"hoc\", \"schemaFormDec\");\n                const extraProps = getRequiredKeys(this.props, options.hocIncludeKeys, options.hocExcludeKeys);\n\n                return (\n                    <Component\n                        validateAll={this._validateAll}\n                        parentKeys={settings.parentKeys}\n                        {...extraProps} />\n                );\n            }\n        }\n\n        return SchemaFormComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/dec.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_41__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}\n// module id = 41\n// module chunks = 0"],"sourceRoot":""}