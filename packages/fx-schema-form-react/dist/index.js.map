{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 95e1aa225660e16b4097","webpack:///external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}","webpack:///external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./src/models/index.tsx","webpack:///./src/factory.tsx","webpack:///external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}","webpack:///external {\"root\":\"SFC\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}","webpack:///./node_modules/babel-runtime/regenerator/index.js","webpack:///./src/components/form/index.tsx","webpack:///external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}","webpack:///./src/libs/tree.tsx","webpack:///./src/components/default.props.tsx","webpack:///./src/index.tsx","webpack:///./src/hocs/index.tsx","webpack:///./src/hocs/merge.tsx","webpack:///./src/hocs/utils.tsx","webpack:///./node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}","webpack:///./src/hocs/theme.tsx","webpack:///./src/hocs/field.tsx","webpack:///./src/hocs/array.tsx","webpack:///./src/hocs/validate.tsx","webpack:///./src/hocs/make.tsx","webpack:///./src/hocs/temp.tsx","webpack:///./src/hocs/data.tsx","webpack:///external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}","webpack:///./src/reducer.tsx","webpack:///./src/reducers/schema.form.tsx","webpack:///external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}","webpack:///./src/reducers/reducer.tsx","webpack:///./src/components/form/component.tsx","webpack:///./src/components/form/container.tsx","webpack:///./src/components/formitem/index.tsx","webpack:///./src/components/formitem/component.tsx","webpack:///external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}","webpack:///./src/components/formitem/container.tsx","webpack:///external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}","webpack:///./src/fields/index.tsx","webpack:///./src/fields/normal.tsx","webpack:///./src/fields/object.tsx","webpack:///./src/fields/array.tsx","webpack:///./src/libs/dec.tsx","webpack:///external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}"],"names":[],"mappings":"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CA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,KAAK;AACL,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;;AAEA;AACA;AACA,wCAAwC,WAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,cAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kBAAkB;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA8C,QAAQ;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,eAAe,cAAc;AAC7B;;;;;;;ACttBA,gD;;;;;;;;;;;;;;;;;;ACC6C;AAKH;AAMnC,IAAU,OAAW;AAStB,IAAU,MAAG,aAAiC;AA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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"reselect\"), require(\"redux-act\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SFR\", [\"react\", \"recompose\", \"immutable\", \"fx-schema-form-core\", \"react-redux\", \"resolve-pathname\", \"reselect\", \"redux-act\", \"redux\", \"prop-typese\", \"ajv\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SFR\"] = factory(require(\"react\"), require(\"recompose\"), require(\"immutable\"), require(\"fx-schema-form-core\"), require(\"react-redux\"), require(\"resolve-pathname\"), require(\"reselect\"), require(\"redux-act\"), require(\"redux\"), require(\"prop-types\"), require(\"ajv\"));\n\telse\n\t\troot[\"SFR\"] = factory(root[\"React\"], root[\"recompose\"], root[\"Immutable\"], root[\"SFC\"], root[\"react-redux\"], root[\"resolve-pathname\"], root[\"reselect\"], root[\"redux-act\"], root[\"Redux\"], root[\"prop-types\"], root[\"Ajv\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_27__, __WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_37__, __WEBPACK_EXTERNAL_MODULE_39__, __WEBPACK_EXTERNAL_MODULE_45__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 95e1aa225660e16b4097","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"amd\":\"react\",\"commonjs2\":\"react\",\"commonjs\":\"react\"}\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"recompose\",\"amd\":\"recompose\",\"commonjs2\":\"recompose\",\"commonjs\":\"recompose\"}\n// module id = 1\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 2\n// module chunks = 0","import React from \"react\";\nimport { Map } from \"immutable\";\nimport { BaseFactory, UiSchema } from \"fx-schema-form-core\";\n\nexport interface SchemaFormNs<F, T, W> {\n    fieldFactory: BaseFactory<F>;\n    tempFactory: BaseFactory<T>;\n    widgetFactory: BaseFactory<W>;\n}\n\nexport type RC<P, T> = new () => React.PureComponent<P, T>;\nexport interface FxUiSchema extends UiSchema {\n    // 定义参数，与全局的配置参数格式一致；会覆盖全局的配置参数，用于单个FormSchemaItem的配置。\n    options?: Map<string, any>;\n    // \b一般用于object和array的对象；用于渲染下级显示的key。\n    children?: Array<UiSchema | string>;\n    // 主题样式配置（default: default）\n    theme?: string;\n    // 定义字段。默认使用JsonSchema的type来确定field，也可以使用这个来指定字段。\n    field?: string;\n    // 定义显示组件。每种数据类型都可以使用不同的组件来渲染。\n    widget?: string;\n    // 定义包裹的模板数组\n    temps?: string[];\n    // 是否是required，自动添加\n    isRequired?: boolean;\n    // $ref的keys，自动添加\n    refKeys?: string[];\n    // keys的原始形式，不会对-做数字化处理（只有数组类型的originKeys和keys是不同的）\n    originKeys?: string[];\n    // 是否只读\n    readonly?: boolean;\n    // 用于包裹整个ShemaFormItem的hoc数组\n    hocs?: any[];\n}\nexport type NsFactory = SchemaFormNs<RC<any, any>, RC<any, any>, RC<any, any>>;\n\nexport const schemaFormTypes = {\n    hoc: \"hoc\",\n    widget: \"widget\",\n    template: \"temp\",\n    field: \"field\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { FxReducer } from \"./reducers/reducer\";\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\nimport { DefaultProps } from \"./components\";\nimport { FxUiSchema, RC, NsFactory, SchemaFormNs } from \"./models\";\nimport { hocs } from \"./hocs\";\nimport { schemaFormReducer } from \"./reducer\";\n\nexport const reducerFactory = new BaseFactory<FxReducer>();\nexport const hocFactory = new BaseFactory<(settings?: any) => new () => React.PureComponent<DefaultProps, any>>();\nexport const themeFactory = new BaseFactory<NsFactory>();\n\nhocs.forEach((hoc: { name: string, hoc: (hocFactory: BaseFactory<any>) => any }) => {\n    hocFactory.add(hoc.name, hoc.hoc(hocFactory));\n});\n\nreducerFactory.add(\"schemaForm\", schemaFormReducer);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/factory.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Immutable\",\"amd\":\"immutable\",\"commonjs2\":\"immutable\",\"commonjs\":\"immutable\"}\n// module id = 5\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"SFC\",\"amd\":\"fx-schema-form-core\",\"commonjs2\":\"fx-schema-form-core\",\"commonjs\":\"fx-schema-form-core\"}\n// module id = 6\n// module chunks = 0","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/regenerator/index.js\n// module id = 7\n// module chunks = 0","import { SchemaForm } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaForm.propTypes = Object.assign({}, DefaultPropsTypeCheck);\n\nexport { SchemaForm };\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/index.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"react-redux\",\"amd\":\"react-redux\",\"commonjs2\":\"react-redux\",\"commonjs\":\"react-redux\"}\n// module id = 9\n// module chunks = 0","\nexport type Tsn = string | number;\n\n/**\n * tree map struct\n * 这里用来记录数据的元数据信息\n * 元数据信息包括，isValid，isLoading，isShow，...etc\n */\nexport class TreeMap {\n    public children: TreeMap[] = [];\n\n    /**\n     * 构造函数\n     * @param key    当前节点的key，用于计算位置\n     * @param value  当前节点的值\n     * @param parent 当前节点的父亲节点\n     */\n    constructor(private key: string, public value: any, private parent?: TreeMap) { }\n\n    /**\n     * 添加一个孩子元素\n     * 这里需要构建一颗完整的树，所以要遍历keys来动态创建节点\n     * time complexity = O(1) / Constant\n     * @param keys  节点的路径 example [\"root\",\"b\"]  root -> b\n     * @param value 孩子的数据\n     * @returns TreeMap\n     */\n    public addChild(keys: Array<Tsn>, value?: any): TreeMap | null {\n        let curNode: TreeMap = this;\n        let child: TreeMap | null = null;\n\n        if (!keys.length) {\n            return this;\n        }\n\n        keys = [...keys];\n\n        // 创建所有路径的节点\n        while (keys.length) {\n            let key: Tsn = keys.shift() as (Tsn);\n            let isNumber = key.constructor === Number;\n\n            child = curNode.contains(key);\n\n            // 这里需要做一下特殊处理\n            // 如果是数字的话，则说明是数组，key改成`-`\n            // 如果不是数组的话，则无所谓顺序，直接push就行\n            // 如果是数组，则要保证顺序和数据的下标一致\n            if (!child) {\n                if (isNumber) {\n                    child = new TreeMap(\"-\", null, curNode);\n                    curNode.children[key as number] = child;\n                } else {\n                    child = new TreeMap(key.toString(), null, curNode);\n                    curNode.children.push(child);\n                }\n            }\n\n            curNode = child;\n        }\n\n        if (child) {\n            child.value = value;\n        }\n\n        return child;\n    }\n\n    /**\n     * 获取当前的key\n     * 如果key是`-`,代表是数组，则转换成数组下标\n     * time complexity = O(1) / Constant\n     * @returns string\n     */\n    public getKey(): string {\n        if (!this.key || this.key === \"-\") {\n            return this.getIndexInParent().toString();\n        }\n\n        return this.key;\n    }\n\n    /**\n     * 获取当前节点的keys路径\n     * time complexity = O(1) / Constant\n     * @returns string[]\n     */\n    public getCurrentKeys(): Array<Tsn> {\n        let keys: Array<Tsn> = [];\n\n        if (this.parent) {\n            keys = keys.concat(this.parent.getCurrentKeys());\n        }\n\n        return keys.concat([this.key]);\n    }\n\n    /**\n     * 获取当前节点在父亲children中的下标索引\n     * time complexity = O(1) / Constant\n     * @returns number\n     */\n    public getIndexInParent(): number {\n\n        if (this.parent) {\n            let children = this.parent.children;\n\n            for (let i = 0, n = children.length; i < n; i++) {\n                let child = children[i];\n\n                if (child && child === this) {\n                    return i;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * 从当前节点查找是否存在节点\n     * time complexity = O(n) / Linear\n     * @param key 节点的数据\n     * @returns TreeMap\n     */\n    public contains(key: Tsn): TreeMap | null {\n        let isNumber = key.constructor === Number;\n\n        // 如果是数字的话，直接返回children中对应下标的元素\n        if (isNumber) {\n            if (this.children.length > key) {\n                let child = this.children[key as number];\n\n                if (!child) {\n                    this.children[key as number] = new TreeMap(\"-\", null, this);\n\n                    child = this.children[key as number];\n                }\n\n                return child;\n            }\n\n            return null;\n        }\n\n        // 如果当前节点的key===要搜索的key，则返回本身\n        if (this.getKey() === key) {\n            return this;\n        }\n\n        // 如果没有children，则返回空\n        if (!this.children || this.children.length === 0) {\n            return null;\n        }\n        // 遍历子节点，层层递归，直到找到\n        for (let i = 0; i < this.children.length; i++) {\n            let child = this.children[i];\n\n            if (child && child.contains(key)) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * 根据给定的路径数组，返回对应的节点\n     * time complexity = O(n) / Linear\n     * @param keys 路径\n     * @returns TreeMap | null\n     */\n    public containPath(keys: Array<Tsn>): TreeMap | null {\n        let node: TreeMap | null = this;\n\n        keys.forEach((key: Tsn) => {\n            if (!node) {\n                return null;\n            }\n            node = node.contains(key);\n\n            if (!node) {\n                return null;\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * 从父亲节点中删除当前节点\n     * time complexity = O(n) / Linear\n     */\n    public removeFromParent(): void {\n        let index = this.getIndexInParent();\n\n        if (this.parent) {\n            this.parent.children.splice(index, 1);\n        }\n    }\n\n    /**\n     * 移动到某个位置\n     * time complexity = O(1) / Linear\n     * @param toIndex 需要移动到的位置\n     */\n    public insertToFromParent(toIndex: number): void {\n        let curIndex = this.getIndexInParent();\n        let offset = (toIndex > curIndex && false) ? 1 : 0;\n        let splitIndex = toIndex;\n\n        // 如果没有父亲，或者父亲没有子节点，或者当前位置小于0\n        if (!this.parent || !this.parent.children || curIndex < 0) {\n            return;\n        }\n\n        // 如果超出了父亲的子节点数量，添加一个\n        if (this.parent.children.length <= toIndex) {\n            this.parent.addChild([toIndex]);\n        }\n\n        // 父亲节点中删除当前元素\n        this.removeFromParent();\n        // 将当前节点插入到制定的位置\n        this.parent.children = this.parent.children.concat([]).splice(0, splitIndex - offset).concat([this])\n            .concat(this.parent.children.splice(splitIndex - offset));\n    }\n\n    /**\n     * 遍历指定节点下所有子节点的value数据,当前节点不计算在内\n     * @param node 指定的节点\n     */\n    public forEach(clearFunc: (node: TreeMap) => any, currentNode = false) {\n        if (currentNode) {\n            this.value = clearFunc(this);\n        }\n\n        if (!this.children) {\n            return;\n        }\n\n        for (let i = 0, n = this.children.length; i < n; i++) {\n            if (this.children[i]) {\n                this.children[i].value = clearFunc(this.children[i]);\n                this.children[i].forEach(clearFunc);\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/tree.tsx","import { UiSchema } from \"fx-schema-form-core/dist/typings/models/uischema\";\nimport { Ajv } from \"ajv\";\nimport Immutable from \"immutable\";\nimport propTypes, { ValidationMap } from \"prop-types\";\n\nimport { FxUiSchema } from \"../models/index\";\n/**\n * 默认的组件参数\n */\nexport interface DefaultProps {\n    /**\n     * schema对应的$id\n     */\n    schemaId: string;\n    /**\n     * uiSchema\n     */\n    uiSchema?: FxUiSchema;\n    /**\n     * 父亲的路径\n     */\n    parentKeys: string[];\n    /**\n     * 全局默认配置\n     */\n    globalOptions: Immutable.Map<string, any>;\n    /**\n     * ajv的实例\n     */\n    ajv: Ajv;\n    /**\n     * 如果是数组，则表示当前数组的下标\n     */\n    arrayIndex?: number;\n    /**\n     * 当前formItem的层级\n     */\n    arrayLevel?: number[];\n    /**\n     * 数据\n     */\n    formItemData?: any;\n    /**\n     * meta数据\n     */\n    formItemMeta?: any;\n    /**\n     * 数组元素子项的操作\n     */\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n    /**\n     * 当前的reducerkey\n     */\n    reducerKey?: string;\n}\n\nexport const DefaultPropsTypeCheck: ValidationMap<DefaultProps & { customProp: Function }> = {\n    schemaId: propTypes.string.isRequired,\n    uiSchema: propTypes.object,\n    parentKeys: propTypes.array.isRequired,\n    globalOptions: propTypes.object.isRequired,\n    ajv: propTypes.object.isRequired,\n    arrayIndex: propTypes.number,\n    arrayLevel: propTypes.array,\n    formItemData: propTypes.any,\n    formItemMeta: propTypes.any,\n    ArrayItemComponent: propTypes.any\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/default.props.tsx","import React from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\nimport { reducerFactory, hocFactory, themeFactory } from \"./factory\";\nimport { FxReducer } from \"./reducers/reducer\";\nimport { SchemaFormActions } from \"./reducers/schema.form\";\nimport { SchemaForm, DefaultProps } from \"./components\";\nimport { RC, SchemaFormNs, schemaFormTypes } from \"./models\";\n\nimport fields from \"./fields\";\nimport { TreeMap } from \"./libs/tree\";\nimport { SchemaFormHocSettings, SchemaFormHocOutProps, default as schemaFormDec } from \"./libs/dec\";\nimport { SchemaFormProps } from \"./libs/dec\";\n\n/**\n * 默认样式配置\n * 每个样式包含temp，field和widget三个factory\n */\nconst defaultTheme = {\n    tempFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    fieldFactory: new BaseFactory<RC<DefaultProps, any>>(),\n    widgetFactory: new BaseFactory<RC<DefaultProps, any>>()\n};\n\n/**\n * 添加默认的fields\n */\nfields.forEach((field: any) => {\n    for (const key in field) {\n        if (field.hasOwnProperty(key)) {\n            defaultTheme.fieldFactory.add(key, field[key]);\n        }\n    }\n});\n\nthemeFactory.add(\"default\", defaultTheme as any);\n\nhocFactory.add(\"schemaFormDec\", schemaFormDec.bind(schemaFormDec, hocFactory));\n\nexport default {\n    themeFactory,\n    defaultTheme,\n    schemaFormDec,\n    TreeMap,\n    reducerFactory,\n    SchemaForm,\n    hocFactory,\n    schemaFormTypes\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.tsx","import React from \"react\";\n\nimport { default as merge } from \"./merge\";\nimport { default as utils } from \"./utils\";\nimport { default as theme } from \"./theme\";\nimport { default as field } from \"./field\";\nimport { default as array } from \"./array\";\nimport { default as validate } from \"./validate\";\nimport { default as make } from \"./make\";\nimport { default as temp } from \"./temp\";\nimport { default as data } from \"./data\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nexport const hocs: Array<{ name: string, hoc: (hocFactory: BaseFactory<React.PureComponent>) => any }> =\n    [merge, utils, theme, field, array, validate, make, temp, data];\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/index.tsx","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, MergeLib, FxJsonSchema, UiSchema } from \"fx-schema-form-core\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { compose, shouldUpdate, onlyUpdateForKeys } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\n\n/**\n * MergeHoc 添加的属性\n */\nexport interface MergeHocOutProps {\n    mergeSchemaList?: FxUiSchema[];\n}\n\nexport interface MergeHocProps extends DefaultProps {\n    uiSchemas: Array<string | UiSchema>;\n}\n\nexport const name = \"merge\";\n/**\n * merge参数中的schema和uiSchema，生成新的对象mergeSchemaList，传入组件的props中\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n * mergeSchemaList    合并之后的数据\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: RC<any, any>): RC<MergeHocProps, any> => {\n            class MergeComponentHoc extends PureComponent<MergeHocProps, any> {\n                private _mergeUiSchemaList: FxUiSchema[];\n\n                /**\n                 * 合并schema和uiSchema生成 mergeUiSchemaList\n                 * @param props props\n                 */\n                constructor(props: MergeHocProps) {\n                    super(props);\n\n                    const uiSchema = props.uiSchema ? Object.assign({}, props.uiSchema) : undefined;\n\n                    if (uiSchema) {\n                        uiSchema.keys = uiSchema.originKeys;\n                    }\n\n                    const merge = new MergeLib(props.ajv, props.schemaId, uiSchema, props.uiSchemas as any);\n\n                    this._mergeUiSchemaList = merge.mergeUiSchemaList.map((v: any) => {\n                        return this.mergeKeys(v);\n                    });\n                }\n\n                /**\n                 * 解析keys\n                 * 1. 遍历keys中的元素，如果遇到-，则替换成数字\n                 * @param mergeSchema 合并过后的FxUiSchema\n                 */\n                private mergeKeys(mergeSchema: any) {\n                    const { arrayLevel = [] } = this.props;\n                    const arrayLevelCopy = arrayLevel.concat([]);\n\n                    mergeSchema = Object.assign({}, mergeSchema);\n                    mergeSchema.originKeys = [].concat(mergeSchema.keys);\n                    mergeSchema.keys = mergeSchema.keys.reverse().map((key: string) => {\n                        if (key === \"-\") {\n                            return arrayLevelCopy.pop();\n                        }\n\n                        return key;\n                    });\n                    mergeSchema.keys.reverse();\n\n                    return mergeSchema;\n                }\n\n                public render(): JSX.Element {\n                    const { uiSchemas, uiSchema, ...extraProps } = this.props;\n\n                    return (\n                        <Component\n                            mergeSchemaList={this._mergeUiSchemaList}\n                            {...extraProps}\n                        />\n                    );\n                }\n            }\n\n            return MergeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/merge.tsx","\n\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory, MergeLib, FxJsonSchema, schemaKeysFactory, schemaFieldFactory } from \"fx-schema-form-core\";\nimport { compose, shouldUpdate, onlyUpdateForKeys } from \"recompose\";\nimport Immutable from \"immutable\";\nimport resolvePathname from \"resolve-pathname\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models/index\";\nimport { JSONSchema6 } from \"json-schema\";\nimport { Ajv } from \"ajv\";\n\n// const resolvePathname = require(\"resolve-pathname\");\n\nexport const name = \"utils\";\n\nexport interface UtilsHocOutProps {\n    getOptions: (props: DefaultProps, category: string, field: string, ...extraSettings: Immutable.Map<string, any>[])\n        => { [key: string]: any };\n    getTitle(props: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): () => string;\n    getPathKeys: (keys: string[], path: string) => Array<string | number>;\n    normalizeDataPath: (schemaId: string, dataPath: string) => Array<string | number>;\n    getRequiredKeys: (props: DefaultProps, include: string[], exclude: string[]) => { [key: string]: any };\n    getDefaultData: (ajv: Ajv, schema: JSONSchema6, data: any, merge?: boolean) => Promise<any>;\n}\n\n/**\n * 包装utils的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性\n * getOptions    获取参数\n * getTitle      获取当前uiSchema的title\n * getPathKeys   获取相对于当前keys的路径\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps, any> => {\n            class ComponentHoc extends PureComponent<UtilsHocOutProps, any> {\n                public render(): JSX.Element {\n                    return <Component\n                        getTitle={this.getTitle}\n                        getPathKeys={this.getPathKeys}\n                        getOptions={this.getOptions}\n                        normalizeDataPath={this.normalizeDataPath}\n                        getRequiredKeys={this.getRequiredKeys}\n                        getDefaultData={this.getDefaultData}\n                        {...this.props} />;\n                }\n\n                /**\n                 * 过滤props中的属性，只传递所需的属性\n                 * 从设置中，获取一部分的设置\n                 * @param props        当前component的props\n                 * @param includeKeys  需要保留的keys\n                 * @param excludeKeys  需要去掉的keys\n                 */\n                private getRequiredKeys(props: { [key: string]: any }, includeKeys: string[] = [], excludeKeys: string[] = [])\n                    : { [key: string]: any } {\n                    let extraProps: { [key: string]: any } = {};\n\n\n                    if (includeKeys && includeKeys.constructor === Array && includeKeys.length) {\n                        includeKeys.forEach((key: string) => {\n                            if (props.hasOwnProperty(key)) {\n                                extraProps[key] = props[key];\n                            }\n                        });\n                    } else {\n                        extraProps = Object.assign({}, props);\n                    }\n\n                    if (excludeKeys && excludeKeys.constructor === Array && excludeKeys.length) {\n                        excludeKeys.forEach((key: string) => {\n                            if (extraProps.hasOwnProperty(key)) {\n                                delete extraProps[key];\n                            }\n                        });\n                    }\n\n                    return extraProps;\n                }\n\n                /**\n                 * dataPath中的key格式化；\n                 * dataPath是一个字符串，需要把里面的数字转化一下\n                 * dataPath中可能有数组的格式，所以需要把数字转换成数字，而不是字符换\n                 * 遍历所有的key，发现是数字字符，则查找父级的schema，如果父级的type是array，则把当前key转换成数字\n                 * @param schemaId schemaId\n                 * @param dataPath 当前的数据路径字符串\n                 */\n                private normalizeDataPath(schemaId: string, dataPath: string): Array<string | number> {\n                    let dataKeys: Array<string | number> = dataPath.replace(/^\\//g, \"\").split(\"/\");\n\n                    dataKeys = dataKeys.map((key: string | number, index: number) => {\n                        if (Number.isInteger(+key)) {\n                            let keys: Array<string | number> = dataKeys.slice(0, index);\n\n                            keys.unshift(schemaId);\n\n                            if (schemaKeysFactory.has(keys.join(\"/\"))) {\n                                let schema = schemaFieldFactory.get(schemaKeysFactory.get(keys.join(\"/\")));\n\n                                if (schema.type === \"array\") {\n                                    return +key;\n                                }\n                            }\n                        }\n\n                        return key;\n                    });\n\n                    return dataKeys;\n                }\n\n                /**\n                 * 获取参数\n                 * @param props         当前component的props\n                 * @param category      需要获取的种类，有template，field，hoc等\n                 * @param field         field的名称\n                 * @param extraSettings 其余的设置项\n                 */\n                private getOptions(props: DefaultProps, category: string, field: string, ...extraSettings: Immutable.Map<string, any>[])\n                    : { [key: string]: any } {\n                    const { uiSchema = {}, globalOptions } = props;\n                        // fieldOptions = (field === schemaFormTypes.field ? null :\n                        //                 this.getOptions(props, schemaFormTypes.field, props.uiSchema.type.toString()));\n                    let { options, type = \"\" } = uiSchema as FxUiSchema,\n                        optionsArray: Immutable.Map<string, any>[] = [],\n                        getOptions = (o: any, ks: string[]) => {\n                            if (o) {\n                                if (!Immutable.Map.isMap(o)) {\n                                    o = Immutable.fromJS(o);\n                                }\n                                if (o.hasIn(ks)) {\n                                    optionsArray.push(o.getIn(ks));\n                                }\n                            }\n                        };\n\n                    // 从globalOptions中抽取default的配置\n                    // 从globalOptions中抽取field的配置\n                    // 从options中抽取field的配置\n                    getOptions(globalOptions, [category, \"default\"]);\n                    getOptions(globalOptions, [category, field]);\n\n                    getOptions(globalOptions, [schemaFormTypes.field, type.toString(), \"options\", category, field]);\n\n                    // if (fieldOptions && fieldOptions.options) {\n                    //     getOptions(fieldOptions.options, category, field);\n                    // }\n                    getOptions(options, [category, field]);\n\n                    optionsArray = optionsArray.concat(extraSettings);\n\n                    let opts = optionsArray.reverse().reduce((prev: Immutable.Map<string, any>, next: Immutable.Map<string, any>) => {\n                        if (next) {\n                            if (!Immutable.Map.isMap(next)) {\n                                next = Immutable.fromJS(next);\n                            }\n                            return next.merge(prev);\n                        }\n\n                        return prev;\n                    }, Immutable.fromJS({})).toJS();\n\n                    return opts;\n                }\n                /**\n                 * 获取标题数据\n                 * title || key || index\n                 * @param props         当前的props\n                 * @param extraSettings 额外的配置参数\n                 */\n                private getTitle(props: DefaultProps, ...extraSettings: Immutable.Map<string, any>[]): string {\n                    const { uiSchema } = props;\n                    let { title, keys } = uiSchema as FxUiSchema;\n\n                    if (!title && extraSettings && extraSettings.length) {\n                        extraSettings.forEach((sets: Immutable.Map<string, any>) => {\n                            if (sets && !title && sets.get(\"title\")) {\n                                title = sets.get(\"title\");\n                            }\n                        });\n                    }\n\n                    if (title !== undefined) {\n                        return title;\n                    }\n\n                    if (keys && keys.length) {\n                        let keysCopy = [...keys], keyTitle = keysCopy.pop();\n\n                        return keyTitle !== undefined ? keyTitle.toString() : \"\";\n                    }\n\n                    if (props.arrayIndex) {\n                        return props.arrayIndex.toString();\n                    }\n\n                    return \"\";\n                }\n\n                /**\n                 * 根据相对路径，得到keys\n                 * @param keys 当前的keys\n                 * @param path 路径\n                 */\n                private getPathKeys(keys: Array<string>, path: string): Array<string> {\n                    let keysCopy = [\"\"].concat(keys.concat([\"\"]));\n                    let keysResolve: string[] = resolvePathname(path, keysCopy.join(\"/\")).split(\"/\");\n\n                    keysResolve.shift();\n\n                    if (keysResolve.length && !keysResolve[keysResolve.length - 1]) {\n                        keysResolve.pop();\n                    }\n\n                    return keysResolve;\n                }\n\n                /**\n                 * 获取当前schema的默认的数据\n                 *  通过ajv的validate方法获取默认的数据\n                 * @param props 当前的props\n                 * @param data  额外的数据\n                 */\n                private async getDefaultData(ajv: Ajv, schema: JSONSchema6, data: any, merge = false): Promise<any> {\n                    let itemSchema: any = {},\n                        defaultValue: any = {},\n                        type = schema.type,\n                        mergeData = (dataOfType: any) => {\n                            if (!merge) {\n                                return defaultValue.defaultData;\n                            }\n                            if (type === \"object\") {\n                                return Immutable.fromJS({}).merge(defaultValue.defaultData).merge(dataOfType).toJS();\n                            }\n\n                            return Immutable.fromJS([]).merge(defaultValue.defaultData).merge(dataOfType).toJS();\n                        };\n\n                    try {\n                        await ajv.validate({\n                            type: \"object\",\n                            properties: {\n                                defaultData: schema\n                            }\n                        }, defaultValue);\n                    } catch (e) {\n                        console.log(e);\n                        return data;\n                    } finally {\n                        switch (type) {\n                            case \"object\":\n                                if (!defaultValue.defaultData) {\n                                    defaultValue.defaultData = data || {};\n                                }\n                                defaultValue.defaultData = mergeData(data || {});\n                                break;\n                            case \"array\":\n                                if (!defaultValue.defaultData) {\n                                    defaultValue.defaultData = data || [];\n                                }\n                                defaultValue.defaultData = mergeData(data || []);\n                                break;\n                            default:\n                                defaultValue.defaultData = data || defaultValue.defaultData;\n                        }\n                    }\n\n                    return defaultValue.defaultData;\n                }\n            }\n\n            return ComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/utils.tsx","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime-module.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/regenerator-runtime/runtime.js\n// module id = 18\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_19__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"resolve-pathname\",\"amd\":\"resolve-pathname\",\"commonjs2\":\"resolve-pathname\",\"commonjs\":\"resolve-pathname\"}\n// module id = 19\n// module chunks = 0","\nimport React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, NsFactory } from \"../models/index\";\nimport { themeFactory } from \"../factory\";\n\nexport interface ThemeHocOutProps {\n    currentTheme: NsFactory;\n}\n\nexport const name = \"theme\";\n\n/**\n * 包装theme的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性\n * currentTheme 当前的命名空间\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps, any> => {\n            const defualtKey = \"default\";\n            class ThemeComponentHoc extends PureComponent<DefaultProps, any> {\n                public render(): JSX.Element {\n                    const { theme } = this.props.uiSchema as FxUiSchema;\n                    let nsFactory;\n\n                    if (themeFactory.has(theme || defualtKey)) {\n                        nsFactory = themeFactory.get(theme || defualtKey);\n                    } else {\n                        throw new Error(`没有找到${theme || defualtKey}的样式！`);\n                    }\n\n                    return <Component currentTheme={nsFactory} {...this.props} />;\n                }\n            }\n\n            return ThemeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/theme.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { ThemeHocOutProps } from \"./theme\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\n\nexport interface FieldHocOutProps {\n    FieldComponent: RC<any, any>;\n    WidgetComponent: RC<any, any>;\n}\n\nexport const name = \"field\";\n/**\n * 包装Field的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n * 加入属性FieldComponent   schema对应的fieldcomponent\n * 加入属性WidgetComponent  schema对应的widgetcomponent\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        return (Component: any): RC<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> => {\n            const defaultKey = \"default\";\n            class FieldComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps, any> {\n                public render(): JSX.Element | null {\n                    const { currentTheme, getOptions, uiSchema } = this.props,\n                        { field, widget, type } = uiSchema as any;\n                    let FieldComponent, WidgetComponent;\n                    let calcField = field || type as string;\n\n                    if (currentTheme.fieldFactory.has(calcField)) {\n                        FieldComponent = currentTheme.fieldFactory.get(calcField);\n                    } else {\n                        if (currentTheme.fieldFactory.has(defaultKey)) {\n                            FieldComponent = currentTheme.fieldFactory.get(defaultKey);\n                        } else {\n                            console.error(`找不到field：${field || type}`);\n                            return null;\n                        }\n                    }\n\n                    if (currentTheme.widgetFactory.has(widget || type as string)) {\n                        WidgetComponent = currentTheme.widgetFactory.get(widget || type as string);\n                    } else {\n                        if (currentTheme.widgetFactory.has(defaultKey)) {\n                            WidgetComponent = currentTheme.widgetFactory.get(defaultKey);\n                        } else {\n                            console.warn(`找不到widget：${widget || type}`, uiSchema);\n                        }\n                    }\n\n                    return <Component {...this.props}\n                        FieldComponent={(FieldComponent)}\n                        WidgetComponent={WidgetComponent} />;\n                }\n            }\n\n            return FieldComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/field.tsx","\nimport React, { PureComponent } from \"react\";\nimport {\n    branch, shouldUpdate, compose,\n    withHandlers, renderNothing, onlyUpdateForKeys, ComponentEnhancer\n} from \"recompose\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\nimport { reducerFactory } from \"../factory\";\nimport { JSONSchema6 } from \"json-schema\";\n\nexport interface ArrayHocOutProps {\n    addItem: (props: DefaultProps, data?: any) => Promise<void>;\n    removeItem: (parentKeys: any[], keys: any[], index: number) => void;\n    moveItem: (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => void;\n    initArrayComponent: (props: DefaultProps, index?: number) => JSX.Element;\n    ArrayComponent?: new () => React.PureComponent<DefaultProps>;\n    ArrayItemComponent?: new () => React.PureComponent<DefaultProps>;\n}\n\nexport interface ArrayProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport const name = \"array\";\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return () => {\n        const commHoc = compose(\n            withHandlers({\n                /**\n                 * 更新一个数据\n                 */\n                addItem: (propsCur: ArrayProps) => {\n                    return async (props: ArrayProps, data?: any) => {\n                        if (!props.uiSchema || !props.uiSchema.items) {\n                            return;\n                        }\n                        let defaultData = await props.getDefaultData(props.ajv, props.uiSchema.items as any, data);\n\n                        reducerFactory.get(props.reducerKey || \"schemaForm\").actions.addItem({\n                            parentKeys: props.parentKeys,\n                            keys: (props.uiSchema as any).keys,\n                            data: defaultData\n                        });\n                    };\n                },\n                /**\n                 * 删除一个数组元素\n                 */\n                removeItem: (propsCur: DefaultProps) => {\n                    return (parentKeys: any[], keys: any[], index: number) => {\n                        reducerFactory.get(propsCur.reducerKey || \"schemaForm\").actions.removeItem({\n                            parentKeys: parentKeys,\n                            keys: keys,\n                            index: index\n                        });\n                    };\n                },\n                /**\n                 * 移动到某个元素后面\n                 */\n                moveItem: (propsCur: DefaultProps) => {\n                    return (parentKeys: any[], keys: any[], curIndex: number, toIndex: number) => {\n                        reducerFactory.get(propsCur.reducerKey || \"schemaForm\").actions.moveToItem({\n                            parentKeys: parentKeys,\n                            keys: keys,\n                            curIndex: curIndex,\n                            toIndex: toIndex\n                        });\n                    };\n                },\n                /**\n                 * 初始化array的操作组件\n                 */\n                initArrayComponent: (propsCur: DefaultProps) => {\n                    return (props: DefaultProps & ArrayHocOutProps, index?: number) => {\n                        const { ArrayComponent, ArrayItemComponent, ...extraProps } = props, uiSchema = props.uiSchema as FxUiSchema;\n\n                        if (uiSchema.type === \"array\") {\n                            return ArrayComponent ? <ArrayComponent {...extraProps} /> : null;\n                        }\n\n                        return ArrayItemComponent ? <ArrayItemComponent {...extraProps} /> : null;\n                    };\n                }\n            })) as any;\n\n        /**\n         * 包装array的组件HOC\n         * @param hocFactory  hoc的工厂方法\n         * @param Component   需要包装的组件\n         * 加入属性\n         * arrayItems\n         */\n        let arrayHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n            @commHoc\n            class ArrayComponentHoc extends PureComponent<ArrayProps, any> {\n                private ArrayComponent: new () => React.PureComponent;\n                private ArrayItemComponent: new () => React.PureComponent;\n\n                constructor(props: ArrayProps, context: any) {\n                    super(props, context);\n                    this.initArrayComponents();\n                }\n\n                private initArrayComponents() {\n                    const { getOptions } = this.props;\n                    const hocOptions: any = getOptions(this.props, \"hoc\", name);\n\n                    if (hocOptions.ArrayComponent) {\n                        this.ArrayComponent = hocOptions.ArrayComponent;\n                    }\n\n                    if (hocOptions.ArrayItemComponent) {\n                        this.ArrayItemComponent = hocOptions.ArrayItemComponent;\n                    }\n\n                }\n\n                public render(): JSX.Element {\n                    let props: any = {};\n\n                    if (this.ArrayComponent) {\n                        props.ArrayComponent = this.ArrayComponent;\n                    }\n\n                    if (this.ArrayItemComponent) {\n                        props.ArrayItemComponent = this.ArrayItemComponent;\n                    }\n\n                    return <Component {...this.props} {...props} />;\n                }\n            }\n\n            return ArrayComponentHoc as any;\n        };\n\n        let pureHoc = (Component: any): RC<ArrayHocOutProps, any> => {\n            @commHoc\n            class ArrayPureComponentHoc extends React.PureComponent<ArrayProps, any> {\n                public render() {\n                    return <Component {...this.props} />;\n                }\n            }\n\n            return ArrayPureComponentHoc as any;\n        };\n\n        return branch(\n            (props: ArrayProps) => {\n                const { uiSchema = { type: \"\" } } = props;\n\n                return uiSchema.type === \"array\";\n            },\n            arrayHoc,\n            pureHoc\n        );\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/array.tsx","\nimport React, { PureComponent } from \"react\";\nimport { withHandlers, compose } from \"recompose\";\nimport { BaseFactory, schemaKeysFactory, schemaFieldFactory } from \"fx-schema-form-core\";\n\nimport { MakeHocOutProps } from \"./make\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC } from \"../models/index\";\nimport { reducerFactory } from \"../factory\";\n\nexport interface ValidateHocOutProps {\n    updateItemData: (props: DefaultProps, data: any, meta?: any) => void;\n    updateItemMeta: (props: DefaultProps, data: any, meta?: any, noChange?: boolean) => void;\n    removeItemData: (props: DefaultProps, meta?: any) => void;\n    validate: (props: DefaultProps, data: any, meta?: any) => Promise<any>;\n}\nexport const name = \"validate\";\n\n/**\n * 包装validate的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component   需要包装的组件\n * 加入属性\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: any): RC<DefaultProps, any> => {\n            @(compose(\n                withHandlers({\n                    /**\n                     * 验证单个数据\n                     * 使用当前组件中的uiSchema，以及传递过来的数据做验证\n                     * 这里可能有远程验证\n                     */\n                    validate: (propsCur: DefaultProps) => {\n                        return async (props: DefaultProps & UtilsHocOutProps, data: any) => {\n                            const result: any = { dirty: true, isValid: false, isLoading: false };\n                            const schema = Object.assign({}, props.uiSchema);\n                            const timeId = setTimeout(() => {\n                                reducerFactory.get(props.reducerKey || \"schemaForm\").actions.updateItemMeta({\n                                    parentKeys: props.parentKeys,\n                                    keys: (schema as any).keys,\n                                    meta: { isLoading: true, isValid: false, errorText: false }\n                                });\n                            }, 200);\n\n                            // 这里做一层try catch处理\n                            try {\n                                let validateFunc;\n\n                                // 使用schema.schemaPath来确定schema\n                                if (schema.schemaPath && props.ajv.getSchema(schema.schemaPath)) {\n                                    validateFunc = props.ajv.getSchema(schema.schemaPath);\n                                } else if (schema.$id) {\n                                    validateFunc = props.ajv.getSchema(schema.$id);\n                                } else {\n                                    let schemaInCache = Object.assign({}, schemaFieldFactory.get(schema.schemaPath));\n\n                                    delete schemaInCache.$id;\n                                    delete schemaInCache.$ref;\n\n                                    validateFunc = props.ajv.compile(schemaInCache);\n                                }\n\n                                result.isValid = await validateFunc(data);\n\n                                // 如果验证出错，则抛出错误\n                                if (!result.isValid) {\n                                    let error: any = new Error();\n\n                                    error.errors = validateFunc.errors;\n\n                                    throw error;\n                                }\n                            } catch (err) {\n                                // 处理错误消息\n                                result.errorText = err.errors ?\n                                    props.ajv.errorsText(err.errors, {\n                                        dataVar: props.getTitle(props).toString()\n                                    }) : err.message;\n                            }\n                            finally {\n                                clearTimeout(timeId);\n                            }\n\n                            return result;\n                        };\n                    }\n                }),\n                withHandlers({\n                    /**\n                     * 更新一个数据\n                     */\n                    updateItemData: (propsCur: DefaultProps) => {\n                        return (props: DefaultProps, data: any, meta?: any) => {\n                            reducerFactory.get(props.reducerKey || \"schemaForm\").actions.updateItemData({\n                                parentKeys: props.parentKeys,\n                                keys: (props.uiSchema as any).keys,\n                                data: data,\n                                meta\n                            });\n                        };\n                    },\n                    /**\n                     * 更新一个元数据\n                     */\n                    updateItemMeta: (propsCur: ValidateHocOutProps) => {\n                        return async (props: DefaultProps, data: any, meta: any = null, noChange = false) => {\n                            reducerFactory.get(props.reducerKey || \"schemaForm\").actions.updateItemMeta({\n                                parentKeys: props.parentKeys,\n                                keys: (props.uiSchema as any).keys,\n                                meta: meta || await propsCur.validate(props, data),\n                                noChange: noChange\n                            });\n                        };\n                    },\n                    /**\n                     * 删除一个元素的meta和data\n                     */\n                    removeItemData: (propsCur: ValidateHocOutProps) => {\n                        return async (props: DefaultProps, meta = true) => {\n                            reducerFactory.get(props.reducerKey || \"schemaForm\").actions.removeItemData({\n                                parentKeys: props.parentKeys,\n                                keys: (props.uiSchema as any).keys,\n                                meta: meta\n                            });\n                        };\n                    }\n                })) as any)\n            class ArrayComponentHoc extends PureComponent<DefaultProps, any> {\n                public render(): JSX.Element {\n                    return <Component {...this.props} />;\n                }\n            }\n\n            return ArrayComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/validate.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, shouldUpdate, ComponentEnhancer } from \"recompose\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport Immutable from \"immutable\";\n\nimport { UtilsHocOutProps } from \"./utils\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models/index\";\n\nexport interface MakeHocOutProps extends UtilsHocOutProps {\n\n}\n\nexport const name = \"make\";\n\n/**\n * make的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n *  1. HOC默认顺序：ThemeHoc -> FieldHoc -> ValidateHoc -> ArrayHoc -> TempHoc\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {}) => {\n        return (Component: any): RC<DefaultProps & MakeHocOutProps, any> => {\n            // @(shouldUpdate(() => false) as any)\n            class MakeComponentHoc extends PureComponent<DefaultProps & MakeHocOutProps, any> {\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions } = this.props;\n                    const { type, field } = uiSchema as FxUiSchema;\n                    const fieldOptions = getOptions(this.props, schemaFormTypes.field, field || type as string,\n                        Immutable.fromJS(uiSchema.hocs ? { hocs: uiSchema.hocs } : {}),\n                        Immutable.fromJS(settings || {}));\n                    const hocs: Array<string | ComponentEnhancer<any, any>> = fieldOptions.hocs\n                        || [\"utils\", \"theme\", \"field\", \"validate\", \"array\", \"temp\"];\n\n                    let ComponentWithHocs: any = compose<DefaultProps & MakeHocOutProps, any>\n                        (...([...hocs].map(hoc1 => {\n                            if (typeof hoc1 !== \"string\") {\n                                return hoc1;\n                            }\n                            return hocFactory.get(hoc1)();\n                        })))(Component);\n\n                    return <ComponentWithHocs {...this.props} />;\n                }\n            }\n\n            return MakeComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/make.tsx","import React, { PureComponent } from \"react\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { shallowEqual, compose, shouldUpdate, onlyUpdateForKeys, lifecycle, pure } from \"recompose\";\nimport { connect } from \"react-redux\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models/index\";\nimport { ThemeHocOutProps } from \"./theme\";\nimport { MakeHocOutProps } from \"./make\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { ArrayHocOutProps } from \"./array\";\n\nexport const name = \"temp\";\n\n/**\n * 包装Template的组件HOC\n * @param hocFactory  hoc的工厂方法\n * @param Component 需要包装的组件\n */\nexport const hoc = (hocFactory: BaseFactory<any>) => {\n    return (settings: any = {\n        tempField: \"temps\",\n        templates: []\n    }) => {\n        return (Component: any): RC<DefaultProps & ThemeHocOutProps, any> => {\n            /**\n            * 获取模板的components\n            * @param uiSchema 合并后的数据\n            */\n            class TempComponentHoc extends PureComponent<DefaultProps & ThemeHocOutProps & UtilsHocOutProps & ArrayHocOutProps, any> {\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions, reducerKey } = this.props;\n                    const { options: uiSchemaOptions, keys } = uiSchema as FxUiSchema;\n                    const TempComponents = this.getTemplates();\n\n                    return TempComponents.reduce((prev: JSX.Element, { key, Temp }) => {\n                        const tempOptions = getOptions(this.props, schemaFormTypes.template, key),\n                            TempWithHoc: any = compose(hocFactory.get(\"utils\")(), ...(tempOptions.tempHocs || []))(Temp);\n\n                        return <TempWithHoc\n                            tempKey={key}\n                            ajv={this.props.ajv}\n                            uiSchema={this.props.uiSchema}\n                            schemaId={this.props.schemaId}\n                            arrayLevel={this.props.arrayLevel}\n                            reducerKey={reducerKey}\n                            arrayIndex={this.props.arrayIndex}\n                            globalOptions={this.props.globalOptions}\n                            ArrayComponent={this.props.ArrayComponent}\n                            ArrayItemComponent={this.props.ArrayItemComponent}\n                            initArrayComponent={this.props.initArrayComponent}\n                            parentKeys={this.props.parentKeys}\n                            children={prev} />;\n                    }, <Component {...this.props} />);\n                }\n\n                /**\n                * 获取模板的components\n                */\n                private getTemplates(): Array<{ key: string, Temp: RC<any, any> }> {\n                    const { uiSchema, currentTheme, getOptions } = this.props,\n                        { keys, type, temps } = uiSchema as FxUiSchema,\n                        typeDefaultOptions = getOptions(this.props, schemaFormTypes.field, type as string),\n                        TempComponent: Array<{ key: string, Temp: RC<any, any> }> = [];\n                    let template: Array<any>;\n\n                    if (temps) {\n                        template = temps;\n                    } else if (settings.templates && settings.templates.length > 0) {\n                        template = settings.templates;\n                    } else {\n                        template = typeDefaultOptions[settings.tempField] || \"default\";\n                    }\n\n                    const getTemplate = (tmp: any): void => {\n                        switch (tmp.constructor) {\n                            case String:\n                                if (!currentTheme.tempFactory.has(tmp)) {\n                                    console.error(`不存在${tmp}的temp！`);\n                                } else {\n                                    TempComponent.push({\n                                        key: tmp,\n                                        Temp: currentTheme.tempFactory.get(tmp)\n                                    });\n                                }\n                                break;\n                            case Object:\n                                TempComponent.push({\n                                    key: tmp.name,\n                                    Temp: tmp\n                                });\n                                break;\n                            case Array:\n                                [...template].reverse().forEach((tml, idx) => {\n                                    getTemplate(tml);\n                                });\n                                break;\n                        }\n                    };\n\n                    getTemplate(template);\n\n                    return TempComponent;\n                }\n            }\n\n            return TempComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/temp.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, shouldUpdate } from \"recompose\";\nimport { connect, Dispatch } from \"react-redux\";\nimport { BaseFactory } from \"fx-schema-form-core\";\nimport { createSelector, createSelectorCreator, defaultMemoize } from \"reselect\";\nimport Immutable, { is } from \"immutable\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models/index\";\nimport { UtilsHocOutProps } from \"./utils\";\nimport { TreeMap } from \"../libs/tree\";\n\nexport interface DataHocOutProps extends DefaultProps {\n\n}\n\nexport interface DataHocSettings {\n    data?: boolean;\n    dataLength?: boolean;\n    meta?: boolean;\n    metaKeys?: string[];\n    treeNode?: boolean;\n}\n\n// 自定义选择器创建函数\nconst fxSelectorCreator = createSelectorCreator(defaultMemoize, is);\n\nexport const name = \"data\";\nexport const hoc = (hocFactory: BaseFactory<RC<DefaultProps, {}>>) => {\n    return (settings: DataHocSettings = {\n        data: true\n    }) => {\n        /**\n         * 与reduce相关的数据操作\n         * 获取formItemData数据\n         * 获取formItemMeta数据\n         */\n        const getItemDataHoc = (parentKeys: string[], rootReducerKey: string[], keys: Array<string | number>) => {\n            /**\n             * 获取FormItemData的数据\n             * @param state 当前的state树\n             */\n            let getFormItemData = (state: Immutable.Map<string, any>) => {\n                let dataKeys = [...rootReducerKey, ...parentKeys, \"data\", ...keys];\n\n                if (settings.data && state.hasIn(dataKeys)) {\n                    let formItemData = state.getIn(dataKeys);\n\n                    if (formItemData !== undefined) {\n                        if (!settings.dataLength) {\n                            return formItemData;\n                        } else {\n                            return formItemData.size;\n                        }\n                    }\n                }\n            };\n\n            /**\n            * 获取FormItemMeta的数据\n            * @param state 当前的state树\n            */\n            let getFormItemMeta = (state: Immutable.Map<string, any>) => {\n                let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n\n                if (settings.meta && state.hasIn(metaKeys)) {\n                    let rootNode = state.getIn(metaKeys),\n                        childNode = rootNode.containPath([...keys]);\n\n                    if (childNode && childNode.value) {\n                        if (settings.metaKeys) {\n                            return childNode.value.filter((val: any, key: string) => {\n                                return settings.metaKeys.indexOf(key) >= 0;\n                            });\n                        }\n                        return childNode.value;\n                    }\n                }\n            };\n\n            /**\n            * 获取FormItemMeta的根数据\n            * @param state 当前的state树\n            */\n            let getRoot = (state: Immutable.Map<string, any>) => {\n                if (!settings.treeNode) {\n                    return null;\n                }\n\n                let metaKeys = [...rootReducerKey, ...parentKeys, \"meta\"];\n                let rootNode: TreeMap = state.getIn(metaKeys);\n                let childNode = rootNode.containPath([...keys]);\n\n                if (childNode) {\n                    return childNode;\n                }\n\n                return rootNode.addChild([...keys]);\n            };\n\n            return fxSelectorCreator(\n                [getFormItemData, getFormItemMeta, getRoot],\n                (formItemData: any, formItemMeta: any, formItemNode: TreeMap) => {\n                    const rtn: { formItemData?: any, formItemMeta?: any, formItemNode?: TreeMap } = {};\n\n                    if (formItemData !== undefined && formItemData !== null) {\n                        rtn.formItemData = formItemData;\n                    }\n                    if (formItemMeta !== undefined && formItemData !== null) {\n                        rtn.formItemMeta = formItemMeta;\n                    }\n                    if (formItemNode !== undefined && formItemData !== null) {\n                        rtn.formItemNode = formItemNode;\n                    }\n\n                    return rtn;\n                }\n            );\n        };\n\n        /**\n         * 用于获取数据的hoc\n         * @param hocFactory  hoc的工厂方法\n         * @param Component   需要包装的组件\n         * 加入属性\n         * arrayItems\n         */\n        return (Component: any): RC<DefaultProps, any> => {\n            @(shouldUpdate(() => false) as any)\n            class DataComponentHoc extends PureComponent<DefaultProps & UtilsHocOutProps, any> {\n                // private ComponentWithHoc;\n\n                public render(): JSX.Element {\n                    const { uiSchema, getOptions } = this.props,\n                        { keys = [] } = this.props.uiSchema || {},\n                        options = getOptions(this.props, schemaFormTypes.hoc, name);\n\n\n                    if (!options.rootReducerKey || options.rootReducerKey.constructor !== Array) {\n                        console.error(\"dataHoc missing property rootReducerKey.should be a Array.\");\n                    }\n\n                    const hocWithData = connect(getItemDataHoc(this.props.parentKeys, options.rootReducerKey, keys)),\n                        ComponentWithHoc: any = hocWithData(Component);\n\n                    return <ComponentWithHoc {...this.props} />;\n                }\n            }\n\n            return DataComponentHoc as any;\n        };\n    };\n};\n\nexport default {\n    name,\n    hoc\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/hocs/data.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_27__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"reselect\",\"amd\":\"reselect\",\"commonjs2\":\"reselect\",\"commonjs\":\"reselect\"}\n// module id = 27\n// module chunks = 0","import { fromJS } from \"immutable\";\n\nimport { SchemaFormReducer } from \"./reducers/schema.form\";\n\nexport const schemaFormReducer = new SchemaFormReducer(fromJS({}));\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducer.tsx","import { createAction, createReducer, SimpleActionCreator } from \"redux-act\";\nimport { Reducer } from \"redux-act\";\nimport { List, Map, fromJS } from \"immutable\";\n\nimport { FxReducer, a } from \"./reducer\";\nimport { TreeMap } from \"../libs/tree\";\nimport { Store } from \"react-redux\";\n\nconst b = a;\n\nexport interface SchemaFormActions {\n    [index: string]: SimpleActionCreator<any, any>;\n    createForm: SimpleActionCreator<{ key: string, data: any }>;\n    updateItemData: SimpleActionCreator<{ parentKeys: string[], keys: string[], data: any, meta?: any }>;\n    updateItemMeta: SimpleActionCreator<{ parentKeys: string[], keys: string[], meta: any, noChange?: boolean; }>;\n    addItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], data: any }>;\n    removeItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], index: number }>;\n    moveToItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], curIndex: number, toIndex: number }>;\n    removeItemData: SimpleActionCreator<{ parentKeys: string[], keys: string[], meta?: boolean }>;\n}\n\nexport class SchemaFormReducer<T> implements FxReducer {\n\n    private createForm: SimpleActionCreator<{ key: string, data: any }>\n        = createAction<{ key: string, data: any }>(\"创建一个表单数据\");\n    private updateItemData: SimpleActionCreator<{ parentKeys: string[], keys: string[], data: any, meta?: any }>\n        = createAction<{ parentKeys: string[], keys: string[], data: any, meta?: any }>(\"更新一个表单数据\");\n    private updateItemMeta: SimpleActionCreator<{ parentKeys: string[], keys: string[], meta: any, noChange?: boolean; }>\n        = createAction<{ parentKeys: string[], keys: string[], meta: any }>(\"更新一个表单元数据\");\n    private addItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], data: any }>\n        = createAction<{ parentKeys: string[], keys: string[], data: any }>(\"添加一个数据\");\n    private removeItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], index: number }>\n        = createAction<{ parentKeys: string[], keys: string[], index: number }>(\"删除一个数据\");\n    private moveToItem: SimpleActionCreator<{ parentKeys: string[], keys: string[], curIndex: number, toIndex: number }>\n        = createAction<{ parentKeys: string[], keys: string[], curIndex: number, toIndex: number }>(\"元素移位\");\n    private removeItemData: SimpleActionCreator<{ parentKeys: string[], keys: string[], meta?: boolean }>\n        = createAction<{ parentKeys: string[], keys: string[], meta?: boolean }>(\"删除一个字段的数据以及meta数据\");\n\n    /**\n     * 构造\n     * @param initialState 初始化状态\n     */\n    constructor(private initialState: any) { }\n    /**\n     * 获取当前的actions\n     */\n    public get actions(): SchemaFormActions {\n        return {\n            createForm: this.createForm,\n            updateItemData: this.updateItemData,\n            updateItemMeta: this.updateItemMeta,\n            addItem: this.addItem,\n            removeItem: this.removeItem,\n            moveToItem: this.moveToItem,\n            removeItemData: this.removeItemData\n        };\n    }\n\n    /**\n     * 初始化actions\n     * @param store Redux中的store实例\n     */\n    public init(store: Store<Map<string, any>>): void {\n        for (const key in this.actions) {\n            if (this.actions.hasOwnProperty(key)) {\n                const action = this.actions[key];\n\n                if (!action.assigned()) {\n                    action.assignTo(store);\n                }\n            }\n        }\n    }\n\n    /**\n     * 返回当前的reducer\n     */\n    public get reducer(): Reducer<any> {\n        return createReducer<any>({\n            [this.createForm as any]: this.createFormHandle.bind(this),\n            [this.updateItemData as any]: this.updateItemDataHandle.bind(this),\n            [this.updateItemMeta as any]: this.updateItemMetaHandle.bind(this),\n            [this.addItem as any]: this.addItemDataHandle.bind(this),\n            [this.removeItem as any]: this.removeItemHandle.bind(this),\n            [this.moveToItem as any]: this.moveItemHandle.bind(this),\n            [this.removeItemData as any]: this.removeItemDataMetaHandle.bind(this)\n        }, this.initialState);\n    }\n\n    /**\n     * 删除一个字段的数据以及meta数据\n     * @param state   当前的state\n     * @param param1  参数\n     *  parentKeys  父亲的keys\n     *  keys        当前元素的keys\n     *  meta        是否要删除meta数据\n     */\n    private removeItemDataMetaHandle(state: Map<string, any>, { parentKeys, keys, meta }: any) {\n        let dataKeys = parentKeys.concat([\"data\", ...keys]);\n        let metaKeys: string[] = parentKeys.concat([\"meta\"]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n\n        state = this.resolveKeys(state, dataKeys);\n\n        if (state.hasIn(dataKeys)) {\n            state = state.removeIn(dataKeys);\n        }\n\n        if (childNode && meta) {\n            childNode.removeFromParent();\n        }\n\n        return state;\n    }\n\n    /**\n     * 解析一个路径上的数据，判断数据格式，做处理\n     * @param state 当前的state\n     * @param keys  数据路径\n     */\n    private resolveKeys(state: Map<string, any>, keys: Array<string>) {\n        if (state.hasIn(keys)) {\n            return state;\n        }\n\n        for (let i = 0, n = keys.length; i < n; i++) {\n            let mKeys = [...keys].splice(0, i + 1);\n\n            // 如果key不存在，遍历生成数据结构\n            if (!state.hasIn(mKeys)) {\n                mKeys.pop();\n                if (!state.hasIn(mKeys)) {\n                    if (keys[i].constructor === Number) {\n                        state = state.setIn(mKeys, List());\n                    } else {\n                        state = state.setIn(mKeys, Map());\n                    }\n                }\n            } else if (i < n) {\n                // 如果key存在，则判断数据结构是否与结构一致\n                let data = state.getIn(mKeys);\n\n                if (!Map.isMap(data) && !List.isList(data)) {\n                    if (keys[i + 1].constructor === Number) {\n                        state = state.setIn(mKeys, List());\n                    } else {\n                        state = state.setIn(mKeys, Map());\n                    }\n                }\n            }\n        }\n\n        return state;\n    }\n\n    /**\n     * 创建一份表单数据\n     * @param state   当前的state\n     * @param param1  参数值，key 和 data\n     */\n    private createFormHandle(state: Map<string, any>, { key, data }: any): Map<string, any> {\n        if (state.has(key)) {\n            state = state.remove(key);\n        }\n\n        const meta = new TreeMap(key, fromJS({}));\n        const stateData = Map<string, any>({\n            meta: meta,\n            data: fromJS(data)\n        });\n\n        return state.set(key, stateData);\n    }\n    /**\n     * 修改一个数据\n     * 合并parrentKeys和keys，中间加入一个“data”\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemDataHandle(state: Map<string, any>, { parentKeys, keys, data, meta }: any): Map<string, any> {\n        let dataKeys = parentKeys.concat([\"data\", ...keys]);\n\n        state = this.resolveKeys(state, dataKeys);\n        state = state.setIn(dataKeys, fromJS(data));\n\n        if (meta) {\n            state = this.updateItemMetaHandle(state, { parentKeys, keys, meta });\n        }\n\n        return state;\n    }\n\n    /**\n     * 添加一个数组到List\n     * 1. 添加数组\n     * 2. 修改meta中的collapsing字段为false，使得折叠的状态改变成不折叠的状态\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private addItemDataHandle(state: Map<string, any>, { parentKeys, keys, data }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([\"data\", ...keys]),\n            metaKeys: string[] = parentKeys.concat([\"meta\"]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys);\n        let formItemData: List<any>;\n\n        state = this.resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys) || List();\n        formItemData = formItemData.push(fromJS(data));\n\n        if (childNode && childNode.value) {\n            childNode.value = childNode.value.merge({\n                collapsing: false\n            });\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 删除数组中的一个元素\n     * 1. 删除元素数组中的数据\n     * 2. 删除meta信息中的数据\n     * @param state  当前的state\n     * @param param1 keys,parentKeys和data\n     */\n    private removeItemHandle(state: Map<string, any>, { parentKeys, keys, index }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([\"data\", ...keys]),\n            metaKeys: string[] = parentKeys.concat([\"meta\"]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            childNode: TreeMap | null = rootNode.addChild(keys.concat([index]));\n        let formItemData: List<any>;\n\n        state = this.resolveKeys(state, dataKeys);\n        formItemData = state.getIn(dataKeys);\n\n        if (!formItemData || !List.isList(formItemData)) {\n            return state;\n        }\n\n        if (childNode) {\n            childNode.removeFromParent();\n        }\n\n        return state.setIn(dataKeys, formItemData.remove(index));\n    }\n\n    /**\n     * 交换2个数组的位置\n     * 1. 交换数组数据\n     * 2. 交换meta中的位置信息\n     * @param state   当前的state\n     * @param param1  参数\n     *   parentKeys    父亲的keys\n     *   keys          当前item的keys\n     *   curIndex      当前item的索引\n     *   toIndex       需要交换的item索引\n     */\n    private moveItemHandle(state: Map<string, any>, { parentKeys, keys, curIndex, toIndex }: any): Map<string, any> {\n        const dataKeys = parentKeys.concat([\"data\", ...keys]),\n            metaKeys: string[] = parentKeys.concat([\"meta\"]),\n            rootNode: TreeMap = state.getIn(metaKeys),\n            offset = (toIndex > curIndex && false ? 1 : 0);\n        let oldFormItemData: List<any> = state.getIn(dataKeys),\n            formItemData: List<any> = state.getIn(dataKeys),\n            childNode: TreeMap | null = rootNode.containPath(keys.concat([curIndex])),\n            childNodeTo: TreeMap | null = rootNode.containPath(keys.concat([toIndex]));\n\n        state = this.resolveKeys(state, dataKeys);\n\n        if (!formItemData || toIndex < 0) {\n            return state;\n        }\n\n        let curItemData = formItemData.get(curIndex);\n\n        formItemData = formItemData.remove(curIndex);\n        formItemData = formItemData.insert(toIndex - offset, curItemData);\n\n        // if (formItemData.equals(oldFormItemData)) {\n        //     return state;\n        // }\n\n        if (childNode) {\n            childNode.insertToFromParent(toIndex);\n        } else {\n            if (childNodeTo) {\n                childNodeTo.insertToFromParent(curIndex);\n            }\n        }\n\n        return state.setIn(dataKeys, formItemData);\n    }\n\n    /**\n     * 修改一个数据的元数据\n     * 通过parentKeys取得根节点\n     * 通过keys合成元素的节点路径，从根节点获取数据\n     * @param state  当前的state\n     * @param param1 参数值，keys,parentKeys和data\n     */\n    private updateItemMetaHandle(state: Map<string, any>, { parentKeys, keys, meta, noChange }: any): Map<string, any> {\n        let metaKeys: string[] = parentKeys.concat([\"meta\"]);\n        let rootNode: TreeMap = state.getIn(metaKeys);\n        let childNode: TreeMap | null = rootNode.containPath(keys);\n        let value = childNode ? childNode.value : null;\n\n        if (!childNode) {\n            childNode = rootNode.addChild(keys);\n        }\n\n        if (childNode) {\n            if (value) {\n                childNode.value = childNode.value.merge(meta);\n            } else {\n                childNode.value = fromJS(meta);\n            }\n        }\n\n        if (noChange) {\n            return state;\n        }\n\n        // if (is(childNode.value, value)) {\n        //     return state;\n        // }\n        let newRoot = new TreeMap(rootNode.getKey(), rootNode.value);\n\n        newRoot.children = rootNode.children;\n\n        return state.setIn(metaKeys, newRoot);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/schema.form.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"redux-act\",\"amd\":\"redux-act\",\"commonjs2\":\"redux-act\",\"commonjs\":\"redux-act\"}\n// module id = 30\n// module chunks = 0","import { Reducer } from \"redux-act\";\nimport { Store } from \"react-redux\";\n\nexport interface FxReducer {\n    actions: any;\n    reducer: Reducer<any>;\n    init(store: Store<any>): void;\n}\n\nexport const a = 1;\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/reducer.tsx","import React, { PureComponent } from \"react\";\nimport PropTypes, { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../index\";\nimport { hoc } from \"./container\";\nimport { MergeHocOutProps } from \"../../hocs/merge\";\nimport { SchemaFormItem } from \"../formitem/index\";\nimport { FxUiSchema } from \"../../models/index\";\n\nexport interface Props extends DefaultProps, MergeHocOutProps {\n    RootComponent?: any;\n    uiSchemas?: Array<string | FxUiSchema>;\n}\n\n@(hoc as any)\nexport class SchemaForm extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { schemaId, mergeSchemaList, arrayLevel, RootComponent, children, ...extraProps } = this.props;\n        const formItemList = mergeSchemaList ? mergeSchemaList.map((uiScehma: FxUiSchema, idx: number) => {\n            let arrayLevelCopy = arrayLevel ? arrayLevel.concat([]) : [];\n\n            return <SchemaFormItem\n                key={idx}\n                {...extraProps}\n                schemaId={schemaId}\n                uiSchema={uiScehma}\n                arrayLevel={arrayLevelCopy}\n            />;\n        }) : [];\n\n        if (RootComponent) {\n            return <RootComponent >\n                {formItemList}\n                {children}\n            </RootComponent>;\n        }\n\n        return (\n            <div>\n                {formItemList}\n                {children}\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/component.tsx","import { compose, ComponentEnhancer, shouldUpdate } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    shouldUpdate(() => false),\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"merge\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/form/container.tsx","import { SchemaFormItem } from \"./component\";\nimport { DefaultPropsTypeCheck } from \"../default.props\";\n\nSchemaFormItem.propTypes = Object.assign({}, DefaultPropsTypeCheck);\n\nexport { SchemaFormItem };\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/index.tsx","import React, { PureComponent } from \"react\";\nimport { compose } from \"redux\";\nimport { ValidationMap } from \"prop-types\";\n\nimport { DefaultProps } from \"../default.props\";\nimport { hoc } from \"./container\";\nimport { FieldHocOutProps } from \"../../hocs/field\";\nimport { UtilsHocOutProps } from \"../../hocs/utils\";\n\nexport interface Props extends DefaultProps {\n\n}\n\n@(hoc as any)\nexport class SchemaFormItem extends PureComponent<Props, any> {\n    public static propTypes: ValidationMap<Props>;\n\n    public render() {\n        const { FieldComponent, uiSchema, ...extraProps } = this.props as Props & FieldHocOutProps & UtilsHocOutProps;\n        const options = extraProps.getOptions(this.props, \"field\", (uiSchema as any).field || (uiSchema as any).type);\n        let FieldComponentWithHoc: any = FieldComponent;\n\n        if (!FieldComponent) {\n            console.log(uiSchema, \"没有找到匹配的field\");\n            return null;\n        }\n\n        if (options.fieldHocs && options.fieldHocs.length) {\n            FieldComponentWithHoc = compose(\n                ...(options.fieldHocs || [])\n            )(FieldComponent);\n        }\n\n        return <FieldComponentWithHoc key={(uiSchema as any).keys.join(\"formItem\")} uiSchema={uiSchema} {...extraProps} />;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/component.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_37__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Redux\",\"amd\":\"redux\",\"commonjs2\":\"redux\",\"commonjs\":\"redux\"}\n// module id = 37\n// module chunks = 0","import { compose, ComponentEnhancer } from \"recompose\";\n\nimport { DefaultProps } from \"../index\";\nimport { hocFactory } from \"../../factory\";\n\nexport const hoc: ComponentEnhancer<DefaultProps, any> = compose<DefaultProps, any>(\n    hocFactory.get(\"utils\")(),\n    hocFactory.get(\"make\")()\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/formitem/container.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_39__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"prop-types\",\"amd\":\"prop-typese\",\"commonjs2\":\"prop-types\",\"commonjs\":\"prop-types\"}\n// module id = 39\n// module chunks = 0","import { default as normalField, NormalField, name as n1 } from \"./normal\";\nimport { default as objectField, ObjectField, name as n2 } from \"./object\";\nimport { default as arrayField, ArrayField, name as n3 } from \"./array\";\n\nexport default [normalField, objectField, arrayField];\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/index.tsx","import React, { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose, shouldUpdate } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models/index\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { FieldHocOutProps } from \"../hocs/field\";\n\nexport interface NormalFieldProps extends DefaultProps, UtilsHocOutProps, FieldHocOutProps {\n\n}\n\nexport const name = \"normal\";\n\n/**\n * 普通数据字段类型\n * 这里直接渲染[fieldHoc]中结算得出的WidgetComponent\n */\nexport class NormalField extends PureComponent<NormalFieldProps> {\n\n    constructor(props: NormalFieldProps, context: any) {\n        super(props, context);\n    }\n\n    public render(): JSX.Element | null {\n        const { WidgetComponent, FieldComponent, formItemMeta, formItemData, ...extraProps } = this.props;\n        const fieldOptions = extraProps.getOptions(this.props, schemaFormTypes.field, name);\n        const { keys } = extraProps.uiSchema as FxUiSchema;\n        let WidgetComponentWithHoc = WidgetComponent;\n\n        if (!WidgetComponent || !keys) {\n            return null;\n        }\n\n        if (fieldOptions.widgetHocs && fieldOptions.widgetHocs.length) {\n            WidgetComponentWithHoc = (compose(\n                ...fieldOptions.widgetHocs\n            ) as any)(WidgetComponent);\n        }\n\n        return (\n            <WidgetComponentWithHoc key={keys.join(\".\")} {...extraProps} />\n        );\n    }\n}\n\nexport default {\n    [name]: NormalField,\n    default: NormalField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/normal.tsx","import React, { PureComponent } from \"react\";\n\nimport { SchemaForm } from \"../components/form\";\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models/index\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\nimport { compose } from \"recompose\";\n\nexport interface ObjectFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nexport const name = \"object\";\n\n/**\n * Object类型的字段解析\n * 嵌套一层SchemaForm\n */\nexport class ObjectField extends PureComponent<ObjectFieldProps, any> {\n    public render(): JSX.Element | null {\n        const { arrayIndex, arrayLevel, parentKeys, globalOptions, ajv, schemaId, getOptions, reducerKey, uiSchema } = this.props,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc: any = SchemaForm;\n\n        // 如果children设置成null，则返回空\n        if (uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // 如果需要对schemaform对hoc包装\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(SchemaForm);\n        }\n\n        return (\n            <SchemaFormWithHoc\n                arrayIndex={arrayIndex}\n                arrayLevel={arrayLevel}\n                RootComponent={options.Root}\n                reducerKey={reducerKey}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"*\"]}\n                uiSchema={uiSchema}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n}\n\nexport default {\n    [name]: ObjectField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/object.tsx","import React, { PureComponent } from \"react\";\nimport { shouldUpdate, compose } from \"recompose\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, schemaFormTypes } from \"../models/index\";\n\nimport { SchemaForm } from \"../components/form\";\nimport { hocFactory } from \"../factory\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\n\nexport interface ArrayFieldProps extends DefaultProps, UtilsHocOutProps {\n\n}\n\nlet arrayFieldStyle = {\n    width: \"100%\",\n    height: \"100%\"\n};\n\nclass ArrayFieldComponent extends React.PureComponent {\n    public render() {\n        return <div style={arrayFieldStyle}>{this.props.children}</div>;\n    }\n}\n\nexport const name = \"array\";\n\n/**\n * 数组结构的字段解析\n * 这里需要数组元素的个数来做循环\n * 循环生成元素个数的SchemaForm\n */\nexport class ArrayField extends PureComponent<ArrayFieldProps, any> {\n    private SchemaFormWithHoc: new () => React.PureComponent = ArrayFieldComponent;\n    private SchemaFormItemWithHoc: new () => React.PureComponent;\n\n    constructor(props: ArrayFieldProps) {\n        super(props);\n\n        this.initComponent();\n    }\n\n    /**\n     * 初始化Component\n     */\n    private initComponent() {\n        const { uiSchema, formItemData, getOptions } = this.props,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc = null, SchemaFormItemWithHoc = null;\n\n        if (options.formHocs && options.formHocs.constructor === Array) {\n            SchemaFormWithHoc = compose(...options.formHocs)(options.ArrayFieldComponent || ArrayFieldComponent);\n        }\n\n        if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n            SchemaFormItemWithHoc = compose(...options.formItemHocs)(SchemaForm);\n        }\n\n        this.SchemaFormWithHoc = SchemaFormWithHoc;\n        this.SchemaFormItemWithHoc = SchemaFormItemWithHoc;\n    }\n\n    /**\n     * 遍历数据，生成子表单\n     * @param idx 数组的索引\n     */\n    private renderItem(idx: number): JSX.Element | null {\n        const { parentKeys, globalOptions, getOptions, arrayLevel = [], getRequiredKeys, ajv, reducerKey, ArrayItemComponent } = this.props,\n            uiSchema = this.props.uiSchema as FxUiSchema,\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc: any = this.SchemaFormItemWithHoc || SchemaForm;\n        // const extraProps = getRequiredKeys(this.props, options);\n\n        // 如果不需要children，则跳出\n        if (uiSchema.children === null || !uiSchema.schemaPath) {\n            return null;\n        }\n\n        // // 如果需要对schemaform对hoc包装\n        // if (options.formItemHocs && options.formItemHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formItemHocs)(SchemaForm);\n        // }\n\n        return (\n            <SchemaFormWithHoc\n                key={idx}\n                index={idx}\n                arrayIndex={idx}\n                uiSchema={uiSchema}\n                RootComponent={options.Root}\n                ArrayItemComponent={ArrayItemComponent}\n                arrayLevel={arrayLevel.concat([idx])}\n                reducerKey={reducerKey}\n                schemaId={uiSchema.schemaPath}\n                uiSchemas={uiSchema.children || [\"-\"]}\n                parentKeys={parentKeys}\n                globalOptions={globalOptions}\n                ajv={ajv} />\n        );\n    }\n    /**\n     * 渲染页面\n     */\n    public render(): JSX.Element | null {\n        const { uiSchema, formItemData, getOptions, getRequiredKeys } = this.props, child = [],\n            options = getOptions(this.props, schemaFormTypes.field, name);\n        let SchemaFormWithHoc = this.SchemaFormWithHoc;\n        const extraProps = getRequiredKeys(this.props, options.fieldIncludeKeys, options.fieldExcludeKeys);\n\n        for (let i = 0; i < +formItemData; i++) {\n            child.push(this.renderItem(i));\n        }\n\n        // 如果需要对schemaform对hoc包装\n        // if (options.formHocs && options.formHocs.constructor === Array) {\n        //     SchemaFormWithHoc = compose(...options.formHocs)(({ children }) => {\n        //         return <div style={arrayFieldStyle}>{children}</div>;\n        //     });\n\n        //     return <SchemaFormWithHoc {...this.props} children={child} />;\n        // }\n\n        return <SchemaFormWithHoc children={child} {...extraProps} />;\n    }\n}\n\nexport default {\n    [name]: ArrayField\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/fields/array.tsx","\nimport React, { PureComponent } from \"react\";\nimport { compose, withHandlers } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport Immutable from \"immutable\";\nimport ajv, { Ajv, ErrorObject, ValidationError } from \"ajv\";\nimport { schemaFieldFactory, schemaKeysFactory } from \"fx-schema-form-core\";\n\nimport { DefaultProps } from \"../components\";\nimport { FxUiSchema, RC, schemaFormTypes } from \"../models/index\";\nimport { hocFactory, reducerFactory } from \"../factory\";\nimport { TreeMap } from \"./tree\";\nimport { SchemaFormActions } from \"../reducers/schema.form\";\nimport { UtilsHocOutProps } from \"../hocs/utils\";\n\nexport interface SchemaFormHocSettings {\n    rootReducerKey: string[];\n    parentKeys: string[];\n}\n\nexport interface SchemaFormProps extends DefaultProps, UtilsHocOutProps, SchemaFormHocOutProps {\n    root?: TreeMap;\n    data?: any;\n    errors?: any;\n    isValid?: boolean;\n    isValidating?: boolean;\n\n    reducerKey: string;\n    formKey: string;\n    initData?: any;\n}\n\nexport interface SchemaFormHocOutProps {\n    validateAll?: ($async?: boolean) => Promise<any>;\n    resetForm?: () => void;\n}\n\n/**\n * 提供全部验证等功能\n * @param Component 需要包装的组件\n * 加入属性FieldComponent   schema对应的fieldcomponent\n * 加入属性WidgetComponent  schema对应的widgetcomponent\n */\nexport default (settings: SchemaFormHocSettings = { rootReducerKey: [], parentKeys: [] }) => {\n    return (Component: any): RC<SchemaFormProps, any> => {\n        @(compose(\n            hocFactory.get(\"utils\")(),\n            connect((state: Immutable.Map<string, any>) => {\n                let rootKeys = settings.rootReducerKey.concat(settings.parentKeys),\n                    dataKeys = rootKeys.concat([\"data\"]),\n                    metaKeys = rootKeys.concat([\"meta\"]),\n                    root = state.getIn(metaKeys);\n\n                return {\n                    data: state.getIn(dataKeys),\n                    root: root,\n                    isValid: root ? root.value.get(\"isValid\") : true,\n                    errors: root ? root.value.get(\"errors\") : null,\n                    isValidating: root ? root.value.get(\"isLoading\") : false\n                };\n            }),\n            withHandlers({\n                validateAll: (props: SchemaFormProps) => {\n                    let { updateItemMeta } = reducerFactory.get(props.reducerKey).actions, timeId: any;\n\n                    return async (async?: boolean) => {\n                        let root = props.root as TreeMap,\n                            validate = props.ajv.getSchema(props.schemaId),\n                            $validateBeforeData = Immutable.fromJS({\n                                dirty: true,\n                                isValid: true,\n                                isLoading: true\n                            }),\n                            $validateAfterData = Immutable.fromJS({ isLoading: false, dirty: true }),\n                            normalizeDataPath = props.normalizeDataPath;\n\n                        if (!root) {\n                            return;\n                        }\n\n                        if (!validate) {\n                            throw new Error(`没有找到对应的${props.schemaId};`);\n                        }\n\n                        try {\n                            // 将所有的字段的meta数据标准化\n                            root.forEach((node: TreeMap) => {\n                                if (node.value) {\n                                    return node.value.merge($validateBeforeData);\n                                }\n\n                                return $validateBeforeData;\n                            }, true);\n                            // 验收更新meta数据\n                            timeId = setTimeout(() => {\n                                updateItemMeta({\n                                    parentKeys: settings.parentKeys,\n                                    keys: [],\n                                    meta: root.value\n                                });\n                            }, 200);\n\n                            let valRes = await validate(props.data.toJS());\n\n                            if (!valRes) {\n                                throw new (ValidationError as any)(validate.errors);\n                            }\n\n                            root.value = root.value.merge({\n                                isValid: true\n                            });\n\n                            updateItemMeta({\n                                parentKeys: settings.parentKeys,\n                                keys: [],\n                                meta: root.value\n                            });\n\n                        } catch (e) {\n                            if (!(e instanceof (ValidationError as any))) {\n                                return console.error(e);\n                            }\n                            if (!root) {\n                                return;\n                            }\n                            // 处理错误\n                            e.errors.forEach((element: ErrorObject) => {\n                                let dataKeys = root.getCurrentKeys().concat(normalizeDataPath(props.schemaId, element.dataPath));\n                                let childNode = root.containPath(dataKeys);\n\n                                if (!childNode) {\n                                    childNode = root.addChild(dataKeys, Immutable.fromJS({}));\n                                }\n\n                                if (childNode) {\n                                    childNode.value = childNode.value.merge($validateAfterData).merge({\n                                        isValid: false,\n                                        errorText: dataKeys.pop() + \" \" + element.message\n                                    });\n                                }\n                            });\n\n                            root.value = root.value.merge({\n                                isValid: false,\n                                errors: e.errors\n                            });\n                        } finally {\n                            clearTimeout(timeId);\n                            root.forEach((node: TreeMap) => {\n                                if (node.value) {\n                                    return node.value.merge($validateAfterData);\n                                }\n\n                                return node.value;\n                            }, true);\n\n                            updateItemMeta({\n                                parentKeys: settings.parentKeys,\n                                keys: [],\n                                meta: root.value\n                            });\n                        }\n                    };\n                },\n                resetForm: (props: SchemaFormProps) => {\n                    return () => {\n                        if (props.formKey) {\n                            let { createForm } = reducerFactory.get(props.reducerKey).actions;\n\n                            createForm({\n                                key: props.formKey,\n                                data: props.initData || {}\n                            });\n                        }\n                    };\n                }\n            })) as any)\n        class SchemaFormComponentHoc extends PureComponent<SchemaFormProps, any> {\n            private _validateAll: (async?: boolean) => Promise<void>;\n\n            constructor(props: SchemaFormProps) {\n                super(props);\n\n                // 绑定当前的方法，可以使用autobind\n                this._validateAll = props.validateAll.bind(this);\n                // 这里创建一个form，如果当前存在formKey，则覆盖掉当前的数据\n                props.resetForm();\n            }\n\n            public render(): JSX.Element | null {\n                const { errors, isValid = false, isValidating = false, getRequiredKeys, getOptions, schemaId } = this.props;\n                const options = getOptions(this.props, schemaFormTypes.hoc, \"schemaFormDec\");\n                const extraProps = getRequiredKeys(this.props, options.hocIncludeKeys, options.hocExcludeKeys);\n\n                return (\n                    <Component\n                        validateAll={this._validateAll}\n                        parentKeys={settings.parentKeys}\n                        schemaId={schemaId}\n                        {...extraProps} />\n                );\n            }\n        }\n\n        return SchemaFormComponentHoc as any;\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/libs/dec.tsx","module.exports = __WEBPACK_EXTERNAL_MODULE_45__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"Ajv\",\"amd\":\"ajv\",\"commonjs2\":\"ajv\",\"commonjs\":\"ajv\"}\n// module id = 45\n// module chunks = 0"],"sourceRoot":""}